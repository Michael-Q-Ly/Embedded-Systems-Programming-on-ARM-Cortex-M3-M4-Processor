
007_bit_banding.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000cd0  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000080  08000e7c  08000e7c  00010e7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000efc  08000efc  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  08000efc  08000efc  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000efc  08000efc  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000efc  08000efc  00010efc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000f00  08000f00  00010f00  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  08000f04  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000e4  2000006c  08000f70  0002006c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000150  08000f70  00020150  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000013b7  00000000  00000000  00020096  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000378  00000000  00000000  0002144d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000068  00000000  00000000  000217c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000040  00000000  00000000  00021830  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000022c1  00000000  00000000  00021870  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000afa  00000000  00000000  00023b31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008433  00000000  00000000  0002462b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0002ca5e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000097c  00000000  00000000  0002cab4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	2000006c 	.word	0x2000006c
 80001c8:	00000000 	.word	0x00000000
 80001cc:	08000e64 	.word	0x08000e64

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000070 	.word	0x20000070
 80001e8:	08000e64 	.word	0x08000e64

080001ec <strlen>:
 80001ec:	4603      	mov	r3, r0
 80001ee:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f2:	2a00      	cmp	r2, #0
 80001f4:	d1fb      	bne.n	80001ee <strlen+0x2>
 80001f6:	1a18      	subs	r0, r3, r0
 80001f8:	3801      	subs	r0, #1
 80001fa:	4770      	bx	lr

080001fc <main>:
#define BIT                 7

/* Function Prototype(s) */
extern void initialise_monitor_handles(void) ;									        // Debugger

int main(void) {
 80001fc:	b580      	push	{r7, lr}
 80001fe:	b082      	sub	sp, #8
 8000200:	af00      	add	r7, sp, #0
	initialise_monitor_handles() ;												        // Debugger
 8000202:	f000 fac9 	bl	8000798 <initialise_monitor_handles>

    uint8_t *ptr = (uint8_t*)(MEMORY_LOCATION) ;
 8000206:	4b0a      	ldr	r3, [pc, #40]	; (8000230 <main+0x34>)
 8000208:	607b      	str	r3, [r7, #4]
    
    *ptr = 0xFF ;                                                                       // Dereference pointer to store
 800020a:	687b      	ldr	r3, [r7, #4]
 800020c:	22ff      	movs	r2, #255	; 0xff
 800020e:	701a      	strb	r2, [r3, #0]
    // printf("0x%X is stored in location %p\n", *ptr, ptr) ;

    // Normal Method

    // printf("Setting the 7th bit position to 0 using the normal method:\n") ;
    *ptr &= ~(LOCATION_MASK);
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	781b      	ldrb	r3, [r3, #0]
 8000214:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000218:	b2da      	uxtb	r2, r3
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	701a      	strb	r2, [r3, #0]
    // printf("0x%X is stored in location %p now\n", *ptr, ptr) ;

    // Reset ptr to 0xFF
    *ptr = 0xFF ;
 800021e:	687b      	ldr	r3, [r7, #4]
 8000220:	22ff      	movs	r2, #255	; 0xff
 8000222:	701a      	strb	r2, [r3, #0]

    // Bit-Band Method
    uint8_t *alias_addr = (uint8_t*) ( ALIAS_BASE + ( 32 * (MEMORY_LOCATION - BIT_BAND_BASE) ) + (BIT * 4) ) ;
 8000224:	4b03      	ldr	r3, [pc, #12]	; (8000234 <main+0x38>)
 8000226:	603b      	str	r3, [r7, #0]
    // printf("Setting the 7th bit position to 0 using the bit-band method:\n") ;
    // Clearing 7th bit of address 0x20000200
    *alias_addr = 0 ;
 8000228:	683b      	ldr	r3, [r7, #0]
 800022a:	2200      	movs	r2, #0
 800022c:	701a      	strb	r2, [r3, #0]


    /* Loop forever */
	for(;;);
 800022e:	e7fe      	b.n	800022e <main+0x32>
 8000230:	20000200 	.word	0x20000200
 8000234:	2200401c 	.word	0x2200401c

08000238 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000238:	b580      	push	{r7, lr}
 800023a:	b086      	sub	sp, #24
 800023c:	af00      	add	r7, sp, #0
 800023e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000240:	4a14      	ldr	r2, [pc, #80]	; (8000294 <_sbrk+0x5c>)
 8000242:	4b15      	ldr	r3, [pc, #84]	; (8000298 <_sbrk+0x60>)
 8000244:	1ad3      	subs	r3, r2, r3
 8000246:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000248:	697b      	ldr	r3, [r7, #20]
 800024a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800024c:	4b13      	ldr	r3, [pc, #76]	; (800029c <_sbrk+0x64>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	2b00      	cmp	r3, #0
 8000252:	d102      	bne.n	800025a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000254:	4b11      	ldr	r3, [pc, #68]	; (800029c <_sbrk+0x64>)
 8000256:	4a12      	ldr	r2, [pc, #72]	; (80002a0 <_sbrk+0x68>)
 8000258:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800025a:	4b10      	ldr	r3, [pc, #64]	; (800029c <_sbrk+0x64>)
 800025c:	681a      	ldr	r2, [r3, #0]
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	4413      	add	r3, r2
 8000262:	693a      	ldr	r2, [r7, #16]
 8000264:	429a      	cmp	r2, r3
 8000266:	d207      	bcs.n	8000278 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000268:	f000 f846 	bl	80002f8 <__errno>
 800026c:	4603      	mov	r3, r0
 800026e:	220c      	movs	r2, #12
 8000270:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000272:	f04f 33ff 	mov.w	r3, #4294967295
 8000276:	e009      	b.n	800028c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000278:	4b08      	ldr	r3, [pc, #32]	; (800029c <_sbrk+0x64>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800027e:	4b07      	ldr	r3, [pc, #28]	; (800029c <_sbrk+0x64>)
 8000280:	681a      	ldr	r2, [r3, #0]
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	4413      	add	r3, r2
 8000286:	4a05      	ldr	r2, [pc, #20]	; (800029c <_sbrk+0x64>)
 8000288:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800028a:	68fb      	ldr	r3, [r7, #12]
}
 800028c:	4618      	mov	r0, r3
 800028e:	3718      	adds	r7, #24
 8000290:	46bd      	mov	sp, r7
 8000292:	bd80      	pop	{r7, pc}
 8000294:	20030000 	.word	0x20030000
 8000298:	00000400 	.word	0x00000400
 800029c:	20000088 	.word	0x20000088
 80002a0:	20000150 	.word	0x20000150

080002a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a4:	480d      	ldr	r0, [pc, #52]	; (80002dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002a8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002ac:	480c      	ldr	r0, [pc, #48]	; (80002e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ae:	490d      	ldr	r1, [pc, #52]	; (80002e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b0:	4a0d      	ldr	r2, [pc, #52]	; (80002e8 <LoopForever+0xe>)
  movs r3, #0
 80002b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b4:	e002      	b.n	80002bc <LoopCopyDataInit>

080002b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ba:	3304      	adds	r3, #4

080002bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c0:	d3f9      	bcc.n	80002b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002c2:	4a0a      	ldr	r2, [pc, #40]	; (80002ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c4:	4c0a      	ldr	r4, [pc, #40]	; (80002f0 <LoopForever+0x16>)
  movs r3, #0
 80002c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c8:	e001      	b.n	80002ce <LoopFillZerobss>

080002ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002cc:	3204      	adds	r2, #4

080002ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d0:	d3fb      	bcc.n	80002ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002d2:	f000 f817 	bl	8000304 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002d6:	f7ff ff91 	bl	80001fc <main>

080002da <LoopForever>:

LoopForever:
    b LoopForever
 80002da:	e7fe      	b.n	80002da <LoopForever>
  ldr   r0, =_estack
 80002dc:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80002e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e4:	2000006c 	.word	0x2000006c
  ldr r2, =_sidata
 80002e8:	08000f04 	.word	0x08000f04
  ldr r2, =_sbss
 80002ec:	2000006c 	.word	0x2000006c
  ldr r4, =_ebss
 80002f0:	20000150 	.word	0x20000150

080002f4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f4:	e7fe      	b.n	80002f4 <ADC_IRQHandler>
	...

080002f8 <__errno>:
 80002f8:	4b01      	ldr	r3, [pc, #4]	; (8000300 <__errno+0x8>)
 80002fa:	6818      	ldr	r0, [r3, #0]
 80002fc:	4770      	bx	lr
 80002fe:	bf00      	nop
 8000300:	20000000 	.word	0x20000000

08000304 <__libc_init_array>:
 8000304:	b570      	push	{r4, r5, r6, lr}
 8000306:	4d0d      	ldr	r5, [pc, #52]	; (800033c <__libc_init_array+0x38>)
 8000308:	4c0d      	ldr	r4, [pc, #52]	; (8000340 <__libc_init_array+0x3c>)
 800030a:	1b64      	subs	r4, r4, r5
 800030c:	10a4      	asrs	r4, r4, #2
 800030e:	2600      	movs	r6, #0
 8000310:	42a6      	cmp	r6, r4
 8000312:	d109      	bne.n	8000328 <__libc_init_array+0x24>
 8000314:	4d0b      	ldr	r5, [pc, #44]	; (8000344 <__libc_init_array+0x40>)
 8000316:	4c0c      	ldr	r4, [pc, #48]	; (8000348 <__libc_init_array+0x44>)
 8000318:	f000 fda4 	bl	8000e64 <_init>
 800031c:	1b64      	subs	r4, r4, r5
 800031e:	10a4      	asrs	r4, r4, #2
 8000320:	2600      	movs	r6, #0
 8000322:	42a6      	cmp	r6, r4
 8000324:	d105      	bne.n	8000332 <__libc_init_array+0x2e>
 8000326:	bd70      	pop	{r4, r5, r6, pc}
 8000328:	f855 3b04 	ldr.w	r3, [r5], #4
 800032c:	4798      	blx	r3
 800032e:	3601      	adds	r6, #1
 8000330:	e7ee      	b.n	8000310 <__libc_init_array+0xc>
 8000332:	f855 3b04 	ldr.w	r3, [r5], #4
 8000336:	4798      	blx	r3
 8000338:	3601      	adds	r6, #1
 800033a:	e7f2      	b.n	8000322 <__libc_init_array+0x1e>
 800033c:	08000efc 	.word	0x08000efc
 8000340:	08000efc 	.word	0x08000efc
 8000344:	08000efc 	.word	0x08000efc
 8000348:	08000f00 	.word	0x08000f00

0800034c <memset>:
 800034c:	4402      	add	r2, r0
 800034e:	4603      	mov	r3, r0
 8000350:	4293      	cmp	r3, r2
 8000352:	d100      	bne.n	8000356 <memset+0xa>
 8000354:	4770      	bx	lr
 8000356:	f803 1b01 	strb.w	r1, [r3], #1
 800035a:	e7f9      	b.n	8000350 <memset+0x4>

0800035c <findslot>:
 800035c:	4b0a      	ldr	r3, [pc, #40]	; (8000388 <findslot+0x2c>)
 800035e:	b510      	push	{r4, lr}
 8000360:	4604      	mov	r4, r0
 8000362:	6818      	ldr	r0, [r3, #0]
 8000364:	b118      	cbz	r0, 800036e <findslot+0x12>
 8000366:	6983      	ldr	r3, [r0, #24]
 8000368:	b90b      	cbnz	r3, 800036e <findslot+0x12>
 800036a:	f000 facb 	bl	8000904 <__sinit>
 800036e:	2c13      	cmp	r4, #19
 8000370:	d807      	bhi.n	8000382 <findslot+0x26>
 8000372:	4806      	ldr	r0, [pc, #24]	; (800038c <findslot+0x30>)
 8000374:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8000378:	3201      	adds	r2, #1
 800037a:	d002      	beq.n	8000382 <findslot+0x26>
 800037c:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8000380:	bd10      	pop	{r4, pc}
 8000382:	2000      	movs	r0, #0
 8000384:	e7fc      	b.n	8000380 <findslot+0x24>
 8000386:	bf00      	nop
 8000388:	20000000 	.word	0x20000000
 800038c:	20000098 	.word	0x20000098

08000390 <checkerror>:
 8000390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000392:	1c43      	adds	r3, r0, #1
 8000394:	4604      	mov	r4, r0
 8000396:	d109      	bne.n	80003ac <checkerror+0x1c>
 8000398:	f7ff ffae 	bl	80002f8 <__errno>
 800039c:	2613      	movs	r6, #19
 800039e:	4605      	mov	r5, r0
 80003a0:	2700      	movs	r7, #0
 80003a2:	4630      	mov	r0, r6
 80003a4:	4639      	mov	r1, r7
 80003a6:	beab      	bkpt	0x00ab
 80003a8:	4606      	mov	r6, r0
 80003aa:	602e      	str	r6, [r5, #0]
 80003ac:	4620      	mov	r0, r4
 80003ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080003b0 <error>:
 80003b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003b2:	4604      	mov	r4, r0
 80003b4:	f7ff ffa0 	bl	80002f8 <__errno>
 80003b8:	2613      	movs	r6, #19
 80003ba:	4605      	mov	r5, r0
 80003bc:	2700      	movs	r7, #0
 80003be:	4630      	mov	r0, r6
 80003c0:	4639      	mov	r1, r7
 80003c2:	beab      	bkpt	0x00ab
 80003c4:	4606      	mov	r6, r0
 80003c6:	602e      	str	r6, [r5, #0]
 80003c8:	4620      	mov	r0, r4
 80003ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080003cc <_swiread>:
 80003cc:	b530      	push	{r4, r5, lr}
 80003ce:	b085      	sub	sp, #20
 80003d0:	e9cd 0101 	strd	r0, r1, [sp, #4]
 80003d4:	9203      	str	r2, [sp, #12]
 80003d6:	2406      	movs	r4, #6
 80003d8:	ad01      	add	r5, sp, #4
 80003da:	4620      	mov	r0, r4
 80003dc:	4629      	mov	r1, r5
 80003de:	beab      	bkpt	0x00ab
 80003e0:	4604      	mov	r4, r0
 80003e2:	4620      	mov	r0, r4
 80003e4:	f7ff ffd4 	bl	8000390 <checkerror>
 80003e8:	b005      	add	sp, #20
 80003ea:	bd30      	pop	{r4, r5, pc}

080003ec <_read>:
 80003ec:	b570      	push	{r4, r5, r6, lr}
 80003ee:	460e      	mov	r6, r1
 80003f0:	4615      	mov	r5, r2
 80003f2:	f7ff ffb3 	bl	800035c <findslot>
 80003f6:	4604      	mov	r4, r0
 80003f8:	b930      	cbnz	r0, 8000408 <_read+0x1c>
 80003fa:	f7ff ff7d 	bl	80002f8 <__errno>
 80003fe:	2309      	movs	r3, #9
 8000400:	6003      	str	r3, [r0, #0]
 8000402:	f04f 30ff 	mov.w	r0, #4294967295
 8000406:	bd70      	pop	{r4, r5, r6, pc}
 8000408:	6800      	ldr	r0, [r0, #0]
 800040a:	462a      	mov	r2, r5
 800040c:	4631      	mov	r1, r6
 800040e:	f7ff ffdd 	bl	80003cc <_swiread>
 8000412:	1c43      	adds	r3, r0, #1
 8000414:	bf1f      	itttt	ne
 8000416:	6863      	ldrne	r3, [r4, #4]
 8000418:	1a28      	subne	r0, r5, r0
 800041a:	181b      	addne	r3, r3, r0
 800041c:	6063      	strne	r3, [r4, #4]
 800041e:	e7f2      	b.n	8000406 <_read+0x1a>

08000420 <_swilseek>:
 8000420:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000422:	460c      	mov	r4, r1
 8000424:	4616      	mov	r6, r2
 8000426:	f7ff ff99 	bl	800035c <findslot>
 800042a:	4605      	mov	r5, r0
 800042c:	b940      	cbnz	r0, 8000440 <_swilseek+0x20>
 800042e:	f7ff ff63 	bl	80002f8 <__errno>
 8000432:	2309      	movs	r3, #9
 8000434:	6003      	str	r3, [r0, #0]
 8000436:	f04f 34ff 	mov.w	r4, #4294967295
 800043a:	4620      	mov	r0, r4
 800043c:	b003      	add	sp, #12
 800043e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000440:	2e02      	cmp	r6, #2
 8000442:	d903      	bls.n	800044c <_swilseek+0x2c>
 8000444:	f7ff ff58 	bl	80002f8 <__errno>
 8000448:	2316      	movs	r3, #22
 800044a:	e7f3      	b.n	8000434 <_swilseek+0x14>
 800044c:	2e01      	cmp	r6, #1
 800044e:	d112      	bne.n	8000476 <_swilseek+0x56>
 8000450:	6843      	ldr	r3, [r0, #4]
 8000452:	18e4      	adds	r4, r4, r3
 8000454:	d4f6      	bmi.n	8000444 <_swilseek+0x24>
 8000456:	682b      	ldr	r3, [r5, #0]
 8000458:	260a      	movs	r6, #10
 800045a:	e9cd 3400 	strd	r3, r4, [sp]
 800045e:	466f      	mov	r7, sp
 8000460:	4630      	mov	r0, r6
 8000462:	4639      	mov	r1, r7
 8000464:	beab      	bkpt	0x00ab
 8000466:	4606      	mov	r6, r0
 8000468:	4630      	mov	r0, r6
 800046a:	f7ff ff91 	bl	8000390 <checkerror>
 800046e:	2800      	cmp	r0, #0
 8000470:	dbe1      	blt.n	8000436 <_swilseek+0x16>
 8000472:	606c      	str	r4, [r5, #4]
 8000474:	e7e1      	b.n	800043a <_swilseek+0x1a>
 8000476:	2e02      	cmp	r6, #2
 8000478:	d1ed      	bne.n	8000456 <_swilseek+0x36>
 800047a:	6803      	ldr	r3, [r0, #0]
 800047c:	9300      	str	r3, [sp, #0]
 800047e:	260c      	movs	r6, #12
 8000480:	466f      	mov	r7, sp
 8000482:	4630      	mov	r0, r6
 8000484:	4639      	mov	r1, r7
 8000486:	beab      	bkpt	0x00ab
 8000488:	4606      	mov	r6, r0
 800048a:	4630      	mov	r0, r6
 800048c:	f7ff ff80 	bl	8000390 <checkerror>
 8000490:	1c43      	adds	r3, r0, #1
 8000492:	d0d0      	beq.n	8000436 <_swilseek+0x16>
 8000494:	4404      	add	r4, r0
 8000496:	e7de      	b.n	8000456 <_swilseek+0x36>

08000498 <_lseek>:
 8000498:	f7ff bfc2 	b.w	8000420 <_swilseek>

0800049c <_swiwrite>:
 800049c:	b530      	push	{r4, r5, lr}
 800049e:	b085      	sub	sp, #20
 80004a0:	e9cd 0101 	strd	r0, r1, [sp, #4]
 80004a4:	9203      	str	r2, [sp, #12]
 80004a6:	2405      	movs	r4, #5
 80004a8:	ad01      	add	r5, sp, #4
 80004aa:	4620      	mov	r0, r4
 80004ac:	4629      	mov	r1, r5
 80004ae:	beab      	bkpt	0x00ab
 80004b0:	4604      	mov	r4, r0
 80004b2:	4620      	mov	r0, r4
 80004b4:	f7ff ff6c 	bl	8000390 <checkerror>
 80004b8:	b005      	add	sp, #20
 80004ba:	bd30      	pop	{r4, r5, pc}

080004bc <_write>:
 80004bc:	b570      	push	{r4, r5, r6, lr}
 80004be:	460e      	mov	r6, r1
 80004c0:	4615      	mov	r5, r2
 80004c2:	f7ff ff4b 	bl	800035c <findslot>
 80004c6:	4604      	mov	r4, r0
 80004c8:	b930      	cbnz	r0, 80004d8 <_write+0x1c>
 80004ca:	f7ff ff15 	bl	80002f8 <__errno>
 80004ce:	2309      	movs	r3, #9
 80004d0:	6003      	str	r3, [r0, #0]
 80004d2:	f04f 30ff 	mov.w	r0, #4294967295
 80004d6:	bd70      	pop	{r4, r5, r6, pc}
 80004d8:	6800      	ldr	r0, [r0, #0]
 80004da:	462a      	mov	r2, r5
 80004dc:	4631      	mov	r1, r6
 80004de:	f7ff ffdd 	bl	800049c <_swiwrite>
 80004e2:	1e03      	subs	r3, r0, #0
 80004e4:	dbf5      	blt.n	80004d2 <_write+0x16>
 80004e6:	6862      	ldr	r2, [r4, #4]
 80004e8:	1ae8      	subs	r0, r5, r3
 80004ea:	4402      	add	r2, r0
 80004ec:	42ab      	cmp	r3, r5
 80004ee:	6062      	str	r2, [r4, #4]
 80004f0:	d1f1      	bne.n	80004d6 <_write+0x1a>
 80004f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80004f6:	2000      	movs	r0, #0
 80004f8:	f7ff bf5a 	b.w	80003b0 <error>

080004fc <_swiclose>:
 80004fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80004fe:	2402      	movs	r4, #2
 8000500:	9001      	str	r0, [sp, #4]
 8000502:	ad01      	add	r5, sp, #4
 8000504:	4620      	mov	r0, r4
 8000506:	4629      	mov	r1, r5
 8000508:	beab      	bkpt	0x00ab
 800050a:	4604      	mov	r4, r0
 800050c:	4620      	mov	r0, r4
 800050e:	f7ff ff3f 	bl	8000390 <checkerror>
 8000512:	b003      	add	sp, #12
 8000514:	bd30      	pop	{r4, r5, pc}
	...

08000518 <_close>:
 8000518:	b538      	push	{r3, r4, r5, lr}
 800051a:	4605      	mov	r5, r0
 800051c:	f7ff ff1e 	bl	800035c <findslot>
 8000520:	4604      	mov	r4, r0
 8000522:	b930      	cbnz	r0, 8000532 <_close+0x1a>
 8000524:	f7ff fee8 	bl	80002f8 <__errno>
 8000528:	2309      	movs	r3, #9
 800052a:	6003      	str	r3, [r0, #0]
 800052c:	f04f 30ff 	mov.w	r0, #4294967295
 8000530:	bd38      	pop	{r3, r4, r5, pc}
 8000532:	3d01      	subs	r5, #1
 8000534:	2d01      	cmp	r5, #1
 8000536:	d809      	bhi.n	800054c <_close+0x34>
 8000538:	4b09      	ldr	r3, [pc, #36]	; (8000560 <_close+0x48>)
 800053a:	689a      	ldr	r2, [r3, #8]
 800053c:	691b      	ldr	r3, [r3, #16]
 800053e:	429a      	cmp	r2, r3
 8000540:	d104      	bne.n	800054c <_close+0x34>
 8000542:	f04f 33ff 	mov.w	r3, #4294967295
 8000546:	6003      	str	r3, [r0, #0]
 8000548:	2000      	movs	r0, #0
 800054a:	e7f1      	b.n	8000530 <_close+0x18>
 800054c:	6820      	ldr	r0, [r4, #0]
 800054e:	f7ff ffd5 	bl	80004fc <_swiclose>
 8000552:	2800      	cmp	r0, #0
 8000554:	d1ec      	bne.n	8000530 <_close+0x18>
 8000556:	f04f 33ff 	mov.w	r3, #4294967295
 800055a:	6023      	str	r3, [r4, #0]
 800055c:	e7e8      	b.n	8000530 <_close+0x18>
 800055e:	bf00      	nop
 8000560:	20000098 	.word	0x20000098

08000564 <_swistat>:
 8000564:	b570      	push	{r4, r5, r6, lr}
 8000566:	460c      	mov	r4, r1
 8000568:	f7ff fef8 	bl	800035c <findslot>
 800056c:	4605      	mov	r5, r0
 800056e:	b930      	cbnz	r0, 800057e <_swistat+0x1a>
 8000570:	f7ff fec2 	bl	80002f8 <__errno>
 8000574:	2309      	movs	r3, #9
 8000576:	6003      	str	r3, [r0, #0]
 8000578:	f04f 30ff 	mov.w	r0, #4294967295
 800057c:	bd70      	pop	{r4, r5, r6, pc}
 800057e:	6863      	ldr	r3, [r4, #4]
 8000580:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000584:	6063      	str	r3, [r4, #4]
 8000586:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800058a:	64a3      	str	r3, [r4, #72]	; 0x48
 800058c:	260c      	movs	r6, #12
 800058e:	4630      	mov	r0, r6
 8000590:	4629      	mov	r1, r5
 8000592:	beab      	bkpt	0x00ab
 8000594:	4605      	mov	r5, r0
 8000596:	4628      	mov	r0, r5
 8000598:	f7ff fefa 	bl	8000390 <checkerror>
 800059c:	1c43      	adds	r3, r0, #1
 800059e:	bf1c      	itt	ne
 80005a0:	6120      	strne	r0, [r4, #16]
 80005a2:	2000      	movne	r0, #0
 80005a4:	e7ea      	b.n	800057c <_swistat+0x18>

080005a6 <_stat>:
 80005a6:	b538      	push	{r3, r4, r5, lr}
 80005a8:	460d      	mov	r5, r1
 80005aa:	4604      	mov	r4, r0
 80005ac:	2258      	movs	r2, #88	; 0x58
 80005ae:	2100      	movs	r1, #0
 80005b0:	4628      	mov	r0, r5
 80005b2:	f7ff fecb 	bl	800034c <memset>
 80005b6:	4620      	mov	r0, r4
 80005b8:	2100      	movs	r1, #0
 80005ba:	f000 f811 	bl	80005e0 <_swiopen>
 80005be:	1c43      	adds	r3, r0, #1
 80005c0:	4604      	mov	r4, r0
 80005c2:	d00b      	beq.n	80005dc <_stat+0x36>
 80005c4:	686b      	ldr	r3, [r5, #4]
 80005c6:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 80005ca:	606b      	str	r3, [r5, #4]
 80005cc:	4629      	mov	r1, r5
 80005ce:	f7ff ffc9 	bl	8000564 <_swistat>
 80005d2:	4605      	mov	r5, r0
 80005d4:	4620      	mov	r0, r4
 80005d6:	f7ff ff9f 	bl	8000518 <_close>
 80005da:	462c      	mov	r4, r5
 80005dc:	4620      	mov	r0, r4
 80005de:	bd38      	pop	{r3, r4, r5, pc}

080005e0 <_swiopen>:
 80005e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80005e4:	4b2a      	ldr	r3, [pc, #168]	; (8000690 <_swiopen+0xb0>)
 80005e6:	b097      	sub	sp, #92	; 0x5c
 80005e8:	4681      	mov	r9, r0
 80005ea:	460f      	mov	r7, r1
 80005ec:	2500      	movs	r5, #0
 80005ee:	461e      	mov	r6, r3
 80005f0:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 80005f4:	1c61      	adds	r1, r4, #1
 80005f6:	d037      	beq.n	8000668 <_swiopen+0x88>
 80005f8:	3501      	adds	r5, #1
 80005fa:	2d14      	cmp	r5, #20
 80005fc:	d1f8      	bne.n	80005f0 <_swiopen+0x10>
 80005fe:	f7ff fe7b 	bl	80002f8 <__errno>
 8000602:	2318      	movs	r3, #24
 8000604:	6003      	str	r3, [r0, #0]
 8000606:	f04f 34ff 	mov.w	r4, #4294967295
 800060a:	e03d      	b.n	8000688 <_swiopen+0xa8>
 800060c:	f3c7 4400 	ubfx	r4, r7, #16, #1
 8000610:	f240 6301 	movw	r3, #1537	; 0x601
 8000614:	07ba      	lsls	r2, r7, #30
 8000616:	bf48      	it	mi
 8000618:	f044 0402 	orrmi.w	r4, r4, #2
 800061c:	421f      	tst	r7, r3
 800061e:	bf18      	it	ne
 8000620:	f044 0404 	orrne.w	r4, r4, #4
 8000624:	073b      	lsls	r3, r7, #28
 8000626:	bf48      	it	mi
 8000628:	f024 0404 	bicmi.w	r4, r4, #4
 800062c:	4648      	mov	r0, r9
 800062e:	bf48      	it	mi
 8000630:	f044 0408 	orrmi.w	r4, r4, #8
 8000634:	f8cd 9000 	str.w	r9, [sp]
 8000638:	f7ff fdd8 	bl	80001ec <strlen>
 800063c:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8000640:	2401      	movs	r4, #1
 8000642:	4620      	mov	r0, r4
 8000644:	4641      	mov	r1, r8
 8000646:	beab      	bkpt	0x00ab
 8000648:	4604      	mov	r4, r0
 800064a:	2c00      	cmp	r4, #0
 800064c:	db07      	blt.n	800065e <_swiopen+0x7e>
 800064e:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 8000652:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 8000656:	2300      	movs	r3, #0
 8000658:	6073      	str	r3, [r6, #4]
 800065a:	462c      	mov	r4, r5
 800065c:	e014      	b.n	8000688 <_swiopen+0xa8>
 800065e:	4620      	mov	r0, r4
 8000660:	f7ff fea6 	bl	80003b0 <error>
 8000664:	4604      	mov	r4, r0
 8000666:	e00f      	b.n	8000688 <_swiopen+0xa8>
 8000668:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 800066c:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8000670:	46e8      	mov	r8, sp
 8000672:	d1cb      	bne.n	800060c <_swiopen+0x2c>
 8000674:	4641      	mov	r1, r8
 8000676:	4648      	mov	r0, r9
 8000678:	f7ff ff95 	bl	80005a6 <_stat>
 800067c:	3001      	adds	r0, #1
 800067e:	d0c5      	beq.n	800060c <_swiopen+0x2c>
 8000680:	f7ff fe3a 	bl	80002f8 <__errno>
 8000684:	2311      	movs	r3, #17
 8000686:	6003      	str	r3, [r0, #0]
 8000688:	4620      	mov	r0, r4
 800068a:	b017      	add	sp, #92	; 0x5c
 800068c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000690:	20000098 	.word	0x20000098

08000694 <_get_semihosting_exts>:
 8000694:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8000698:	4606      	mov	r6, r0
 800069a:	460f      	mov	r7, r1
 800069c:	482a      	ldr	r0, [pc, #168]	; (8000748 <_get_semihosting_exts+0xb4>)
 800069e:	2100      	movs	r1, #0
 80006a0:	4615      	mov	r5, r2
 80006a2:	f7ff ff9d 	bl	80005e0 <_swiopen>
 80006a6:	462a      	mov	r2, r5
 80006a8:	4604      	mov	r4, r0
 80006aa:	2100      	movs	r1, #0
 80006ac:	4630      	mov	r0, r6
 80006ae:	f7ff fe4d 	bl	800034c <memset>
 80006b2:	1c63      	adds	r3, r4, #1
 80006b4:	d016      	beq.n	80006e4 <_get_semihosting_exts+0x50>
 80006b6:	4620      	mov	r0, r4
 80006b8:	f7ff fe50 	bl	800035c <findslot>
 80006bc:	f04f 080c 	mov.w	r8, #12
 80006c0:	4681      	mov	r9, r0
 80006c2:	4640      	mov	r0, r8
 80006c4:	4649      	mov	r1, r9
 80006c6:	beab      	bkpt	0x00ab
 80006c8:	4680      	mov	r8, r0
 80006ca:	4640      	mov	r0, r8
 80006cc:	f7ff fe60 	bl	8000390 <checkerror>
 80006d0:	2803      	cmp	r0, #3
 80006d2:	dd02      	ble.n	80006da <_get_semihosting_exts+0x46>
 80006d4:	1ec3      	subs	r3, r0, #3
 80006d6:	42ab      	cmp	r3, r5
 80006d8:	dc08      	bgt.n	80006ec <_get_semihosting_exts+0x58>
 80006da:	4620      	mov	r0, r4
 80006dc:	f7ff ff1c 	bl	8000518 <_close>
 80006e0:	f04f 34ff 	mov.w	r4, #4294967295
 80006e4:	4620      	mov	r0, r4
 80006e6:	b003      	add	sp, #12
 80006e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80006ec:	2204      	movs	r2, #4
 80006ee:	eb0d 0102 	add.w	r1, sp, r2
 80006f2:	4620      	mov	r0, r4
 80006f4:	f7ff fe7a 	bl	80003ec <_read>
 80006f8:	2803      	cmp	r0, #3
 80006fa:	ddee      	ble.n	80006da <_get_semihosting_exts+0x46>
 80006fc:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000700:	2b53      	cmp	r3, #83	; 0x53
 8000702:	d1ea      	bne.n	80006da <_get_semihosting_exts+0x46>
 8000704:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8000708:	2b48      	cmp	r3, #72	; 0x48
 800070a:	d1e6      	bne.n	80006da <_get_semihosting_exts+0x46>
 800070c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8000710:	2b46      	cmp	r3, #70	; 0x46
 8000712:	d1e2      	bne.n	80006da <_get_semihosting_exts+0x46>
 8000714:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8000718:	2b42      	cmp	r3, #66	; 0x42
 800071a:	d1de      	bne.n	80006da <_get_semihosting_exts+0x46>
 800071c:	2201      	movs	r2, #1
 800071e:	4639      	mov	r1, r7
 8000720:	4620      	mov	r0, r4
 8000722:	f7ff fe7d 	bl	8000420 <_swilseek>
 8000726:	2800      	cmp	r0, #0
 8000728:	dbd7      	blt.n	80006da <_get_semihosting_exts+0x46>
 800072a:	462a      	mov	r2, r5
 800072c:	4631      	mov	r1, r6
 800072e:	4620      	mov	r0, r4
 8000730:	f7ff fe5c 	bl	80003ec <_read>
 8000734:	4605      	mov	r5, r0
 8000736:	4620      	mov	r0, r4
 8000738:	f7ff feee 	bl	8000518 <_close>
 800073c:	4628      	mov	r0, r5
 800073e:	f7ff fe27 	bl	8000390 <checkerror>
 8000742:	4604      	mov	r4, r0
 8000744:	e7ce      	b.n	80006e4 <_get_semihosting_exts+0x50>
 8000746:	bf00      	nop
 8000748:	08000e80 	.word	0x08000e80

0800074c <initialise_semihosting_exts>:
 800074c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800074e:	4d0a      	ldr	r5, [pc, #40]	; (8000778 <initialise_semihosting_exts+0x2c>)
 8000750:	4c0a      	ldr	r4, [pc, #40]	; (800077c <initialise_semihosting_exts+0x30>)
 8000752:	2100      	movs	r1, #0
 8000754:	2201      	movs	r2, #1
 8000756:	a801      	add	r0, sp, #4
 8000758:	6029      	str	r1, [r5, #0]
 800075a:	6022      	str	r2, [r4, #0]
 800075c:	f7ff ff9a 	bl	8000694 <_get_semihosting_exts>
 8000760:	2800      	cmp	r0, #0
 8000762:	dd07      	ble.n	8000774 <initialise_semihosting_exts+0x28>
 8000764:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000768:	f003 0201 	and.w	r2, r3, #1
 800076c:	f003 0302 	and.w	r3, r3, #2
 8000770:	602a      	str	r2, [r5, #0]
 8000772:	6023      	str	r3, [r4, #0]
 8000774:	b003      	add	sp, #12
 8000776:	bd30      	pop	{r4, r5, pc}
 8000778:	20000064 	.word	0x20000064
 800077c:	20000068 	.word	0x20000068

08000780 <_has_ext_stdout_stderr>:
 8000780:	b510      	push	{r4, lr}
 8000782:	4c04      	ldr	r4, [pc, #16]	; (8000794 <_has_ext_stdout_stderr+0x14>)
 8000784:	6822      	ldr	r2, [r4, #0]
 8000786:	2a00      	cmp	r2, #0
 8000788:	da01      	bge.n	800078e <_has_ext_stdout_stderr+0xe>
 800078a:	f7ff ffdf 	bl	800074c <initialise_semihosting_exts>
 800078e:	6820      	ldr	r0, [r4, #0]
 8000790:	bd10      	pop	{r4, pc}
 8000792:	bf00      	nop
 8000794:	20000068 	.word	0x20000068

08000798 <initialise_monitor_handles>:
 8000798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800079c:	b085      	sub	sp, #20
 800079e:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8000850 <initialise_monitor_handles+0xb8>
 80007a2:	f8cd 9004 	str.w	r9, [sp, #4]
 80007a6:	2303      	movs	r3, #3
 80007a8:	2400      	movs	r4, #0
 80007aa:	9303      	str	r3, [sp, #12]
 80007ac:	f10d 0804 	add.w	r8, sp, #4
 80007b0:	9402      	str	r4, [sp, #8]
 80007b2:	2501      	movs	r5, #1
 80007b4:	4628      	mov	r0, r5
 80007b6:	4641      	mov	r1, r8
 80007b8:	beab      	bkpt	0x00ab
 80007ba:	4605      	mov	r5, r0
 80007bc:	4e20      	ldr	r6, [pc, #128]	; (8000840 <initialise_monitor_handles+0xa8>)
 80007be:	4a21      	ldr	r2, [pc, #132]	; (8000844 <initialise_monitor_handles+0xac>)
 80007c0:	6035      	str	r5, [r6, #0]
 80007c2:	4623      	mov	r3, r4
 80007c4:	f04f 31ff 	mov.w	r1, #4294967295
 80007c8:	4614      	mov	r4, r2
 80007ca:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 80007ce:	3301      	adds	r3, #1
 80007d0:	2b14      	cmp	r3, #20
 80007d2:	d1fa      	bne.n	80007ca <initialise_monitor_handles+0x32>
 80007d4:	f7ff ffd4 	bl	8000780 <_has_ext_stdout_stderr>
 80007d8:	4d1b      	ldr	r5, [pc, #108]	; (8000848 <initialise_monitor_handles+0xb0>)
 80007da:	b1d0      	cbz	r0, 8000812 <initialise_monitor_handles+0x7a>
 80007dc:	f04f 0a03 	mov.w	sl, #3
 80007e0:	2304      	movs	r3, #4
 80007e2:	f8cd 9004 	str.w	r9, [sp, #4]
 80007e6:	2701      	movs	r7, #1
 80007e8:	f8cd a00c 	str.w	sl, [sp, #12]
 80007ec:	9302      	str	r3, [sp, #8]
 80007ee:	4638      	mov	r0, r7
 80007f0:	4641      	mov	r1, r8
 80007f2:	beab      	bkpt	0x00ab
 80007f4:	4683      	mov	fp, r0
 80007f6:	4b15      	ldr	r3, [pc, #84]	; (800084c <initialise_monitor_handles+0xb4>)
 80007f8:	f8cd 9004 	str.w	r9, [sp, #4]
 80007fc:	f8c3 b000 	str.w	fp, [r3]
 8000800:	2308      	movs	r3, #8
 8000802:	f8cd a00c 	str.w	sl, [sp, #12]
 8000806:	9302      	str	r3, [sp, #8]
 8000808:	4638      	mov	r0, r7
 800080a:	4641      	mov	r1, r8
 800080c:	beab      	bkpt	0x00ab
 800080e:	4607      	mov	r7, r0
 8000810:	602f      	str	r7, [r5, #0]
 8000812:	682b      	ldr	r3, [r5, #0]
 8000814:	3301      	adds	r3, #1
 8000816:	bf02      	ittt	eq
 8000818:	4b0c      	ldreq	r3, [pc, #48]	; (800084c <initialise_monitor_handles+0xb4>)
 800081a:	681b      	ldreq	r3, [r3, #0]
 800081c:	602b      	streq	r3, [r5, #0]
 800081e:	6833      	ldr	r3, [r6, #0]
 8000820:	6023      	str	r3, [r4, #0]
 8000822:	2600      	movs	r6, #0
 8000824:	6066      	str	r6, [r4, #4]
 8000826:	f7ff ffab 	bl	8000780 <_has_ext_stdout_stderr>
 800082a:	b130      	cbz	r0, 800083a <initialise_monitor_handles+0xa2>
 800082c:	4b07      	ldr	r3, [pc, #28]	; (800084c <initialise_monitor_handles+0xb4>)
 800082e:	681b      	ldr	r3, [r3, #0]
 8000830:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8000834:	682b      	ldr	r3, [r5, #0]
 8000836:	e9c4 3604 	strd	r3, r6, [r4, #16]
 800083a:	b005      	add	sp, #20
 800083c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000840:	20000090 	.word	0x20000090
 8000844:	20000098 	.word	0x20000098
 8000848:	2000008c 	.word	0x2000008c
 800084c:	20000094 	.word	0x20000094
 8000850:	08000e96 	.word	0x08000e96

08000854 <std>:
 8000854:	2300      	movs	r3, #0
 8000856:	b510      	push	{r4, lr}
 8000858:	4604      	mov	r4, r0
 800085a:	e9c0 3300 	strd	r3, r3, [r0]
 800085e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000862:	6083      	str	r3, [r0, #8]
 8000864:	8181      	strh	r1, [r0, #12]
 8000866:	6643      	str	r3, [r0, #100]	; 0x64
 8000868:	81c2      	strh	r2, [r0, #14]
 800086a:	6183      	str	r3, [r0, #24]
 800086c:	4619      	mov	r1, r3
 800086e:	2208      	movs	r2, #8
 8000870:	305c      	adds	r0, #92	; 0x5c
 8000872:	f7ff fd6b 	bl	800034c <memset>
 8000876:	4b05      	ldr	r3, [pc, #20]	; (800088c <std+0x38>)
 8000878:	6263      	str	r3, [r4, #36]	; 0x24
 800087a:	4b05      	ldr	r3, [pc, #20]	; (8000890 <std+0x3c>)
 800087c:	62a3      	str	r3, [r4, #40]	; 0x28
 800087e:	4b05      	ldr	r3, [pc, #20]	; (8000894 <std+0x40>)
 8000880:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000882:	4b05      	ldr	r3, [pc, #20]	; (8000898 <std+0x44>)
 8000884:	6224      	str	r4, [r4, #32]
 8000886:	6323      	str	r3, [r4, #48]	; 0x30
 8000888:	bd10      	pop	{r4, pc}
 800088a:	bf00      	nop
 800088c:	08000b19 	.word	0x08000b19
 8000890:	08000b3b 	.word	0x08000b3b
 8000894:	08000b73 	.word	0x08000b73
 8000898:	08000b97 	.word	0x08000b97

0800089c <_cleanup_r>:
 800089c:	4901      	ldr	r1, [pc, #4]	; (80008a4 <_cleanup_r+0x8>)
 800089e:	f000 b8af 	b.w	8000a00 <_fwalk_reent>
 80008a2:	bf00      	nop
 80008a4:	08000cf1 	.word	0x08000cf1

080008a8 <__sfmoreglue>:
 80008a8:	b570      	push	{r4, r5, r6, lr}
 80008aa:	1e4a      	subs	r2, r1, #1
 80008ac:	2568      	movs	r5, #104	; 0x68
 80008ae:	4355      	muls	r5, r2
 80008b0:	460e      	mov	r6, r1
 80008b2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80008b6:	f000 f8c5 	bl	8000a44 <_malloc_r>
 80008ba:	4604      	mov	r4, r0
 80008bc:	b140      	cbz	r0, 80008d0 <__sfmoreglue+0x28>
 80008be:	2100      	movs	r1, #0
 80008c0:	e9c0 1600 	strd	r1, r6, [r0]
 80008c4:	300c      	adds	r0, #12
 80008c6:	60a0      	str	r0, [r4, #8]
 80008c8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008cc:	f7ff fd3e 	bl	800034c <memset>
 80008d0:	4620      	mov	r0, r4
 80008d2:	bd70      	pop	{r4, r5, r6, pc}

080008d4 <__sfp_lock_acquire>:
 80008d4:	4801      	ldr	r0, [pc, #4]	; (80008dc <__sfp_lock_acquire+0x8>)
 80008d6:	f000 b8b3 	b.w	8000a40 <__retarget_lock_acquire_recursive>
 80008da:	bf00      	nop
 80008dc:	20000148 	.word	0x20000148

080008e0 <__sfp_lock_release>:
 80008e0:	4801      	ldr	r0, [pc, #4]	; (80008e8 <__sfp_lock_release+0x8>)
 80008e2:	f000 b8ae 	b.w	8000a42 <__retarget_lock_release_recursive>
 80008e6:	bf00      	nop
 80008e8:	20000148 	.word	0x20000148

080008ec <__sinit_lock_acquire>:
 80008ec:	4801      	ldr	r0, [pc, #4]	; (80008f4 <__sinit_lock_acquire+0x8>)
 80008ee:	f000 b8a7 	b.w	8000a40 <__retarget_lock_acquire_recursive>
 80008f2:	bf00      	nop
 80008f4:	20000143 	.word	0x20000143

080008f8 <__sinit_lock_release>:
 80008f8:	4801      	ldr	r0, [pc, #4]	; (8000900 <__sinit_lock_release+0x8>)
 80008fa:	f000 b8a2 	b.w	8000a42 <__retarget_lock_release_recursive>
 80008fe:	bf00      	nop
 8000900:	20000143 	.word	0x20000143

08000904 <__sinit>:
 8000904:	b510      	push	{r4, lr}
 8000906:	4604      	mov	r4, r0
 8000908:	f7ff fff0 	bl	80008ec <__sinit_lock_acquire>
 800090c:	69a3      	ldr	r3, [r4, #24]
 800090e:	b11b      	cbz	r3, 8000918 <__sinit+0x14>
 8000910:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000914:	f7ff bff0 	b.w	80008f8 <__sinit_lock_release>
 8000918:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800091c:	6523      	str	r3, [r4, #80]	; 0x50
 800091e:	4b13      	ldr	r3, [pc, #76]	; (800096c <__sinit+0x68>)
 8000920:	4a13      	ldr	r2, [pc, #76]	; (8000970 <__sinit+0x6c>)
 8000922:	681b      	ldr	r3, [r3, #0]
 8000924:	62a2      	str	r2, [r4, #40]	; 0x28
 8000926:	42a3      	cmp	r3, r4
 8000928:	bf04      	itt	eq
 800092a:	2301      	moveq	r3, #1
 800092c:	61a3      	streq	r3, [r4, #24]
 800092e:	4620      	mov	r0, r4
 8000930:	f000 f820 	bl	8000974 <__sfp>
 8000934:	6060      	str	r0, [r4, #4]
 8000936:	4620      	mov	r0, r4
 8000938:	f000 f81c 	bl	8000974 <__sfp>
 800093c:	60a0      	str	r0, [r4, #8]
 800093e:	4620      	mov	r0, r4
 8000940:	f000 f818 	bl	8000974 <__sfp>
 8000944:	2200      	movs	r2, #0
 8000946:	60e0      	str	r0, [r4, #12]
 8000948:	2104      	movs	r1, #4
 800094a:	6860      	ldr	r0, [r4, #4]
 800094c:	f7ff ff82 	bl	8000854 <std>
 8000950:	68a0      	ldr	r0, [r4, #8]
 8000952:	2201      	movs	r2, #1
 8000954:	2109      	movs	r1, #9
 8000956:	f7ff ff7d 	bl	8000854 <std>
 800095a:	68e0      	ldr	r0, [r4, #12]
 800095c:	2202      	movs	r2, #2
 800095e:	2112      	movs	r1, #18
 8000960:	f7ff ff78 	bl	8000854 <std>
 8000964:	2301      	movs	r3, #1
 8000966:	61a3      	str	r3, [r4, #24]
 8000968:	e7d2      	b.n	8000910 <__sinit+0xc>
 800096a:	bf00      	nop
 800096c:	08000e7c 	.word	0x08000e7c
 8000970:	0800089d 	.word	0x0800089d

08000974 <__sfp>:
 8000974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000976:	4607      	mov	r7, r0
 8000978:	f7ff ffac 	bl	80008d4 <__sfp_lock_acquire>
 800097c:	4b1e      	ldr	r3, [pc, #120]	; (80009f8 <__sfp+0x84>)
 800097e:	681e      	ldr	r6, [r3, #0]
 8000980:	69b3      	ldr	r3, [r6, #24]
 8000982:	b913      	cbnz	r3, 800098a <__sfp+0x16>
 8000984:	4630      	mov	r0, r6
 8000986:	f7ff ffbd 	bl	8000904 <__sinit>
 800098a:	3648      	adds	r6, #72	; 0x48
 800098c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000990:	3b01      	subs	r3, #1
 8000992:	d503      	bpl.n	800099c <__sfp+0x28>
 8000994:	6833      	ldr	r3, [r6, #0]
 8000996:	b30b      	cbz	r3, 80009dc <__sfp+0x68>
 8000998:	6836      	ldr	r6, [r6, #0]
 800099a:	e7f7      	b.n	800098c <__sfp+0x18>
 800099c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80009a0:	b9d5      	cbnz	r5, 80009d8 <__sfp+0x64>
 80009a2:	4b16      	ldr	r3, [pc, #88]	; (80009fc <__sfp+0x88>)
 80009a4:	60e3      	str	r3, [r4, #12]
 80009a6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80009aa:	6665      	str	r5, [r4, #100]	; 0x64
 80009ac:	f000 f847 	bl	8000a3e <__retarget_lock_init_recursive>
 80009b0:	f7ff ff96 	bl	80008e0 <__sfp_lock_release>
 80009b4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80009b8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80009bc:	6025      	str	r5, [r4, #0]
 80009be:	61a5      	str	r5, [r4, #24]
 80009c0:	2208      	movs	r2, #8
 80009c2:	4629      	mov	r1, r5
 80009c4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80009c8:	f7ff fcc0 	bl	800034c <memset>
 80009cc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009d0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009d4:	4620      	mov	r0, r4
 80009d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009d8:	3468      	adds	r4, #104	; 0x68
 80009da:	e7d9      	b.n	8000990 <__sfp+0x1c>
 80009dc:	2104      	movs	r1, #4
 80009de:	4638      	mov	r0, r7
 80009e0:	f7ff ff62 	bl	80008a8 <__sfmoreglue>
 80009e4:	4604      	mov	r4, r0
 80009e6:	6030      	str	r0, [r6, #0]
 80009e8:	2800      	cmp	r0, #0
 80009ea:	d1d5      	bne.n	8000998 <__sfp+0x24>
 80009ec:	f7ff ff78 	bl	80008e0 <__sfp_lock_release>
 80009f0:	230c      	movs	r3, #12
 80009f2:	603b      	str	r3, [r7, #0]
 80009f4:	e7ee      	b.n	80009d4 <__sfp+0x60>
 80009f6:	bf00      	nop
 80009f8:	08000e7c 	.word	0x08000e7c
 80009fc:	ffff0001 	.word	0xffff0001

08000a00 <_fwalk_reent>:
 8000a00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a04:	4606      	mov	r6, r0
 8000a06:	4688      	mov	r8, r1
 8000a08:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a0c:	2700      	movs	r7, #0
 8000a0e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a12:	f1b9 0901 	subs.w	r9, r9, #1
 8000a16:	d505      	bpl.n	8000a24 <_fwalk_reent+0x24>
 8000a18:	6824      	ldr	r4, [r4, #0]
 8000a1a:	2c00      	cmp	r4, #0
 8000a1c:	d1f7      	bne.n	8000a0e <_fwalk_reent+0xe>
 8000a1e:	4638      	mov	r0, r7
 8000a20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a24:	89ab      	ldrh	r3, [r5, #12]
 8000a26:	2b01      	cmp	r3, #1
 8000a28:	d907      	bls.n	8000a3a <_fwalk_reent+0x3a>
 8000a2a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a2e:	3301      	adds	r3, #1
 8000a30:	d003      	beq.n	8000a3a <_fwalk_reent+0x3a>
 8000a32:	4629      	mov	r1, r5
 8000a34:	4630      	mov	r0, r6
 8000a36:	47c0      	blx	r8
 8000a38:	4307      	orrs	r7, r0
 8000a3a:	3568      	adds	r5, #104	; 0x68
 8000a3c:	e7e9      	b.n	8000a12 <_fwalk_reent+0x12>

08000a3e <__retarget_lock_init_recursive>:
 8000a3e:	4770      	bx	lr

08000a40 <__retarget_lock_acquire_recursive>:
 8000a40:	4770      	bx	lr

08000a42 <__retarget_lock_release_recursive>:
 8000a42:	4770      	bx	lr

08000a44 <_malloc_r>:
 8000a44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a46:	1ccd      	adds	r5, r1, #3
 8000a48:	f025 0503 	bic.w	r5, r5, #3
 8000a4c:	3508      	adds	r5, #8
 8000a4e:	2d0c      	cmp	r5, #12
 8000a50:	bf38      	it	cc
 8000a52:	250c      	movcc	r5, #12
 8000a54:	2d00      	cmp	r5, #0
 8000a56:	4606      	mov	r6, r0
 8000a58:	db01      	blt.n	8000a5e <_malloc_r+0x1a>
 8000a5a:	42a9      	cmp	r1, r5
 8000a5c:	d903      	bls.n	8000a66 <_malloc_r+0x22>
 8000a5e:	230c      	movs	r3, #12
 8000a60:	6033      	str	r3, [r6, #0]
 8000a62:	2000      	movs	r0, #0
 8000a64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a66:	f000 f991 	bl	8000d8c <__malloc_lock>
 8000a6a:	4921      	ldr	r1, [pc, #132]	; (8000af0 <_malloc_r+0xac>)
 8000a6c:	680a      	ldr	r2, [r1, #0]
 8000a6e:	4614      	mov	r4, r2
 8000a70:	b99c      	cbnz	r4, 8000a9a <_malloc_r+0x56>
 8000a72:	4f20      	ldr	r7, [pc, #128]	; (8000af4 <_malloc_r+0xb0>)
 8000a74:	683b      	ldr	r3, [r7, #0]
 8000a76:	b923      	cbnz	r3, 8000a82 <_malloc_r+0x3e>
 8000a78:	4621      	mov	r1, r4
 8000a7a:	4630      	mov	r0, r6
 8000a7c:	f000 f83c 	bl	8000af8 <_sbrk_r>
 8000a80:	6038      	str	r0, [r7, #0]
 8000a82:	4629      	mov	r1, r5
 8000a84:	4630      	mov	r0, r6
 8000a86:	f000 f837 	bl	8000af8 <_sbrk_r>
 8000a8a:	1c43      	adds	r3, r0, #1
 8000a8c:	d123      	bne.n	8000ad6 <_malloc_r+0x92>
 8000a8e:	230c      	movs	r3, #12
 8000a90:	6033      	str	r3, [r6, #0]
 8000a92:	4630      	mov	r0, r6
 8000a94:	f000 f980 	bl	8000d98 <__malloc_unlock>
 8000a98:	e7e3      	b.n	8000a62 <_malloc_r+0x1e>
 8000a9a:	6823      	ldr	r3, [r4, #0]
 8000a9c:	1b5b      	subs	r3, r3, r5
 8000a9e:	d417      	bmi.n	8000ad0 <_malloc_r+0x8c>
 8000aa0:	2b0b      	cmp	r3, #11
 8000aa2:	d903      	bls.n	8000aac <_malloc_r+0x68>
 8000aa4:	6023      	str	r3, [r4, #0]
 8000aa6:	441c      	add	r4, r3
 8000aa8:	6025      	str	r5, [r4, #0]
 8000aaa:	e004      	b.n	8000ab6 <_malloc_r+0x72>
 8000aac:	6863      	ldr	r3, [r4, #4]
 8000aae:	42a2      	cmp	r2, r4
 8000ab0:	bf0c      	ite	eq
 8000ab2:	600b      	streq	r3, [r1, #0]
 8000ab4:	6053      	strne	r3, [r2, #4]
 8000ab6:	4630      	mov	r0, r6
 8000ab8:	f000 f96e 	bl	8000d98 <__malloc_unlock>
 8000abc:	f104 000b 	add.w	r0, r4, #11
 8000ac0:	1d23      	adds	r3, r4, #4
 8000ac2:	f020 0007 	bic.w	r0, r0, #7
 8000ac6:	1ac2      	subs	r2, r0, r3
 8000ac8:	d0cc      	beq.n	8000a64 <_malloc_r+0x20>
 8000aca:	1a1b      	subs	r3, r3, r0
 8000acc:	50a3      	str	r3, [r4, r2]
 8000ace:	e7c9      	b.n	8000a64 <_malloc_r+0x20>
 8000ad0:	4622      	mov	r2, r4
 8000ad2:	6864      	ldr	r4, [r4, #4]
 8000ad4:	e7cc      	b.n	8000a70 <_malloc_r+0x2c>
 8000ad6:	1cc4      	adds	r4, r0, #3
 8000ad8:	f024 0403 	bic.w	r4, r4, #3
 8000adc:	42a0      	cmp	r0, r4
 8000ade:	d0e3      	beq.n	8000aa8 <_malloc_r+0x64>
 8000ae0:	1a21      	subs	r1, r4, r0
 8000ae2:	4630      	mov	r0, r6
 8000ae4:	f000 f808 	bl	8000af8 <_sbrk_r>
 8000ae8:	3001      	adds	r0, #1
 8000aea:	d1dd      	bne.n	8000aa8 <_malloc_r+0x64>
 8000aec:	e7cf      	b.n	8000a8e <_malloc_r+0x4a>
 8000aee:	bf00      	nop
 8000af0:	20000138 	.word	0x20000138
 8000af4:	2000013c 	.word	0x2000013c

08000af8 <_sbrk_r>:
 8000af8:	b538      	push	{r3, r4, r5, lr}
 8000afa:	4d06      	ldr	r5, [pc, #24]	; (8000b14 <_sbrk_r+0x1c>)
 8000afc:	2300      	movs	r3, #0
 8000afe:	4604      	mov	r4, r0
 8000b00:	4608      	mov	r0, r1
 8000b02:	602b      	str	r3, [r5, #0]
 8000b04:	f7ff fb98 	bl	8000238 <_sbrk>
 8000b08:	1c43      	adds	r3, r0, #1
 8000b0a:	d102      	bne.n	8000b12 <_sbrk_r+0x1a>
 8000b0c:	682b      	ldr	r3, [r5, #0]
 8000b0e:	b103      	cbz	r3, 8000b12 <_sbrk_r+0x1a>
 8000b10:	6023      	str	r3, [r4, #0]
 8000b12:	bd38      	pop	{r3, r4, r5, pc}
 8000b14:	2000014c 	.word	0x2000014c

08000b18 <__sread>:
 8000b18:	b510      	push	{r4, lr}
 8000b1a:	460c      	mov	r4, r1
 8000b1c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b20:	f000 f98e 	bl	8000e40 <_read_r>
 8000b24:	2800      	cmp	r0, #0
 8000b26:	bfab      	itete	ge
 8000b28:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000b2a:	89a3      	ldrhlt	r3, [r4, #12]
 8000b2c:	181b      	addge	r3, r3, r0
 8000b2e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000b32:	bfac      	ite	ge
 8000b34:	6563      	strge	r3, [r4, #84]	; 0x54
 8000b36:	81a3      	strhlt	r3, [r4, #12]
 8000b38:	bd10      	pop	{r4, pc}

08000b3a <__swrite>:
 8000b3a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b3e:	461f      	mov	r7, r3
 8000b40:	898b      	ldrh	r3, [r1, #12]
 8000b42:	05db      	lsls	r3, r3, #23
 8000b44:	4605      	mov	r5, r0
 8000b46:	460c      	mov	r4, r1
 8000b48:	4616      	mov	r6, r2
 8000b4a:	d505      	bpl.n	8000b58 <__swrite+0x1e>
 8000b4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b50:	2302      	movs	r3, #2
 8000b52:	2200      	movs	r2, #0
 8000b54:	f000 f908 	bl	8000d68 <_lseek_r>
 8000b58:	89a3      	ldrh	r3, [r4, #12]
 8000b5a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b5e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000b62:	81a3      	strh	r3, [r4, #12]
 8000b64:	4632      	mov	r2, r6
 8000b66:	463b      	mov	r3, r7
 8000b68:	4628      	mov	r0, r5
 8000b6a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000b6e:	f000 b817 	b.w	8000ba0 <_write_r>

08000b72 <__sseek>:
 8000b72:	b510      	push	{r4, lr}
 8000b74:	460c      	mov	r4, r1
 8000b76:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b7a:	f000 f8f5 	bl	8000d68 <_lseek_r>
 8000b7e:	1c43      	adds	r3, r0, #1
 8000b80:	89a3      	ldrh	r3, [r4, #12]
 8000b82:	bf15      	itete	ne
 8000b84:	6560      	strne	r0, [r4, #84]	; 0x54
 8000b86:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000b8a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000b8e:	81a3      	strheq	r3, [r4, #12]
 8000b90:	bf18      	it	ne
 8000b92:	81a3      	strhne	r3, [r4, #12]
 8000b94:	bd10      	pop	{r4, pc}

08000b96 <__sclose>:
 8000b96:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b9a:	f000 b813 	b.w	8000bc4 <_close_r>
	...

08000ba0 <_write_r>:
 8000ba0:	b538      	push	{r3, r4, r5, lr}
 8000ba2:	4d07      	ldr	r5, [pc, #28]	; (8000bc0 <_write_r+0x20>)
 8000ba4:	4604      	mov	r4, r0
 8000ba6:	4608      	mov	r0, r1
 8000ba8:	4611      	mov	r1, r2
 8000baa:	2200      	movs	r2, #0
 8000bac:	602a      	str	r2, [r5, #0]
 8000bae:	461a      	mov	r2, r3
 8000bb0:	f7ff fc84 	bl	80004bc <_write>
 8000bb4:	1c43      	adds	r3, r0, #1
 8000bb6:	d102      	bne.n	8000bbe <_write_r+0x1e>
 8000bb8:	682b      	ldr	r3, [r5, #0]
 8000bba:	b103      	cbz	r3, 8000bbe <_write_r+0x1e>
 8000bbc:	6023      	str	r3, [r4, #0]
 8000bbe:	bd38      	pop	{r3, r4, r5, pc}
 8000bc0:	2000014c 	.word	0x2000014c

08000bc4 <_close_r>:
 8000bc4:	b538      	push	{r3, r4, r5, lr}
 8000bc6:	4d06      	ldr	r5, [pc, #24]	; (8000be0 <_close_r+0x1c>)
 8000bc8:	2300      	movs	r3, #0
 8000bca:	4604      	mov	r4, r0
 8000bcc:	4608      	mov	r0, r1
 8000bce:	602b      	str	r3, [r5, #0]
 8000bd0:	f7ff fca2 	bl	8000518 <_close>
 8000bd4:	1c43      	adds	r3, r0, #1
 8000bd6:	d102      	bne.n	8000bde <_close_r+0x1a>
 8000bd8:	682b      	ldr	r3, [r5, #0]
 8000bda:	b103      	cbz	r3, 8000bde <_close_r+0x1a>
 8000bdc:	6023      	str	r3, [r4, #0]
 8000bde:	bd38      	pop	{r3, r4, r5, pc}
 8000be0:	2000014c 	.word	0x2000014c

08000be4 <__sflush_r>:
 8000be4:	898a      	ldrh	r2, [r1, #12]
 8000be6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000bea:	4605      	mov	r5, r0
 8000bec:	0710      	lsls	r0, r2, #28
 8000bee:	460c      	mov	r4, r1
 8000bf0:	d458      	bmi.n	8000ca4 <__sflush_r+0xc0>
 8000bf2:	684b      	ldr	r3, [r1, #4]
 8000bf4:	2b00      	cmp	r3, #0
 8000bf6:	dc05      	bgt.n	8000c04 <__sflush_r+0x20>
 8000bf8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000bfa:	2b00      	cmp	r3, #0
 8000bfc:	dc02      	bgt.n	8000c04 <__sflush_r+0x20>
 8000bfe:	2000      	movs	r0, #0
 8000c00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c04:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000c06:	2e00      	cmp	r6, #0
 8000c08:	d0f9      	beq.n	8000bfe <__sflush_r+0x1a>
 8000c0a:	2300      	movs	r3, #0
 8000c0c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000c10:	682f      	ldr	r7, [r5, #0]
 8000c12:	602b      	str	r3, [r5, #0]
 8000c14:	d032      	beq.n	8000c7c <__sflush_r+0x98>
 8000c16:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000c18:	89a3      	ldrh	r3, [r4, #12]
 8000c1a:	075a      	lsls	r2, r3, #29
 8000c1c:	d505      	bpl.n	8000c2a <__sflush_r+0x46>
 8000c1e:	6863      	ldr	r3, [r4, #4]
 8000c20:	1ac0      	subs	r0, r0, r3
 8000c22:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000c24:	b10b      	cbz	r3, 8000c2a <__sflush_r+0x46>
 8000c26:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000c28:	1ac0      	subs	r0, r0, r3
 8000c2a:	2300      	movs	r3, #0
 8000c2c:	4602      	mov	r2, r0
 8000c2e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000c30:	6a21      	ldr	r1, [r4, #32]
 8000c32:	4628      	mov	r0, r5
 8000c34:	47b0      	blx	r6
 8000c36:	1c43      	adds	r3, r0, #1
 8000c38:	89a3      	ldrh	r3, [r4, #12]
 8000c3a:	d106      	bne.n	8000c4a <__sflush_r+0x66>
 8000c3c:	6829      	ldr	r1, [r5, #0]
 8000c3e:	291d      	cmp	r1, #29
 8000c40:	d82c      	bhi.n	8000c9c <__sflush_r+0xb8>
 8000c42:	4a2a      	ldr	r2, [pc, #168]	; (8000cec <__sflush_r+0x108>)
 8000c44:	40ca      	lsrs	r2, r1
 8000c46:	07d6      	lsls	r6, r2, #31
 8000c48:	d528      	bpl.n	8000c9c <__sflush_r+0xb8>
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	6062      	str	r2, [r4, #4]
 8000c4e:	04d9      	lsls	r1, r3, #19
 8000c50:	6922      	ldr	r2, [r4, #16]
 8000c52:	6022      	str	r2, [r4, #0]
 8000c54:	d504      	bpl.n	8000c60 <__sflush_r+0x7c>
 8000c56:	1c42      	adds	r2, r0, #1
 8000c58:	d101      	bne.n	8000c5e <__sflush_r+0x7a>
 8000c5a:	682b      	ldr	r3, [r5, #0]
 8000c5c:	b903      	cbnz	r3, 8000c60 <__sflush_r+0x7c>
 8000c5e:	6560      	str	r0, [r4, #84]	; 0x54
 8000c60:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000c62:	602f      	str	r7, [r5, #0]
 8000c64:	2900      	cmp	r1, #0
 8000c66:	d0ca      	beq.n	8000bfe <__sflush_r+0x1a>
 8000c68:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000c6c:	4299      	cmp	r1, r3
 8000c6e:	d002      	beq.n	8000c76 <__sflush_r+0x92>
 8000c70:	4628      	mov	r0, r5
 8000c72:	f000 f897 	bl	8000da4 <_free_r>
 8000c76:	2000      	movs	r0, #0
 8000c78:	6360      	str	r0, [r4, #52]	; 0x34
 8000c7a:	e7c1      	b.n	8000c00 <__sflush_r+0x1c>
 8000c7c:	6a21      	ldr	r1, [r4, #32]
 8000c7e:	2301      	movs	r3, #1
 8000c80:	4628      	mov	r0, r5
 8000c82:	47b0      	blx	r6
 8000c84:	1c41      	adds	r1, r0, #1
 8000c86:	d1c7      	bne.n	8000c18 <__sflush_r+0x34>
 8000c88:	682b      	ldr	r3, [r5, #0]
 8000c8a:	2b00      	cmp	r3, #0
 8000c8c:	d0c4      	beq.n	8000c18 <__sflush_r+0x34>
 8000c8e:	2b1d      	cmp	r3, #29
 8000c90:	d001      	beq.n	8000c96 <__sflush_r+0xb2>
 8000c92:	2b16      	cmp	r3, #22
 8000c94:	d101      	bne.n	8000c9a <__sflush_r+0xb6>
 8000c96:	602f      	str	r7, [r5, #0]
 8000c98:	e7b1      	b.n	8000bfe <__sflush_r+0x1a>
 8000c9a:	89a3      	ldrh	r3, [r4, #12]
 8000c9c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000ca0:	81a3      	strh	r3, [r4, #12]
 8000ca2:	e7ad      	b.n	8000c00 <__sflush_r+0x1c>
 8000ca4:	690f      	ldr	r7, [r1, #16]
 8000ca6:	2f00      	cmp	r7, #0
 8000ca8:	d0a9      	beq.n	8000bfe <__sflush_r+0x1a>
 8000caa:	0793      	lsls	r3, r2, #30
 8000cac:	680e      	ldr	r6, [r1, #0]
 8000cae:	bf08      	it	eq
 8000cb0:	694b      	ldreq	r3, [r1, #20]
 8000cb2:	600f      	str	r7, [r1, #0]
 8000cb4:	bf18      	it	ne
 8000cb6:	2300      	movne	r3, #0
 8000cb8:	eba6 0807 	sub.w	r8, r6, r7
 8000cbc:	608b      	str	r3, [r1, #8]
 8000cbe:	f1b8 0f00 	cmp.w	r8, #0
 8000cc2:	dd9c      	ble.n	8000bfe <__sflush_r+0x1a>
 8000cc4:	6a21      	ldr	r1, [r4, #32]
 8000cc6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000cc8:	4643      	mov	r3, r8
 8000cca:	463a      	mov	r2, r7
 8000ccc:	4628      	mov	r0, r5
 8000cce:	47b0      	blx	r6
 8000cd0:	2800      	cmp	r0, #0
 8000cd2:	dc06      	bgt.n	8000ce2 <__sflush_r+0xfe>
 8000cd4:	89a3      	ldrh	r3, [r4, #12]
 8000cd6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000cda:	81a3      	strh	r3, [r4, #12]
 8000cdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ce0:	e78e      	b.n	8000c00 <__sflush_r+0x1c>
 8000ce2:	4407      	add	r7, r0
 8000ce4:	eba8 0800 	sub.w	r8, r8, r0
 8000ce8:	e7e9      	b.n	8000cbe <__sflush_r+0xda>
 8000cea:	bf00      	nop
 8000cec:	20400001 	.word	0x20400001

08000cf0 <_fflush_r>:
 8000cf0:	b538      	push	{r3, r4, r5, lr}
 8000cf2:	690b      	ldr	r3, [r1, #16]
 8000cf4:	4605      	mov	r5, r0
 8000cf6:	460c      	mov	r4, r1
 8000cf8:	b913      	cbnz	r3, 8000d00 <_fflush_r+0x10>
 8000cfa:	2500      	movs	r5, #0
 8000cfc:	4628      	mov	r0, r5
 8000cfe:	bd38      	pop	{r3, r4, r5, pc}
 8000d00:	b118      	cbz	r0, 8000d0a <_fflush_r+0x1a>
 8000d02:	6983      	ldr	r3, [r0, #24]
 8000d04:	b90b      	cbnz	r3, 8000d0a <_fflush_r+0x1a>
 8000d06:	f7ff fdfd 	bl	8000904 <__sinit>
 8000d0a:	4b14      	ldr	r3, [pc, #80]	; (8000d5c <_fflush_r+0x6c>)
 8000d0c:	429c      	cmp	r4, r3
 8000d0e:	d11b      	bne.n	8000d48 <_fflush_r+0x58>
 8000d10:	686c      	ldr	r4, [r5, #4]
 8000d12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000d16:	2b00      	cmp	r3, #0
 8000d18:	d0ef      	beq.n	8000cfa <_fflush_r+0xa>
 8000d1a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000d1c:	07d0      	lsls	r0, r2, #31
 8000d1e:	d404      	bmi.n	8000d2a <_fflush_r+0x3a>
 8000d20:	0599      	lsls	r1, r3, #22
 8000d22:	d402      	bmi.n	8000d2a <_fflush_r+0x3a>
 8000d24:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000d26:	f7ff fe8b 	bl	8000a40 <__retarget_lock_acquire_recursive>
 8000d2a:	4628      	mov	r0, r5
 8000d2c:	4621      	mov	r1, r4
 8000d2e:	f7ff ff59 	bl	8000be4 <__sflush_r>
 8000d32:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000d34:	07da      	lsls	r2, r3, #31
 8000d36:	4605      	mov	r5, r0
 8000d38:	d4e0      	bmi.n	8000cfc <_fflush_r+0xc>
 8000d3a:	89a3      	ldrh	r3, [r4, #12]
 8000d3c:	059b      	lsls	r3, r3, #22
 8000d3e:	d4dd      	bmi.n	8000cfc <_fflush_r+0xc>
 8000d40:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000d42:	f7ff fe7e 	bl	8000a42 <__retarget_lock_release_recursive>
 8000d46:	e7d9      	b.n	8000cfc <_fflush_r+0xc>
 8000d48:	4b05      	ldr	r3, [pc, #20]	; (8000d60 <_fflush_r+0x70>)
 8000d4a:	429c      	cmp	r4, r3
 8000d4c:	d101      	bne.n	8000d52 <_fflush_r+0x62>
 8000d4e:	68ac      	ldr	r4, [r5, #8]
 8000d50:	e7df      	b.n	8000d12 <_fflush_r+0x22>
 8000d52:	4b04      	ldr	r3, [pc, #16]	; (8000d64 <_fflush_r+0x74>)
 8000d54:	429c      	cmp	r4, r3
 8000d56:	bf08      	it	eq
 8000d58:	68ec      	ldreq	r4, [r5, #12]
 8000d5a:	e7da      	b.n	8000d12 <_fflush_r+0x22>
 8000d5c:	08000ebc 	.word	0x08000ebc
 8000d60:	08000edc 	.word	0x08000edc
 8000d64:	08000e9c 	.word	0x08000e9c

08000d68 <_lseek_r>:
 8000d68:	b538      	push	{r3, r4, r5, lr}
 8000d6a:	4d07      	ldr	r5, [pc, #28]	; (8000d88 <_lseek_r+0x20>)
 8000d6c:	4604      	mov	r4, r0
 8000d6e:	4608      	mov	r0, r1
 8000d70:	4611      	mov	r1, r2
 8000d72:	2200      	movs	r2, #0
 8000d74:	602a      	str	r2, [r5, #0]
 8000d76:	461a      	mov	r2, r3
 8000d78:	f7ff fb8e 	bl	8000498 <_lseek>
 8000d7c:	1c43      	adds	r3, r0, #1
 8000d7e:	d102      	bne.n	8000d86 <_lseek_r+0x1e>
 8000d80:	682b      	ldr	r3, [r5, #0]
 8000d82:	b103      	cbz	r3, 8000d86 <_lseek_r+0x1e>
 8000d84:	6023      	str	r3, [r4, #0]
 8000d86:	bd38      	pop	{r3, r4, r5, pc}
 8000d88:	2000014c 	.word	0x2000014c

08000d8c <__malloc_lock>:
 8000d8c:	4801      	ldr	r0, [pc, #4]	; (8000d94 <__malloc_lock+0x8>)
 8000d8e:	f7ff be57 	b.w	8000a40 <__retarget_lock_acquire_recursive>
 8000d92:	bf00      	nop
 8000d94:	20000144 	.word	0x20000144

08000d98 <__malloc_unlock>:
 8000d98:	4801      	ldr	r0, [pc, #4]	; (8000da0 <__malloc_unlock+0x8>)
 8000d9a:	f7ff be52 	b.w	8000a42 <__retarget_lock_release_recursive>
 8000d9e:	bf00      	nop
 8000da0:	20000144 	.word	0x20000144

08000da4 <_free_r>:
 8000da4:	b538      	push	{r3, r4, r5, lr}
 8000da6:	4605      	mov	r5, r0
 8000da8:	2900      	cmp	r1, #0
 8000daa:	d045      	beq.n	8000e38 <_free_r+0x94>
 8000dac:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000db0:	1f0c      	subs	r4, r1, #4
 8000db2:	2b00      	cmp	r3, #0
 8000db4:	bfb8      	it	lt
 8000db6:	18e4      	addlt	r4, r4, r3
 8000db8:	f7ff ffe8 	bl	8000d8c <__malloc_lock>
 8000dbc:	4a1f      	ldr	r2, [pc, #124]	; (8000e3c <_free_r+0x98>)
 8000dbe:	6813      	ldr	r3, [r2, #0]
 8000dc0:	4610      	mov	r0, r2
 8000dc2:	b933      	cbnz	r3, 8000dd2 <_free_r+0x2e>
 8000dc4:	6063      	str	r3, [r4, #4]
 8000dc6:	6014      	str	r4, [r2, #0]
 8000dc8:	4628      	mov	r0, r5
 8000dca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000dce:	f7ff bfe3 	b.w	8000d98 <__malloc_unlock>
 8000dd2:	42a3      	cmp	r3, r4
 8000dd4:	d90b      	bls.n	8000dee <_free_r+0x4a>
 8000dd6:	6821      	ldr	r1, [r4, #0]
 8000dd8:	1862      	adds	r2, r4, r1
 8000dda:	4293      	cmp	r3, r2
 8000ddc:	bf04      	itt	eq
 8000dde:	681a      	ldreq	r2, [r3, #0]
 8000de0:	685b      	ldreq	r3, [r3, #4]
 8000de2:	6063      	str	r3, [r4, #4]
 8000de4:	bf04      	itt	eq
 8000de6:	1852      	addeq	r2, r2, r1
 8000de8:	6022      	streq	r2, [r4, #0]
 8000dea:	6004      	str	r4, [r0, #0]
 8000dec:	e7ec      	b.n	8000dc8 <_free_r+0x24>
 8000dee:	461a      	mov	r2, r3
 8000df0:	685b      	ldr	r3, [r3, #4]
 8000df2:	b10b      	cbz	r3, 8000df8 <_free_r+0x54>
 8000df4:	42a3      	cmp	r3, r4
 8000df6:	d9fa      	bls.n	8000dee <_free_r+0x4a>
 8000df8:	6811      	ldr	r1, [r2, #0]
 8000dfa:	1850      	adds	r0, r2, r1
 8000dfc:	42a0      	cmp	r0, r4
 8000dfe:	d10b      	bne.n	8000e18 <_free_r+0x74>
 8000e00:	6820      	ldr	r0, [r4, #0]
 8000e02:	4401      	add	r1, r0
 8000e04:	1850      	adds	r0, r2, r1
 8000e06:	4283      	cmp	r3, r0
 8000e08:	6011      	str	r1, [r2, #0]
 8000e0a:	d1dd      	bne.n	8000dc8 <_free_r+0x24>
 8000e0c:	6818      	ldr	r0, [r3, #0]
 8000e0e:	685b      	ldr	r3, [r3, #4]
 8000e10:	6053      	str	r3, [r2, #4]
 8000e12:	4401      	add	r1, r0
 8000e14:	6011      	str	r1, [r2, #0]
 8000e16:	e7d7      	b.n	8000dc8 <_free_r+0x24>
 8000e18:	d902      	bls.n	8000e20 <_free_r+0x7c>
 8000e1a:	230c      	movs	r3, #12
 8000e1c:	602b      	str	r3, [r5, #0]
 8000e1e:	e7d3      	b.n	8000dc8 <_free_r+0x24>
 8000e20:	6820      	ldr	r0, [r4, #0]
 8000e22:	1821      	adds	r1, r4, r0
 8000e24:	428b      	cmp	r3, r1
 8000e26:	bf04      	itt	eq
 8000e28:	6819      	ldreq	r1, [r3, #0]
 8000e2a:	685b      	ldreq	r3, [r3, #4]
 8000e2c:	6063      	str	r3, [r4, #4]
 8000e2e:	bf04      	itt	eq
 8000e30:	1809      	addeq	r1, r1, r0
 8000e32:	6021      	streq	r1, [r4, #0]
 8000e34:	6054      	str	r4, [r2, #4]
 8000e36:	e7c7      	b.n	8000dc8 <_free_r+0x24>
 8000e38:	bd38      	pop	{r3, r4, r5, pc}
 8000e3a:	bf00      	nop
 8000e3c:	20000138 	.word	0x20000138

08000e40 <_read_r>:
 8000e40:	b538      	push	{r3, r4, r5, lr}
 8000e42:	4d07      	ldr	r5, [pc, #28]	; (8000e60 <_read_r+0x20>)
 8000e44:	4604      	mov	r4, r0
 8000e46:	4608      	mov	r0, r1
 8000e48:	4611      	mov	r1, r2
 8000e4a:	2200      	movs	r2, #0
 8000e4c:	602a      	str	r2, [r5, #0]
 8000e4e:	461a      	mov	r2, r3
 8000e50:	f7ff facc 	bl	80003ec <_read>
 8000e54:	1c43      	adds	r3, r0, #1
 8000e56:	d102      	bne.n	8000e5e <_read_r+0x1e>
 8000e58:	682b      	ldr	r3, [r5, #0]
 8000e5a:	b103      	cbz	r3, 8000e5e <_read_r+0x1e>
 8000e5c:	6023      	str	r3, [r4, #0]
 8000e5e:	bd38      	pop	{r3, r4, r5, pc}
 8000e60:	2000014c 	.word	0x2000014c

08000e64 <_init>:
 8000e64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e66:	bf00      	nop
 8000e68:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e6a:	bc08      	pop	{r3}
 8000e6c:	469e      	mov	lr, r3
 8000e6e:	4770      	bx	lr

08000e70 <_fini>:
 8000e70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e72:	bf00      	nop
 8000e74:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e76:	bc08      	pop	{r3}
 8000e78:	469e      	mov	lr, r3
 8000e7a:	4770      	bx	lr
