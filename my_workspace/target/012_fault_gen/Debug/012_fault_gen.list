
012_fault_gen.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001850  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000218  08001a00  08001a00  00011a00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001c18  08001c18  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  08001c18  08001c18  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001c18  08001c18  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001c18  08001c18  00011c18  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001c1c  08001c1c  00011c1c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  08001c20  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000e4  2000006c  08001c8c  0002006c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000150  08001c8c  00020150  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000143f  00000000  00000000  00020096  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003c6  00000000  00000000  000214d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000090  00000000  00000000  000218a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000068  00000000  00000000  00021930  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000022a3  00000000  00000000  00021998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000bbd  00000000  00000000  00023c3b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000844e  00000000  00000000  000247f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0002cc46  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000cd8  00000000  00000000  0002cc9c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000006c 	.word	0x2000006c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080019e8 	.word	0x080019e8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000070 	.word	0x20000070
 80001ec:	080019e8 	.word	0x080019e8

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <main>:
/* Function Prototypes */
extern void initialise_monitor_handles(void) ;									// Debugger
void UsageFault_Handler_C(uint32_t *pMSP) ;

int main(void)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b084      	sub	sp, #16
 80002a4:	af00      	add	r7, sp, #0
	initialise_monitor_handles() ;                                          	// Debugger
 80002a6:	f001 fb25 	bl	80018f4 <initialise_monitor_handles>

    // 1. Enable all configurable exceptions like usage fault, mem manage fault, and bus fault
    uint32_t *pSHCSR = (uint32_t*) (0xE000ED24) ;
 80002aa:	4b0c      	ldr	r3, [pc, #48]	; (80002dc <main+0x3c>)
 80002ac:	60fb      	str	r3, [r7, #12]

    *pSHCSR |= (1 << 16) ;                                              // Mem Manage
 80002ae:	68fb      	ldr	r3, [r7, #12]
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80002b6:	68fb      	ldr	r3, [r7, #12]
 80002b8:	601a      	str	r2, [r3, #0]
    *pSHCSR |= (1 << 17) ;                                              // Bus Fault
 80002ba:	68fb      	ldr	r3, [r7, #12]
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 80002c2:	68fb      	ldr	r3, [r7, #12]
 80002c4:	601a      	str	r2, [r3, #0]
    // *pSHCSR |= (1 << 18) ;                                              // Usage Fault


    // 3. Let's force the processor to execute some undefined instruction
    uint32_t *pSRAM = (uint32_t*) (0x20010000) ;
 80002c6:	4b06      	ldr	r3, [pc, #24]	; (80002e0 <main+0x40>)
 80002c8:	60bb      	str	r3, [r7, #8]

    *pSRAM  = 0xFFFFFFFF ;                                              // Choose a random address from SRAM
 80002ca:	68bb      	ldr	r3, [r7, #8]
 80002cc:	f04f 32ff 	mov.w	r2, #4294967295
 80002d0:	601a      	str	r2, [r3, #0]
    void (*some_address) (void) ;                                       // Store invalid instruction into SRAM address above

#if 0
    some_address = (void*) ( ( (uint32_t) (pSRAM) + 1 ) ) ;             // Thumb state; not legal here. Usage fault. Need T-bit as 1
#elif 1
    some_address = (void*) ( ( (uint32_t) (pSRAM) ) ) ;                 // ARM state; legal, but causes a fault related to state
 80002d2:	68bb      	ldr	r3, [r7, #8]
 80002d4:	607b      	str	r3, [r7, #4]
#endif
    
    some_address();
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4798      	blx	r3

    // 4. Analyze the fault
    /* Loop forever */
	for(;;);
 80002da:	e7fe      	b.n	80002da <main+0x3a>
 80002dc:	e000ed24 	.word	0xe000ed24
 80002e0:	20010000 	.word	0x20010000

080002e4 <HardFault_Handler>:
}

// 2. Implement the fault handlers
// Go to startup file and lookup the busfault handler
void HardFault_Handler(void) {
 80002e4:	b580      	push	{r7, lr}
 80002e6:	af00      	add	r7, sp, #0
    printf("Exception: HardFault\n") ;
 80002e8:	4801      	ldr	r0, [pc, #4]	; (80002f0 <HardFault_Handler+0xc>)
 80002ea:	f000 f995 	bl	8000618 <puts>
    while (1) ;
 80002ee:	e7fe      	b.n	80002ee <HardFault_Handler+0xa>
 80002f0:	08001a00 	.word	0x08001a00

080002f4 <MemManage_Handler>:
}

void MemManage_Handler(void) {
 80002f4:	b580      	push	{r7, lr}
 80002f6:	af00      	add	r7, sp, #0
    printf("Exception: MemManage\n") ;
 80002f8:	4801      	ldr	r0, [pc, #4]	; (8000300 <MemManage_Handler+0xc>)
 80002fa:	f000 f98d 	bl	8000618 <puts>
    while (1) ;
 80002fe:	e7fe      	b.n	80002fe <MemManage_Handler+0xa>
 8000300:	08001a18 	.word	0x08001a18

08000304 <BusFault_Handler>:
}

void BusFault_Handler(void) {
 8000304:	b580      	push	{r7, lr}
 8000306:	af00      	add	r7, sp, #0
    printf("Exception: BusFault\n") ;
 8000308:	4801      	ldr	r0, [pc, #4]	; (8000310 <BusFault_Handler+0xc>)
 800030a:	f000 f985 	bl	8000618 <puts>
    while (1) ;
 800030e:	e7fe      	b.n	800030e <BusFault_Handler+0xa>
 8000310:	08001a30 	.word	0x08001a30

08000314 <UsageFault_Handler>:
/* UsageFault_Handler Subroutine */
__attribute__ ((naked)) void UsageFault_Handler(void) {
    // Here, we extracted the value of MSP which happens to be the
    // base address of the stack frame (thread mode) which got saved
    // during the exception entry from thread mode to handler mode
    __asm ("MRS r0, MSP") ;
 8000314:	f3ef 8008 	mrs	r0, MSP
    __asm ("B UsageFault_Handler_C") ;                                  // Branch to C Function
 8000318:	f000 b802 	b.w	8000320 <UsageFault_Handler_C>
}
 800031c:	bf00      	nop
	...

08000320 <UsageFault_Handler_C>:

void UsageFault_Handler_C(uint32_t *pBaseStackFrame) {                  // Pass r0 from subroutine
 8000320:	b580      	push	{r7, lr}
 8000322:	b084      	sub	sp, #16
 8000324:	af00      	add	r7, sp, #0
 8000326:	6078      	str	r0, [r7, #4]
    register uint32_t msp_value __asm("r0") ;                           // Use register attribute so it is not stored in the stack,
                                                                        // but rather into R0 using __asm attribute
    uint32_t *pMSP = (uint32_t*) (msp_value) ;                          // Save that value into a pointer variable
#endif

    uint32_t *pUFSR = (uint32_t*) (0xE000ED2A) ;
 8000328:	4b23      	ldr	r3, [pc, #140]	; (80003b8 <UsageFault_Handler_C+0x98>)
 800032a:	60fb      	str	r3, [r7, #12]

    printf("Exception: UsageFault\n") ;
 800032c:	4823      	ldr	r0, [pc, #140]	; (80003bc <UsageFault_Handler_C+0x9c>)
 800032e:	f000 f973 	bl	8000618 <puts>

    printf("UFSR = 0x%lX\n", (*pUFSR) & 0xFFFF) ;
 8000332:	68fb      	ldr	r3, [r7, #12]
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	b29b      	uxth	r3, r3
 8000338:	4619      	mov	r1, r3
 800033a:	4821      	ldr	r0, [pc, #132]	; (80003c0 <UsageFault_Handler_C+0xa0>)
 800033c:	f000 f8e6 	bl	800050c <iprintf>
    // Refer to M4 Manual and see that 1 means the processor has attempted to execute and undefined instruction
    // 2 means [1] INVSTATE: Invalid state Usage Fault Fault analyzer says same thing

    printf("pBaseStackFrame = 0x%p\n", pBaseStackFrame) ;
 8000340:	6879      	ldr	r1, [r7, #4]
 8000342:	4820      	ldr	r0, [pc, #128]	; (80003c4 <UsageFault_Handler_C+0xa4>)
 8000344:	f000 f8e2 	bl	800050c <iprintf>
    printf("Value of R0     = 0x%lX\n", pBaseStackFrame[0]) ;
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	4619      	mov	r1, r3
 800034e:	481e      	ldr	r0, [pc, #120]	; (80003c8 <UsageFault_Handler_C+0xa8>)
 8000350:	f000 f8dc 	bl	800050c <iprintf>
    printf("Value of R1     = 0x%lX\n", pBaseStackFrame[1]) ;
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	3304      	adds	r3, #4
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	4619      	mov	r1, r3
 800035c:	481b      	ldr	r0, [pc, #108]	; (80003cc <UsageFault_Handler_C+0xac>)
 800035e:	f000 f8d5 	bl	800050c <iprintf>
    printf("Value of R2     = 0x%lX\n", pBaseStackFrame[2]) ;
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	3308      	adds	r3, #8
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	4619      	mov	r1, r3
 800036a:	4819      	ldr	r0, [pc, #100]	; (80003d0 <UsageFault_Handler_C+0xb0>)
 800036c:	f000 f8ce 	bl	800050c <iprintf>
    printf("Value of R3     = 0x%lX\n", pBaseStackFrame[3]) ;
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	330c      	adds	r3, #12
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	4619      	mov	r1, r3
 8000378:	4816      	ldr	r0, [pc, #88]	; (80003d4 <UsageFault_Handler_C+0xb4>)
 800037a:	f000 f8c7 	bl	800050c <iprintf>
    printf("Value of R12    = 0x%lX\n", pBaseStackFrame[4]) ;
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	3310      	adds	r3, #16
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	4619      	mov	r1, r3
 8000386:	4814      	ldr	r0, [pc, #80]	; (80003d8 <UsageFault_Handler_C+0xb8>)
 8000388:	f000 f8c0 	bl	800050c <iprintf>
    printf("Value of LR     = 0x%lX\n", pBaseStackFrame[5]) ;
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	3314      	adds	r3, #20
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	4619      	mov	r1, r3
 8000394:	4811      	ldr	r0, [pc, #68]	; (80003dc <UsageFault_Handler_C+0xbc>)
 8000396:	f000 f8b9 	bl	800050c <iprintf>
    printf("Value of PC     = 0x%lX\n", pBaseStackFrame[6]) ;
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	3318      	adds	r3, #24
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	4619      	mov	r1, r3
 80003a2:	480f      	ldr	r0, [pc, #60]	; (80003e0 <UsageFault_Handler_C+0xc0>)
 80003a4:	f000 f8b2 	bl	800050c <iprintf>
    printf("Value of XPSR   = 0x%lX\n", pBaseStackFrame[7]) ;
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	331c      	adds	r3, #28
 80003ac:	681b      	ldr	r3, [r3, #0]
 80003ae:	4619      	mov	r1, r3
 80003b0:	480c      	ldr	r0, [pc, #48]	; (80003e4 <UsageFault_Handler_C+0xc4>)
 80003b2:	f000 f8ab 	bl	800050c <iprintf>
    
    while (1) ;
 80003b6:	e7fe      	b.n	80003b6 <UsageFault_Handler_C+0x96>
 80003b8:	e000ed2a 	.word	0xe000ed2a
 80003bc:	08001a44 	.word	0x08001a44
 80003c0:	08001a5c 	.word	0x08001a5c
 80003c4:	08001a6c 	.word	0x08001a6c
 80003c8:	08001a84 	.word	0x08001a84
 80003cc:	08001aa0 	.word	0x08001aa0
 80003d0:	08001abc 	.word	0x08001abc
 80003d4:	08001ad8 	.word	0x08001ad8
 80003d8:	08001af4 	.word	0x08001af4
 80003dc:	08001b10 	.word	0x08001b10
 80003e0:	08001b2c 	.word	0x08001b2c
 80003e4:	08001b48 	.word	0x08001b48

080003e8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003e8:	b580      	push	{r7, lr}
 80003ea:	b086      	sub	sp, #24
 80003ec:	af00      	add	r7, sp, #0
 80003ee:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003f0:	4a14      	ldr	r2, [pc, #80]	; (8000444 <_sbrk+0x5c>)
 80003f2:	4b15      	ldr	r3, [pc, #84]	; (8000448 <_sbrk+0x60>)
 80003f4:	1ad3      	subs	r3, r2, r3
 80003f6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003f8:	697b      	ldr	r3, [r7, #20]
 80003fa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003fc:	4b13      	ldr	r3, [pc, #76]	; (800044c <_sbrk+0x64>)
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	2b00      	cmp	r3, #0
 8000402:	d102      	bne.n	800040a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000404:	4b11      	ldr	r3, [pc, #68]	; (800044c <_sbrk+0x64>)
 8000406:	4a12      	ldr	r2, [pc, #72]	; (8000450 <_sbrk+0x68>)
 8000408:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800040a:	4b10      	ldr	r3, [pc, #64]	; (800044c <_sbrk+0x64>)
 800040c:	681a      	ldr	r2, [r3, #0]
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4413      	add	r3, r2
 8000412:	693a      	ldr	r2, [r7, #16]
 8000414:	429a      	cmp	r2, r3
 8000416:	d207      	bcs.n	8000428 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000418:	f000 f846 	bl	80004a8 <__errno>
 800041c:	4603      	mov	r3, r0
 800041e:	220c      	movs	r2, #12
 8000420:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000422:	f04f 33ff 	mov.w	r3, #4294967295
 8000426:	e009      	b.n	800043c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000428:	4b08      	ldr	r3, [pc, #32]	; (800044c <_sbrk+0x64>)
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800042e:	4b07      	ldr	r3, [pc, #28]	; (800044c <_sbrk+0x64>)
 8000430:	681a      	ldr	r2, [r3, #0]
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4413      	add	r3, r2
 8000436:	4a05      	ldr	r2, [pc, #20]	; (800044c <_sbrk+0x64>)
 8000438:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800043a:	68fb      	ldr	r3, [r7, #12]
}
 800043c:	4618      	mov	r0, r3
 800043e:	3718      	adds	r7, #24
 8000440:	46bd      	mov	sp, r7
 8000442:	bd80      	pop	{r7, pc}
 8000444:	20030000 	.word	0x20030000
 8000448:	00000400 	.word	0x00000400
 800044c:	20000088 	.word	0x20000088
 8000450:	20000150 	.word	0x20000150

08000454 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000454:	480d      	ldr	r0, [pc, #52]	; (800048c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000456:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000458:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800045c:	480c      	ldr	r0, [pc, #48]	; (8000490 <LoopForever+0x6>)
  ldr r1, =_edata
 800045e:	490d      	ldr	r1, [pc, #52]	; (8000494 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000460:	4a0d      	ldr	r2, [pc, #52]	; (8000498 <LoopForever+0xe>)
  movs r3, #0
 8000462:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000464:	e002      	b.n	800046c <LoopCopyDataInit>

08000466 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000466:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000468:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800046a:	3304      	adds	r3, #4

0800046c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800046c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800046e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000470:	d3f9      	bcc.n	8000466 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000472:	4a0a      	ldr	r2, [pc, #40]	; (800049c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000474:	4c0a      	ldr	r4, [pc, #40]	; (80004a0 <LoopForever+0x16>)
  movs r3, #0
 8000476:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000478:	e001      	b.n	800047e <LoopFillZerobss>

0800047a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800047a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800047c:	3204      	adds	r2, #4

0800047e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800047e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000480:	d3fb      	bcc.n	800047a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000482:	f000 f817 	bl	80004b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000486:	f7ff ff0b 	bl	80002a0 <main>

0800048a <LoopForever>:

LoopForever:
    b LoopForever
 800048a:	e7fe      	b.n	800048a <LoopForever>
  ldr   r0, =_estack
 800048c:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000490:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000494:	2000006c 	.word	0x2000006c
  ldr r2, =_sidata
 8000498:	08001c20 	.word	0x08001c20
  ldr r2, =_sbss
 800049c:	2000006c 	.word	0x2000006c
  ldr r4, =_ebss
 80004a0:	20000150 	.word	0x20000150

080004a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004a4:	e7fe      	b.n	80004a4 <ADC_IRQHandler>
	...

080004a8 <__errno>:
 80004a8:	4b01      	ldr	r3, [pc, #4]	; (80004b0 <__errno+0x8>)
 80004aa:	6818      	ldr	r0, [r3, #0]
 80004ac:	4770      	bx	lr
 80004ae:	bf00      	nop
 80004b0:	20000000 	.word	0x20000000

080004b4 <__libc_init_array>:
 80004b4:	b570      	push	{r4, r5, r6, lr}
 80004b6:	4d0d      	ldr	r5, [pc, #52]	; (80004ec <__libc_init_array+0x38>)
 80004b8:	4c0d      	ldr	r4, [pc, #52]	; (80004f0 <__libc_init_array+0x3c>)
 80004ba:	1b64      	subs	r4, r4, r5
 80004bc:	10a4      	asrs	r4, r4, #2
 80004be:	2600      	movs	r6, #0
 80004c0:	42a6      	cmp	r6, r4
 80004c2:	d109      	bne.n	80004d8 <__libc_init_array+0x24>
 80004c4:	4d0b      	ldr	r5, [pc, #44]	; (80004f4 <__libc_init_array+0x40>)
 80004c6:	4c0c      	ldr	r4, [pc, #48]	; (80004f8 <__libc_init_array+0x44>)
 80004c8:	f001 fa8e 	bl	80019e8 <_init>
 80004cc:	1b64      	subs	r4, r4, r5
 80004ce:	10a4      	asrs	r4, r4, #2
 80004d0:	2600      	movs	r6, #0
 80004d2:	42a6      	cmp	r6, r4
 80004d4:	d105      	bne.n	80004e2 <__libc_init_array+0x2e>
 80004d6:	bd70      	pop	{r4, r5, r6, pc}
 80004d8:	f855 3b04 	ldr.w	r3, [r5], #4
 80004dc:	4798      	blx	r3
 80004de:	3601      	adds	r6, #1
 80004e0:	e7ee      	b.n	80004c0 <__libc_init_array+0xc>
 80004e2:	f855 3b04 	ldr.w	r3, [r5], #4
 80004e6:	4798      	blx	r3
 80004e8:	3601      	adds	r6, #1
 80004ea:	e7f2      	b.n	80004d2 <__libc_init_array+0x1e>
 80004ec:	08001c18 	.word	0x08001c18
 80004f0:	08001c18 	.word	0x08001c18
 80004f4:	08001c18 	.word	0x08001c18
 80004f8:	08001c1c 	.word	0x08001c1c

080004fc <memset>:
 80004fc:	4402      	add	r2, r0
 80004fe:	4603      	mov	r3, r0
 8000500:	4293      	cmp	r3, r2
 8000502:	d100      	bne.n	8000506 <memset+0xa>
 8000504:	4770      	bx	lr
 8000506:	f803 1b01 	strb.w	r1, [r3], #1
 800050a:	e7f9      	b.n	8000500 <memset+0x4>

0800050c <iprintf>:
 800050c:	b40f      	push	{r0, r1, r2, r3}
 800050e:	4b0a      	ldr	r3, [pc, #40]	; (8000538 <iprintf+0x2c>)
 8000510:	b513      	push	{r0, r1, r4, lr}
 8000512:	681c      	ldr	r4, [r3, #0]
 8000514:	b124      	cbz	r4, 8000520 <iprintf+0x14>
 8000516:	69a3      	ldr	r3, [r4, #24]
 8000518:	b913      	cbnz	r3, 8000520 <iprintf+0x14>
 800051a:	4620      	mov	r0, r4
 800051c:	f000 fa5e 	bl	80009dc <__sinit>
 8000520:	ab05      	add	r3, sp, #20
 8000522:	9a04      	ldr	r2, [sp, #16]
 8000524:	68a1      	ldr	r1, [r4, #8]
 8000526:	9301      	str	r3, [sp, #4]
 8000528:	4620      	mov	r0, r4
 800052a:	f000 fc2b 	bl	8000d84 <_vfiprintf_r>
 800052e:	b002      	add	sp, #8
 8000530:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000534:	b004      	add	sp, #16
 8000536:	4770      	bx	lr
 8000538:	20000000 	.word	0x20000000

0800053c <_puts_r>:
 800053c:	b570      	push	{r4, r5, r6, lr}
 800053e:	460e      	mov	r6, r1
 8000540:	4605      	mov	r5, r0
 8000542:	b118      	cbz	r0, 800054c <_puts_r+0x10>
 8000544:	6983      	ldr	r3, [r0, #24]
 8000546:	b90b      	cbnz	r3, 800054c <_puts_r+0x10>
 8000548:	f000 fa48 	bl	80009dc <__sinit>
 800054c:	69ab      	ldr	r3, [r5, #24]
 800054e:	68ac      	ldr	r4, [r5, #8]
 8000550:	b913      	cbnz	r3, 8000558 <_puts_r+0x1c>
 8000552:	4628      	mov	r0, r5
 8000554:	f000 fa42 	bl	80009dc <__sinit>
 8000558:	4b2c      	ldr	r3, [pc, #176]	; (800060c <_puts_r+0xd0>)
 800055a:	429c      	cmp	r4, r3
 800055c:	d120      	bne.n	80005a0 <_puts_r+0x64>
 800055e:	686c      	ldr	r4, [r5, #4]
 8000560:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000562:	07db      	lsls	r3, r3, #31
 8000564:	d405      	bmi.n	8000572 <_puts_r+0x36>
 8000566:	89a3      	ldrh	r3, [r4, #12]
 8000568:	0598      	lsls	r0, r3, #22
 800056a:	d402      	bmi.n	8000572 <_puts_r+0x36>
 800056c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800056e:	f000 fad3 	bl	8000b18 <__retarget_lock_acquire_recursive>
 8000572:	89a3      	ldrh	r3, [r4, #12]
 8000574:	0719      	lsls	r1, r3, #28
 8000576:	d51d      	bpl.n	80005b4 <_puts_r+0x78>
 8000578:	6923      	ldr	r3, [r4, #16]
 800057a:	b1db      	cbz	r3, 80005b4 <_puts_r+0x78>
 800057c:	3e01      	subs	r6, #1
 800057e:	68a3      	ldr	r3, [r4, #8]
 8000580:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000584:	3b01      	subs	r3, #1
 8000586:	60a3      	str	r3, [r4, #8]
 8000588:	bb39      	cbnz	r1, 80005da <_puts_r+0x9e>
 800058a:	2b00      	cmp	r3, #0
 800058c:	da38      	bge.n	8000600 <_puts_r+0xc4>
 800058e:	4622      	mov	r2, r4
 8000590:	210a      	movs	r1, #10
 8000592:	4628      	mov	r0, r5
 8000594:	f000 f848 	bl	8000628 <__swbuf_r>
 8000598:	3001      	adds	r0, #1
 800059a:	d011      	beq.n	80005c0 <_puts_r+0x84>
 800059c:	250a      	movs	r5, #10
 800059e:	e011      	b.n	80005c4 <_puts_r+0x88>
 80005a0:	4b1b      	ldr	r3, [pc, #108]	; (8000610 <_puts_r+0xd4>)
 80005a2:	429c      	cmp	r4, r3
 80005a4:	d101      	bne.n	80005aa <_puts_r+0x6e>
 80005a6:	68ac      	ldr	r4, [r5, #8]
 80005a8:	e7da      	b.n	8000560 <_puts_r+0x24>
 80005aa:	4b1a      	ldr	r3, [pc, #104]	; (8000614 <_puts_r+0xd8>)
 80005ac:	429c      	cmp	r4, r3
 80005ae:	bf08      	it	eq
 80005b0:	68ec      	ldreq	r4, [r5, #12]
 80005b2:	e7d5      	b.n	8000560 <_puts_r+0x24>
 80005b4:	4621      	mov	r1, r4
 80005b6:	4628      	mov	r0, r5
 80005b8:	f000 f888 	bl	80006cc <__swsetup_r>
 80005bc:	2800      	cmp	r0, #0
 80005be:	d0dd      	beq.n	800057c <_puts_r+0x40>
 80005c0:	f04f 35ff 	mov.w	r5, #4294967295
 80005c4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80005c6:	07da      	lsls	r2, r3, #31
 80005c8:	d405      	bmi.n	80005d6 <_puts_r+0x9a>
 80005ca:	89a3      	ldrh	r3, [r4, #12]
 80005cc:	059b      	lsls	r3, r3, #22
 80005ce:	d402      	bmi.n	80005d6 <_puts_r+0x9a>
 80005d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80005d2:	f000 faa2 	bl	8000b1a <__retarget_lock_release_recursive>
 80005d6:	4628      	mov	r0, r5
 80005d8:	bd70      	pop	{r4, r5, r6, pc}
 80005da:	2b00      	cmp	r3, #0
 80005dc:	da04      	bge.n	80005e8 <_puts_r+0xac>
 80005de:	69a2      	ldr	r2, [r4, #24]
 80005e0:	429a      	cmp	r2, r3
 80005e2:	dc06      	bgt.n	80005f2 <_puts_r+0xb6>
 80005e4:	290a      	cmp	r1, #10
 80005e6:	d004      	beq.n	80005f2 <_puts_r+0xb6>
 80005e8:	6823      	ldr	r3, [r4, #0]
 80005ea:	1c5a      	adds	r2, r3, #1
 80005ec:	6022      	str	r2, [r4, #0]
 80005ee:	7019      	strb	r1, [r3, #0]
 80005f0:	e7c5      	b.n	800057e <_puts_r+0x42>
 80005f2:	4622      	mov	r2, r4
 80005f4:	4628      	mov	r0, r5
 80005f6:	f000 f817 	bl	8000628 <__swbuf_r>
 80005fa:	3001      	adds	r0, #1
 80005fc:	d1bf      	bne.n	800057e <_puts_r+0x42>
 80005fe:	e7df      	b.n	80005c0 <_puts_r+0x84>
 8000600:	6823      	ldr	r3, [r4, #0]
 8000602:	250a      	movs	r5, #10
 8000604:	1c5a      	adds	r2, r3, #1
 8000606:	6022      	str	r2, [r4, #0]
 8000608:	701d      	strb	r5, [r3, #0]
 800060a:	e7db      	b.n	80005c4 <_puts_r+0x88>
 800060c:	08001b88 	.word	0x08001b88
 8000610:	08001ba8 	.word	0x08001ba8
 8000614:	08001b68 	.word	0x08001b68

08000618 <puts>:
 8000618:	4b02      	ldr	r3, [pc, #8]	; (8000624 <puts+0xc>)
 800061a:	4601      	mov	r1, r0
 800061c:	6818      	ldr	r0, [r3, #0]
 800061e:	f7ff bf8d 	b.w	800053c <_puts_r>
 8000622:	bf00      	nop
 8000624:	20000000 	.word	0x20000000

08000628 <__swbuf_r>:
 8000628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800062a:	460e      	mov	r6, r1
 800062c:	4614      	mov	r4, r2
 800062e:	4605      	mov	r5, r0
 8000630:	b118      	cbz	r0, 800063a <__swbuf_r+0x12>
 8000632:	6983      	ldr	r3, [r0, #24]
 8000634:	b90b      	cbnz	r3, 800063a <__swbuf_r+0x12>
 8000636:	f000 f9d1 	bl	80009dc <__sinit>
 800063a:	4b21      	ldr	r3, [pc, #132]	; (80006c0 <__swbuf_r+0x98>)
 800063c:	429c      	cmp	r4, r3
 800063e:	d12b      	bne.n	8000698 <__swbuf_r+0x70>
 8000640:	686c      	ldr	r4, [r5, #4]
 8000642:	69a3      	ldr	r3, [r4, #24]
 8000644:	60a3      	str	r3, [r4, #8]
 8000646:	89a3      	ldrh	r3, [r4, #12]
 8000648:	071a      	lsls	r2, r3, #28
 800064a:	d52f      	bpl.n	80006ac <__swbuf_r+0x84>
 800064c:	6923      	ldr	r3, [r4, #16]
 800064e:	b36b      	cbz	r3, 80006ac <__swbuf_r+0x84>
 8000650:	6923      	ldr	r3, [r4, #16]
 8000652:	6820      	ldr	r0, [r4, #0]
 8000654:	1ac0      	subs	r0, r0, r3
 8000656:	6963      	ldr	r3, [r4, #20]
 8000658:	b2f6      	uxtb	r6, r6
 800065a:	4283      	cmp	r3, r0
 800065c:	4637      	mov	r7, r6
 800065e:	dc04      	bgt.n	800066a <__swbuf_r+0x42>
 8000660:	4621      	mov	r1, r4
 8000662:	4628      	mov	r0, r5
 8000664:	f000 f926 	bl	80008b4 <_fflush_r>
 8000668:	bb30      	cbnz	r0, 80006b8 <__swbuf_r+0x90>
 800066a:	68a3      	ldr	r3, [r4, #8]
 800066c:	3b01      	subs	r3, #1
 800066e:	60a3      	str	r3, [r4, #8]
 8000670:	6823      	ldr	r3, [r4, #0]
 8000672:	1c5a      	adds	r2, r3, #1
 8000674:	6022      	str	r2, [r4, #0]
 8000676:	701e      	strb	r6, [r3, #0]
 8000678:	6963      	ldr	r3, [r4, #20]
 800067a:	3001      	adds	r0, #1
 800067c:	4283      	cmp	r3, r0
 800067e:	d004      	beq.n	800068a <__swbuf_r+0x62>
 8000680:	89a3      	ldrh	r3, [r4, #12]
 8000682:	07db      	lsls	r3, r3, #31
 8000684:	d506      	bpl.n	8000694 <__swbuf_r+0x6c>
 8000686:	2e0a      	cmp	r6, #10
 8000688:	d104      	bne.n	8000694 <__swbuf_r+0x6c>
 800068a:	4621      	mov	r1, r4
 800068c:	4628      	mov	r0, r5
 800068e:	f000 f911 	bl	80008b4 <_fflush_r>
 8000692:	b988      	cbnz	r0, 80006b8 <__swbuf_r+0x90>
 8000694:	4638      	mov	r0, r7
 8000696:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000698:	4b0a      	ldr	r3, [pc, #40]	; (80006c4 <__swbuf_r+0x9c>)
 800069a:	429c      	cmp	r4, r3
 800069c:	d101      	bne.n	80006a2 <__swbuf_r+0x7a>
 800069e:	68ac      	ldr	r4, [r5, #8]
 80006a0:	e7cf      	b.n	8000642 <__swbuf_r+0x1a>
 80006a2:	4b09      	ldr	r3, [pc, #36]	; (80006c8 <__swbuf_r+0xa0>)
 80006a4:	429c      	cmp	r4, r3
 80006a6:	bf08      	it	eq
 80006a8:	68ec      	ldreq	r4, [r5, #12]
 80006aa:	e7ca      	b.n	8000642 <__swbuf_r+0x1a>
 80006ac:	4621      	mov	r1, r4
 80006ae:	4628      	mov	r0, r5
 80006b0:	f000 f80c 	bl	80006cc <__swsetup_r>
 80006b4:	2800      	cmp	r0, #0
 80006b6:	d0cb      	beq.n	8000650 <__swbuf_r+0x28>
 80006b8:	f04f 37ff 	mov.w	r7, #4294967295
 80006bc:	e7ea      	b.n	8000694 <__swbuf_r+0x6c>
 80006be:	bf00      	nop
 80006c0:	08001b88 	.word	0x08001b88
 80006c4:	08001ba8 	.word	0x08001ba8
 80006c8:	08001b68 	.word	0x08001b68

080006cc <__swsetup_r>:
 80006cc:	4b32      	ldr	r3, [pc, #200]	; (8000798 <__swsetup_r+0xcc>)
 80006ce:	b570      	push	{r4, r5, r6, lr}
 80006d0:	681d      	ldr	r5, [r3, #0]
 80006d2:	4606      	mov	r6, r0
 80006d4:	460c      	mov	r4, r1
 80006d6:	b125      	cbz	r5, 80006e2 <__swsetup_r+0x16>
 80006d8:	69ab      	ldr	r3, [r5, #24]
 80006da:	b913      	cbnz	r3, 80006e2 <__swsetup_r+0x16>
 80006dc:	4628      	mov	r0, r5
 80006de:	f000 f97d 	bl	80009dc <__sinit>
 80006e2:	4b2e      	ldr	r3, [pc, #184]	; (800079c <__swsetup_r+0xd0>)
 80006e4:	429c      	cmp	r4, r3
 80006e6:	d10f      	bne.n	8000708 <__swsetup_r+0x3c>
 80006e8:	686c      	ldr	r4, [r5, #4]
 80006ea:	89a3      	ldrh	r3, [r4, #12]
 80006ec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006f0:	0719      	lsls	r1, r3, #28
 80006f2:	d42c      	bmi.n	800074e <__swsetup_r+0x82>
 80006f4:	06dd      	lsls	r5, r3, #27
 80006f6:	d411      	bmi.n	800071c <__swsetup_r+0x50>
 80006f8:	2309      	movs	r3, #9
 80006fa:	6033      	str	r3, [r6, #0]
 80006fc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000700:	81a3      	strh	r3, [r4, #12]
 8000702:	f04f 30ff 	mov.w	r0, #4294967295
 8000706:	e03e      	b.n	8000786 <__swsetup_r+0xba>
 8000708:	4b25      	ldr	r3, [pc, #148]	; (80007a0 <__swsetup_r+0xd4>)
 800070a:	429c      	cmp	r4, r3
 800070c:	d101      	bne.n	8000712 <__swsetup_r+0x46>
 800070e:	68ac      	ldr	r4, [r5, #8]
 8000710:	e7eb      	b.n	80006ea <__swsetup_r+0x1e>
 8000712:	4b24      	ldr	r3, [pc, #144]	; (80007a4 <__swsetup_r+0xd8>)
 8000714:	429c      	cmp	r4, r3
 8000716:	bf08      	it	eq
 8000718:	68ec      	ldreq	r4, [r5, #12]
 800071a:	e7e6      	b.n	80006ea <__swsetup_r+0x1e>
 800071c:	0758      	lsls	r0, r3, #29
 800071e:	d512      	bpl.n	8000746 <__swsetup_r+0x7a>
 8000720:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000722:	b141      	cbz	r1, 8000736 <__swsetup_r+0x6a>
 8000724:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000728:	4299      	cmp	r1, r3
 800072a:	d002      	beq.n	8000732 <__swsetup_r+0x66>
 800072c:	4630      	mov	r0, r6
 800072e:	f000 fa59 	bl	8000be4 <_free_r>
 8000732:	2300      	movs	r3, #0
 8000734:	6363      	str	r3, [r4, #52]	; 0x34
 8000736:	89a3      	ldrh	r3, [r4, #12]
 8000738:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800073c:	81a3      	strh	r3, [r4, #12]
 800073e:	2300      	movs	r3, #0
 8000740:	6063      	str	r3, [r4, #4]
 8000742:	6923      	ldr	r3, [r4, #16]
 8000744:	6023      	str	r3, [r4, #0]
 8000746:	89a3      	ldrh	r3, [r4, #12]
 8000748:	f043 0308 	orr.w	r3, r3, #8
 800074c:	81a3      	strh	r3, [r4, #12]
 800074e:	6923      	ldr	r3, [r4, #16]
 8000750:	b94b      	cbnz	r3, 8000766 <__swsetup_r+0x9a>
 8000752:	89a3      	ldrh	r3, [r4, #12]
 8000754:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000758:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800075c:	d003      	beq.n	8000766 <__swsetup_r+0x9a>
 800075e:	4621      	mov	r1, r4
 8000760:	4630      	mov	r0, r6
 8000762:	f000 f9ff 	bl	8000b64 <__smakebuf_r>
 8000766:	89a0      	ldrh	r0, [r4, #12]
 8000768:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800076c:	f010 0301 	ands.w	r3, r0, #1
 8000770:	d00a      	beq.n	8000788 <__swsetup_r+0xbc>
 8000772:	2300      	movs	r3, #0
 8000774:	60a3      	str	r3, [r4, #8]
 8000776:	6963      	ldr	r3, [r4, #20]
 8000778:	425b      	negs	r3, r3
 800077a:	61a3      	str	r3, [r4, #24]
 800077c:	6923      	ldr	r3, [r4, #16]
 800077e:	b943      	cbnz	r3, 8000792 <__swsetup_r+0xc6>
 8000780:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000784:	d1ba      	bne.n	80006fc <__swsetup_r+0x30>
 8000786:	bd70      	pop	{r4, r5, r6, pc}
 8000788:	0781      	lsls	r1, r0, #30
 800078a:	bf58      	it	pl
 800078c:	6963      	ldrpl	r3, [r4, #20]
 800078e:	60a3      	str	r3, [r4, #8]
 8000790:	e7f4      	b.n	800077c <__swsetup_r+0xb0>
 8000792:	2000      	movs	r0, #0
 8000794:	e7f7      	b.n	8000786 <__swsetup_r+0xba>
 8000796:	bf00      	nop
 8000798:	20000000 	.word	0x20000000
 800079c:	08001b88 	.word	0x08001b88
 80007a0:	08001ba8 	.word	0x08001ba8
 80007a4:	08001b68 	.word	0x08001b68

080007a8 <__sflush_r>:
 80007a8:	898a      	ldrh	r2, [r1, #12]
 80007aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007ae:	4605      	mov	r5, r0
 80007b0:	0710      	lsls	r0, r2, #28
 80007b2:	460c      	mov	r4, r1
 80007b4:	d458      	bmi.n	8000868 <__sflush_r+0xc0>
 80007b6:	684b      	ldr	r3, [r1, #4]
 80007b8:	2b00      	cmp	r3, #0
 80007ba:	dc05      	bgt.n	80007c8 <__sflush_r+0x20>
 80007bc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80007be:	2b00      	cmp	r3, #0
 80007c0:	dc02      	bgt.n	80007c8 <__sflush_r+0x20>
 80007c2:	2000      	movs	r0, #0
 80007c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80007c8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007ca:	2e00      	cmp	r6, #0
 80007cc:	d0f9      	beq.n	80007c2 <__sflush_r+0x1a>
 80007ce:	2300      	movs	r3, #0
 80007d0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80007d4:	682f      	ldr	r7, [r5, #0]
 80007d6:	602b      	str	r3, [r5, #0]
 80007d8:	d032      	beq.n	8000840 <__sflush_r+0x98>
 80007da:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80007dc:	89a3      	ldrh	r3, [r4, #12]
 80007de:	075a      	lsls	r2, r3, #29
 80007e0:	d505      	bpl.n	80007ee <__sflush_r+0x46>
 80007e2:	6863      	ldr	r3, [r4, #4]
 80007e4:	1ac0      	subs	r0, r0, r3
 80007e6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80007e8:	b10b      	cbz	r3, 80007ee <__sflush_r+0x46>
 80007ea:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80007ec:	1ac0      	subs	r0, r0, r3
 80007ee:	2300      	movs	r3, #0
 80007f0:	4602      	mov	r2, r0
 80007f2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007f4:	6a21      	ldr	r1, [r4, #32]
 80007f6:	4628      	mov	r0, r5
 80007f8:	47b0      	blx	r6
 80007fa:	1c43      	adds	r3, r0, #1
 80007fc:	89a3      	ldrh	r3, [r4, #12]
 80007fe:	d106      	bne.n	800080e <__sflush_r+0x66>
 8000800:	6829      	ldr	r1, [r5, #0]
 8000802:	291d      	cmp	r1, #29
 8000804:	d82c      	bhi.n	8000860 <__sflush_r+0xb8>
 8000806:	4a2a      	ldr	r2, [pc, #168]	; (80008b0 <__sflush_r+0x108>)
 8000808:	40ca      	lsrs	r2, r1
 800080a:	07d6      	lsls	r6, r2, #31
 800080c:	d528      	bpl.n	8000860 <__sflush_r+0xb8>
 800080e:	2200      	movs	r2, #0
 8000810:	6062      	str	r2, [r4, #4]
 8000812:	04d9      	lsls	r1, r3, #19
 8000814:	6922      	ldr	r2, [r4, #16]
 8000816:	6022      	str	r2, [r4, #0]
 8000818:	d504      	bpl.n	8000824 <__sflush_r+0x7c>
 800081a:	1c42      	adds	r2, r0, #1
 800081c:	d101      	bne.n	8000822 <__sflush_r+0x7a>
 800081e:	682b      	ldr	r3, [r5, #0]
 8000820:	b903      	cbnz	r3, 8000824 <__sflush_r+0x7c>
 8000822:	6560      	str	r0, [r4, #84]	; 0x54
 8000824:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000826:	602f      	str	r7, [r5, #0]
 8000828:	2900      	cmp	r1, #0
 800082a:	d0ca      	beq.n	80007c2 <__sflush_r+0x1a>
 800082c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000830:	4299      	cmp	r1, r3
 8000832:	d002      	beq.n	800083a <__sflush_r+0x92>
 8000834:	4628      	mov	r0, r5
 8000836:	f000 f9d5 	bl	8000be4 <_free_r>
 800083a:	2000      	movs	r0, #0
 800083c:	6360      	str	r0, [r4, #52]	; 0x34
 800083e:	e7c1      	b.n	80007c4 <__sflush_r+0x1c>
 8000840:	6a21      	ldr	r1, [r4, #32]
 8000842:	2301      	movs	r3, #1
 8000844:	4628      	mov	r0, r5
 8000846:	47b0      	blx	r6
 8000848:	1c41      	adds	r1, r0, #1
 800084a:	d1c7      	bne.n	80007dc <__sflush_r+0x34>
 800084c:	682b      	ldr	r3, [r5, #0]
 800084e:	2b00      	cmp	r3, #0
 8000850:	d0c4      	beq.n	80007dc <__sflush_r+0x34>
 8000852:	2b1d      	cmp	r3, #29
 8000854:	d001      	beq.n	800085a <__sflush_r+0xb2>
 8000856:	2b16      	cmp	r3, #22
 8000858:	d101      	bne.n	800085e <__sflush_r+0xb6>
 800085a:	602f      	str	r7, [r5, #0]
 800085c:	e7b1      	b.n	80007c2 <__sflush_r+0x1a>
 800085e:	89a3      	ldrh	r3, [r4, #12]
 8000860:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000864:	81a3      	strh	r3, [r4, #12]
 8000866:	e7ad      	b.n	80007c4 <__sflush_r+0x1c>
 8000868:	690f      	ldr	r7, [r1, #16]
 800086a:	2f00      	cmp	r7, #0
 800086c:	d0a9      	beq.n	80007c2 <__sflush_r+0x1a>
 800086e:	0793      	lsls	r3, r2, #30
 8000870:	680e      	ldr	r6, [r1, #0]
 8000872:	bf08      	it	eq
 8000874:	694b      	ldreq	r3, [r1, #20]
 8000876:	600f      	str	r7, [r1, #0]
 8000878:	bf18      	it	ne
 800087a:	2300      	movne	r3, #0
 800087c:	eba6 0807 	sub.w	r8, r6, r7
 8000880:	608b      	str	r3, [r1, #8]
 8000882:	f1b8 0f00 	cmp.w	r8, #0
 8000886:	dd9c      	ble.n	80007c2 <__sflush_r+0x1a>
 8000888:	6a21      	ldr	r1, [r4, #32]
 800088a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800088c:	4643      	mov	r3, r8
 800088e:	463a      	mov	r2, r7
 8000890:	4628      	mov	r0, r5
 8000892:	47b0      	blx	r6
 8000894:	2800      	cmp	r0, #0
 8000896:	dc06      	bgt.n	80008a6 <__sflush_r+0xfe>
 8000898:	89a3      	ldrh	r3, [r4, #12]
 800089a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800089e:	81a3      	strh	r3, [r4, #12]
 80008a0:	f04f 30ff 	mov.w	r0, #4294967295
 80008a4:	e78e      	b.n	80007c4 <__sflush_r+0x1c>
 80008a6:	4407      	add	r7, r0
 80008a8:	eba8 0800 	sub.w	r8, r8, r0
 80008ac:	e7e9      	b.n	8000882 <__sflush_r+0xda>
 80008ae:	bf00      	nop
 80008b0:	20400001 	.word	0x20400001

080008b4 <_fflush_r>:
 80008b4:	b538      	push	{r3, r4, r5, lr}
 80008b6:	690b      	ldr	r3, [r1, #16]
 80008b8:	4605      	mov	r5, r0
 80008ba:	460c      	mov	r4, r1
 80008bc:	b913      	cbnz	r3, 80008c4 <_fflush_r+0x10>
 80008be:	2500      	movs	r5, #0
 80008c0:	4628      	mov	r0, r5
 80008c2:	bd38      	pop	{r3, r4, r5, pc}
 80008c4:	b118      	cbz	r0, 80008ce <_fflush_r+0x1a>
 80008c6:	6983      	ldr	r3, [r0, #24]
 80008c8:	b90b      	cbnz	r3, 80008ce <_fflush_r+0x1a>
 80008ca:	f000 f887 	bl	80009dc <__sinit>
 80008ce:	4b14      	ldr	r3, [pc, #80]	; (8000920 <_fflush_r+0x6c>)
 80008d0:	429c      	cmp	r4, r3
 80008d2:	d11b      	bne.n	800090c <_fflush_r+0x58>
 80008d4:	686c      	ldr	r4, [r5, #4]
 80008d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008da:	2b00      	cmp	r3, #0
 80008dc:	d0ef      	beq.n	80008be <_fflush_r+0xa>
 80008de:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80008e0:	07d0      	lsls	r0, r2, #31
 80008e2:	d404      	bmi.n	80008ee <_fflush_r+0x3a>
 80008e4:	0599      	lsls	r1, r3, #22
 80008e6:	d402      	bmi.n	80008ee <_fflush_r+0x3a>
 80008e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008ea:	f000 f915 	bl	8000b18 <__retarget_lock_acquire_recursive>
 80008ee:	4628      	mov	r0, r5
 80008f0:	4621      	mov	r1, r4
 80008f2:	f7ff ff59 	bl	80007a8 <__sflush_r>
 80008f6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008f8:	07da      	lsls	r2, r3, #31
 80008fa:	4605      	mov	r5, r0
 80008fc:	d4e0      	bmi.n	80008c0 <_fflush_r+0xc>
 80008fe:	89a3      	ldrh	r3, [r4, #12]
 8000900:	059b      	lsls	r3, r3, #22
 8000902:	d4dd      	bmi.n	80008c0 <_fflush_r+0xc>
 8000904:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000906:	f000 f908 	bl	8000b1a <__retarget_lock_release_recursive>
 800090a:	e7d9      	b.n	80008c0 <_fflush_r+0xc>
 800090c:	4b05      	ldr	r3, [pc, #20]	; (8000924 <_fflush_r+0x70>)
 800090e:	429c      	cmp	r4, r3
 8000910:	d101      	bne.n	8000916 <_fflush_r+0x62>
 8000912:	68ac      	ldr	r4, [r5, #8]
 8000914:	e7df      	b.n	80008d6 <_fflush_r+0x22>
 8000916:	4b04      	ldr	r3, [pc, #16]	; (8000928 <_fflush_r+0x74>)
 8000918:	429c      	cmp	r4, r3
 800091a:	bf08      	it	eq
 800091c:	68ec      	ldreq	r4, [r5, #12]
 800091e:	e7da      	b.n	80008d6 <_fflush_r+0x22>
 8000920:	08001b88 	.word	0x08001b88
 8000924:	08001ba8 	.word	0x08001ba8
 8000928:	08001b68 	.word	0x08001b68

0800092c <std>:
 800092c:	2300      	movs	r3, #0
 800092e:	b510      	push	{r4, lr}
 8000930:	4604      	mov	r4, r0
 8000932:	e9c0 3300 	strd	r3, r3, [r0]
 8000936:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800093a:	6083      	str	r3, [r0, #8]
 800093c:	8181      	strh	r1, [r0, #12]
 800093e:	6643      	str	r3, [r0, #100]	; 0x64
 8000940:	81c2      	strh	r2, [r0, #14]
 8000942:	6183      	str	r3, [r0, #24]
 8000944:	4619      	mov	r1, r3
 8000946:	2208      	movs	r2, #8
 8000948:	305c      	adds	r0, #92	; 0x5c
 800094a:	f7ff fdd7 	bl	80004fc <memset>
 800094e:	4b05      	ldr	r3, [pc, #20]	; (8000964 <std+0x38>)
 8000950:	6263      	str	r3, [r4, #36]	; 0x24
 8000952:	4b05      	ldr	r3, [pc, #20]	; (8000968 <std+0x3c>)
 8000954:	62a3      	str	r3, [r4, #40]	; 0x28
 8000956:	4b05      	ldr	r3, [pc, #20]	; (800096c <std+0x40>)
 8000958:	62e3      	str	r3, [r4, #44]	; 0x2c
 800095a:	4b05      	ldr	r3, [pc, #20]	; (8000970 <std+0x44>)
 800095c:	6224      	str	r4, [r4, #32]
 800095e:	6323      	str	r3, [r4, #48]	; 0x30
 8000960:	bd10      	pop	{r4, pc}
 8000962:	bf00      	nop
 8000964:	0800132d 	.word	0x0800132d
 8000968:	0800134f 	.word	0x0800134f
 800096c:	08001387 	.word	0x08001387
 8000970:	080013ab 	.word	0x080013ab

08000974 <_cleanup_r>:
 8000974:	4901      	ldr	r1, [pc, #4]	; (800097c <_cleanup_r+0x8>)
 8000976:	f000 b8af 	b.w	8000ad8 <_fwalk_reent>
 800097a:	bf00      	nop
 800097c:	080008b5 	.word	0x080008b5

08000980 <__sfmoreglue>:
 8000980:	b570      	push	{r4, r5, r6, lr}
 8000982:	1e4a      	subs	r2, r1, #1
 8000984:	2568      	movs	r5, #104	; 0x68
 8000986:	4355      	muls	r5, r2
 8000988:	460e      	mov	r6, r1
 800098a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800098e:	f000 f977 	bl	8000c80 <_malloc_r>
 8000992:	4604      	mov	r4, r0
 8000994:	b140      	cbz	r0, 80009a8 <__sfmoreglue+0x28>
 8000996:	2100      	movs	r1, #0
 8000998:	e9c0 1600 	strd	r1, r6, [r0]
 800099c:	300c      	adds	r0, #12
 800099e:	60a0      	str	r0, [r4, #8]
 80009a0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80009a4:	f7ff fdaa 	bl	80004fc <memset>
 80009a8:	4620      	mov	r0, r4
 80009aa:	bd70      	pop	{r4, r5, r6, pc}

080009ac <__sfp_lock_acquire>:
 80009ac:	4801      	ldr	r0, [pc, #4]	; (80009b4 <__sfp_lock_acquire+0x8>)
 80009ae:	f000 b8b3 	b.w	8000b18 <__retarget_lock_acquire_recursive>
 80009b2:	bf00      	nop
 80009b4:	20000148 	.word	0x20000148

080009b8 <__sfp_lock_release>:
 80009b8:	4801      	ldr	r0, [pc, #4]	; (80009c0 <__sfp_lock_release+0x8>)
 80009ba:	f000 b8ae 	b.w	8000b1a <__retarget_lock_release_recursive>
 80009be:	bf00      	nop
 80009c0:	20000148 	.word	0x20000148

080009c4 <__sinit_lock_acquire>:
 80009c4:	4801      	ldr	r0, [pc, #4]	; (80009cc <__sinit_lock_acquire+0x8>)
 80009c6:	f000 b8a7 	b.w	8000b18 <__retarget_lock_acquire_recursive>
 80009ca:	bf00      	nop
 80009cc:	20000143 	.word	0x20000143

080009d0 <__sinit_lock_release>:
 80009d0:	4801      	ldr	r0, [pc, #4]	; (80009d8 <__sinit_lock_release+0x8>)
 80009d2:	f000 b8a2 	b.w	8000b1a <__retarget_lock_release_recursive>
 80009d6:	bf00      	nop
 80009d8:	20000143 	.word	0x20000143

080009dc <__sinit>:
 80009dc:	b510      	push	{r4, lr}
 80009de:	4604      	mov	r4, r0
 80009e0:	f7ff fff0 	bl	80009c4 <__sinit_lock_acquire>
 80009e4:	69a3      	ldr	r3, [r4, #24]
 80009e6:	b11b      	cbz	r3, 80009f0 <__sinit+0x14>
 80009e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80009ec:	f7ff bff0 	b.w	80009d0 <__sinit_lock_release>
 80009f0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80009f4:	6523      	str	r3, [r4, #80]	; 0x50
 80009f6:	4b13      	ldr	r3, [pc, #76]	; (8000a44 <__sinit+0x68>)
 80009f8:	4a13      	ldr	r2, [pc, #76]	; (8000a48 <__sinit+0x6c>)
 80009fa:	681b      	ldr	r3, [r3, #0]
 80009fc:	62a2      	str	r2, [r4, #40]	; 0x28
 80009fe:	42a3      	cmp	r3, r4
 8000a00:	bf04      	itt	eq
 8000a02:	2301      	moveq	r3, #1
 8000a04:	61a3      	streq	r3, [r4, #24]
 8000a06:	4620      	mov	r0, r4
 8000a08:	f000 f820 	bl	8000a4c <__sfp>
 8000a0c:	6060      	str	r0, [r4, #4]
 8000a0e:	4620      	mov	r0, r4
 8000a10:	f000 f81c 	bl	8000a4c <__sfp>
 8000a14:	60a0      	str	r0, [r4, #8]
 8000a16:	4620      	mov	r0, r4
 8000a18:	f000 f818 	bl	8000a4c <__sfp>
 8000a1c:	2200      	movs	r2, #0
 8000a1e:	60e0      	str	r0, [r4, #12]
 8000a20:	2104      	movs	r1, #4
 8000a22:	6860      	ldr	r0, [r4, #4]
 8000a24:	f7ff ff82 	bl	800092c <std>
 8000a28:	68a0      	ldr	r0, [r4, #8]
 8000a2a:	2201      	movs	r2, #1
 8000a2c:	2109      	movs	r1, #9
 8000a2e:	f7ff ff7d 	bl	800092c <std>
 8000a32:	68e0      	ldr	r0, [r4, #12]
 8000a34:	2202      	movs	r2, #2
 8000a36:	2112      	movs	r1, #18
 8000a38:	f7ff ff78 	bl	800092c <std>
 8000a3c:	2301      	movs	r3, #1
 8000a3e:	61a3      	str	r3, [r4, #24]
 8000a40:	e7d2      	b.n	80009e8 <__sinit+0xc>
 8000a42:	bf00      	nop
 8000a44:	08001b64 	.word	0x08001b64
 8000a48:	08000975 	.word	0x08000975

08000a4c <__sfp>:
 8000a4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a4e:	4607      	mov	r7, r0
 8000a50:	f7ff ffac 	bl	80009ac <__sfp_lock_acquire>
 8000a54:	4b1e      	ldr	r3, [pc, #120]	; (8000ad0 <__sfp+0x84>)
 8000a56:	681e      	ldr	r6, [r3, #0]
 8000a58:	69b3      	ldr	r3, [r6, #24]
 8000a5a:	b913      	cbnz	r3, 8000a62 <__sfp+0x16>
 8000a5c:	4630      	mov	r0, r6
 8000a5e:	f7ff ffbd 	bl	80009dc <__sinit>
 8000a62:	3648      	adds	r6, #72	; 0x48
 8000a64:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a68:	3b01      	subs	r3, #1
 8000a6a:	d503      	bpl.n	8000a74 <__sfp+0x28>
 8000a6c:	6833      	ldr	r3, [r6, #0]
 8000a6e:	b30b      	cbz	r3, 8000ab4 <__sfp+0x68>
 8000a70:	6836      	ldr	r6, [r6, #0]
 8000a72:	e7f7      	b.n	8000a64 <__sfp+0x18>
 8000a74:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a78:	b9d5      	cbnz	r5, 8000ab0 <__sfp+0x64>
 8000a7a:	4b16      	ldr	r3, [pc, #88]	; (8000ad4 <__sfp+0x88>)
 8000a7c:	60e3      	str	r3, [r4, #12]
 8000a7e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000a82:	6665      	str	r5, [r4, #100]	; 0x64
 8000a84:	f000 f847 	bl	8000b16 <__retarget_lock_init_recursive>
 8000a88:	f7ff ff96 	bl	80009b8 <__sfp_lock_release>
 8000a8c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000a90:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000a94:	6025      	str	r5, [r4, #0]
 8000a96:	61a5      	str	r5, [r4, #24]
 8000a98:	2208      	movs	r2, #8
 8000a9a:	4629      	mov	r1, r5
 8000a9c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000aa0:	f7ff fd2c 	bl	80004fc <memset>
 8000aa4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000aa8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000aac:	4620      	mov	r0, r4
 8000aae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ab0:	3468      	adds	r4, #104	; 0x68
 8000ab2:	e7d9      	b.n	8000a68 <__sfp+0x1c>
 8000ab4:	2104      	movs	r1, #4
 8000ab6:	4638      	mov	r0, r7
 8000ab8:	f7ff ff62 	bl	8000980 <__sfmoreglue>
 8000abc:	4604      	mov	r4, r0
 8000abe:	6030      	str	r0, [r6, #0]
 8000ac0:	2800      	cmp	r0, #0
 8000ac2:	d1d5      	bne.n	8000a70 <__sfp+0x24>
 8000ac4:	f7ff ff78 	bl	80009b8 <__sfp_lock_release>
 8000ac8:	230c      	movs	r3, #12
 8000aca:	603b      	str	r3, [r7, #0]
 8000acc:	e7ee      	b.n	8000aac <__sfp+0x60>
 8000ace:	bf00      	nop
 8000ad0:	08001b64 	.word	0x08001b64
 8000ad4:	ffff0001 	.word	0xffff0001

08000ad8 <_fwalk_reent>:
 8000ad8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000adc:	4606      	mov	r6, r0
 8000ade:	4688      	mov	r8, r1
 8000ae0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000ae4:	2700      	movs	r7, #0
 8000ae6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000aea:	f1b9 0901 	subs.w	r9, r9, #1
 8000aee:	d505      	bpl.n	8000afc <_fwalk_reent+0x24>
 8000af0:	6824      	ldr	r4, [r4, #0]
 8000af2:	2c00      	cmp	r4, #0
 8000af4:	d1f7      	bne.n	8000ae6 <_fwalk_reent+0xe>
 8000af6:	4638      	mov	r0, r7
 8000af8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000afc:	89ab      	ldrh	r3, [r5, #12]
 8000afe:	2b01      	cmp	r3, #1
 8000b00:	d907      	bls.n	8000b12 <_fwalk_reent+0x3a>
 8000b02:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b06:	3301      	adds	r3, #1
 8000b08:	d003      	beq.n	8000b12 <_fwalk_reent+0x3a>
 8000b0a:	4629      	mov	r1, r5
 8000b0c:	4630      	mov	r0, r6
 8000b0e:	47c0      	blx	r8
 8000b10:	4307      	orrs	r7, r0
 8000b12:	3568      	adds	r5, #104	; 0x68
 8000b14:	e7e9      	b.n	8000aea <_fwalk_reent+0x12>

08000b16 <__retarget_lock_init_recursive>:
 8000b16:	4770      	bx	lr

08000b18 <__retarget_lock_acquire_recursive>:
 8000b18:	4770      	bx	lr

08000b1a <__retarget_lock_release_recursive>:
 8000b1a:	4770      	bx	lr

08000b1c <__swhatbuf_r>:
 8000b1c:	b570      	push	{r4, r5, r6, lr}
 8000b1e:	460e      	mov	r6, r1
 8000b20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b24:	2900      	cmp	r1, #0
 8000b26:	b096      	sub	sp, #88	; 0x58
 8000b28:	4614      	mov	r4, r2
 8000b2a:	461d      	mov	r5, r3
 8000b2c:	da07      	bge.n	8000b3e <__swhatbuf_r+0x22>
 8000b2e:	2300      	movs	r3, #0
 8000b30:	602b      	str	r3, [r5, #0]
 8000b32:	89b3      	ldrh	r3, [r6, #12]
 8000b34:	061a      	lsls	r2, r3, #24
 8000b36:	d410      	bmi.n	8000b5a <__swhatbuf_r+0x3e>
 8000b38:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b3c:	e00e      	b.n	8000b5c <__swhatbuf_r+0x40>
 8000b3e:	466a      	mov	r2, sp
 8000b40:	f000 fc5a 	bl	80013f8 <_fstat_r>
 8000b44:	2800      	cmp	r0, #0
 8000b46:	dbf2      	blt.n	8000b2e <__swhatbuf_r+0x12>
 8000b48:	9a01      	ldr	r2, [sp, #4]
 8000b4a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b4e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b52:	425a      	negs	r2, r3
 8000b54:	415a      	adcs	r2, r3
 8000b56:	602a      	str	r2, [r5, #0]
 8000b58:	e7ee      	b.n	8000b38 <__swhatbuf_r+0x1c>
 8000b5a:	2340      	movs	r3, #64	; 0x40
 8000b5c:	2000      	movs	r0, #0
 8000b5e:	6023      	str	r3, [r4, #0]
 8000b60:	b016      	add	sp, #88	; 0x58
 8000b62:	bd70      	pop	{r4, r5, r6, pc}

08000b64 <__smakebuf_r>:
 8000b64:	898b      	ldrh	r3, [r1, #12]
 8000b66:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b68:	079d      	lsls	r5, r3, #30
 8000b6a:	4606      	mov	r6, r0
 8000b6c:	460c      	mov	r4, r1
 8000b6e:	d507      	bpl.n	8000b80 <__smakebuf_r+0x1c>
 8000b70:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b74:	6023      	str	r3, [r4, #0]
 8000b76:	6123      	str	r3, [r4, #16]
 8000b78:	2301      	movs	r3, #1
 8000b7a:	6163      	str	r3, [r4, #20]
 8000b7c:	b002      	add	sp, #8
 8000b7e:	bd70      	pop	{r4, r5, r6, pc}
 8000b80:	ab01      	add	r3, sp, #4
 8000b82:	466a      	mov	r2, sp
 8000b84:	f7ff ffca 	bl	8000b1c <__swhatbuf_r>
 8000b88:	9900      	ldr	r1, [sp, #0]
 8000b8a:	4605      	mov	r5, r0
 8000b8c:	4630      	mov	r0, r6
 8000b8e:	f000 f877 	bl	8000c80 <_malloc_r>
 8000b92:	b948      	cbnz	r0, 8000ba8 <__smakebuf_r+0x44>
 8000b94:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b98:	059a      	lsls	r2, r3, #22
 8000b9a:	d4ef      	bmi.n	8000b7c <__smakebuf_r+0x18>
 8000b9c:	f023 0303 	bic.w	r3, r3, #3
 8000ba0:	f043 0302 	orr.w	r3, r3, #2
 8000ba4:	81a3      	strh	r3, [r4, #12]
 8000ba6:	e7e3      	b.n	8000b70 <__smakebuf_r+0xc>
 8000ba8:	4b0d      	ldr	r3, [pc, #52]	; (8000be0 <__smakebuf_r+0x7c>)
 8000baa:	62b3      	str	r3, [r6, #40]	; 0x28
 8000bac:	89a3      	ldrh	r3, [r4, #12]
 8000bae:	6020      	str	r0, [r4, #0]
 8000bb0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000bb4:	81a3      	strh	r3, [r4, #12]
 8000bb6:	9b00      	ldr	r3, [sp, #0]
 8000bb8:	6163      	str	r3, [r4, #20]
 8000bba:	9b01      	ldr	r3, [sp, #4]
 8000bbc:	6120      	str	r0, [r4, #16]
 8000bbe:	b15b      	cbz	r3, 8000bd8 <__smakebuf_r+0x74>
 8000bc0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000bc4:	4630      	mov	r0, r6
 8000bc6:	f000 fc29 	bl	800141c <_isatty_r>
 8000bca:	b128      	cbz	r0, 8000bd8 <__smakebuf_r+0x74>
 8000bcc:	89a3      	ldrh	r3, [r4, #12]
 8000bce:	f023 0303 	bic.w	r3, r3, #3
 8000bd2:	f043 0301 	orr.w	r3, r3, #1
 8000bd6:	81a3      	strh	r3, [r4, #12]
 8000bd8:	89a0      	ldrh	r0, [r4, #12]
 8000bda:	4305      	orrs	r5, r0
 8000bdc:	81a5      	strh	r5, [r4, #12]
 8000bde:	e7cd      	b.n	8000b7c <__smakebuf_r+0x18>
 8000be0:	08000975 	.word	0x08000975

08000be4 <_free_r>:
 8000be4:	b538      	push	{r3, r4, r5, lr}
 8000be6:	4605      	mov	r5, r0
 8000be8:	2900      	cmp	r1, #0
 8000bea:	d045      	beq.n	8000c78 <_free_r+0x94>
 8000bec:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bf0:	1f0c      	subs	r4, r1, #4
 8000bf2:	2b00      	cmp	r3, #0
 8000bf4:	bfb8      	it	lt
 8000bf6:	18e4      	addlt	r4, r4, r3
 8000bf8:	f000 fc32 	bl	8001460 <__malloc_lock>
 8000bfc:	4a1f      	ldr	r2, [pc, #124]	; (8000c7c <_free_r+0x98>)
 8000bfe:	6813      	ldr	r3, [r2, #0]
 8000c00:	4610      	mov	r0, r2
 8000c02:	b933      	cbnz	r3, 8000c12 <_free_r+0x2e>
 8000c04:	6063      	str	r3, [r4, #4]
 8000c06:	6014      	str	r4, [r2, #0]
 8000c08:	4628      	mov	r0, r5
 8000c0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c0e:	f000 bc2d 	b.w	800146c <__malloc_unlock>
 8000c12:	42a3      	cmp	r3, r4
 8000c14:	d90b      	bls.n	8000c2e <_free_r+0x4a>
 8000c16:	6821      	ldr	r1, [r4, #0]
 8000c18:	1862      	adds	r2, r4, r1
 8000c1a:	4293      	cmp	r3, r2
 8000c1c:	bf04      	itt	eq
 8000c1e:	681a      	ldreq	r2, [r3, #0]
 8000c20:	685b      	ldreq	r3, [r3, #4]
 8000c22:	6063      	str	r3, [r4, #4]
 8000c24:	bf04      	itt	eq
 8000c26:	1852      	addeq	r2, r2, r1
 8000c28:	6022      	streq	r2, [r4, #0]
 8000c2a:	6004      	str	r4, [r0, #0]
 8000c2c:	e7ec      	b.n	8000c08 <_free_r+0x24>
 8000c2e:	461a      	mov	r2, r3
 8000c30:	685b      	ldr	r3, [r3, #4]
 8000c32:	b10b      	cbz	r3, 8000c38 <_free_r+0x54>
 8000c34:	42a3      	cmp	r3, r4
 8000c36:	d9fa      	bls.n	8000c2e <_free_r+0x4a>
 8000c38:	6811      	ldr	r1, [r2, #0]
 8000c3a:	1850      	adds	r0, r2, r1
 8000c3c:	42a0      	cmp	r0, r4
 8000c3e:	d10b      	bne.n	8000c58 <_free_r+0x74>
 8000c40:	6820      	ldr	r0, [r4, #0]
 8000c42:	4401      	add	r1, r0
 8000c44:	1850      	adds	r0, r2, r1
 8000c46:	4283      	cmp	r3, r0
 8000c48:	6011      	str	r1, [r2, #0]
 8000c4a:	d1dd      	bne.n	8000c08 <_free_r+0x24>
 8000c4c:	6818      	ldr	r0, [r3, #0]
 8000c4e:	685b      	ldr	r3, [r3, #4]
 8000c50:	6053      	str	r3, [r2, #4]
 8000c52:	4401      	add	r1, r0
 8000c54:	6011      	str	r1, [r2, #0]
 8000c56:	e7d7      	b.n	8000c08 <_free_r+0x24>
 8000c58:	d902      	bls.n	8000c60 <_free_r+0x7c>
 8000c5a:	230c      	movs	r3, #12
 8000c5c:	602b      	str	r3, [r5, #0]
 8000c5e:	e7d3      	b.n	8000c08 <_free_r+0x24>
 8000c60:	6820      	ldr	r0, [r4, #0]
 8000c62:	1821      	adds	r1, r4, r0
 8000c64:	428b      	cmp	r3, r1
 8000c66:	bf04      	itt	eq
 8000c68:	6819      	ldreq	r1, [r3, #0]
 8000c6a:	685b      	ldreq	r3, [r3, #4]
 8000c6c:	6063      	str	r3, [r4, #4]
 8000c6e:	bf04      	itt	eq
 8000c70:	1809      	addeq	r1, r1, r0
 8000c72:	6021      	streq	r1, [r4, #0]
 8000c74:	6054      	str	r4, [r2, #4]
 8000c76:	e7c7      	b.n	8000c08 <_free_r+0x24>
 8000c78:	bd38      	pop	{r3, r4, r5, pc}
 8000c7a:	bf00      	nop
 8000c7c:	2000008c 	.word	0x2000008c

08000c80 <_malloc_r>:
 8000c80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c82:	1ccd      	adds	r5, r1, #3
 8000c84:	f025 0503 	bic.w	r5, r5, #3
 8000c88:	3508      	adds	r5, #8
 8000c8a:	2d0c      	cmp	r5, #12
 8000c8c:	bf38      	it	cc
 8000c8e:	250c      	movcc	r5, #12
 8000c90:	2d00      	cmp	r5, #0
 8000c92:	4606      	mov	r6, r0
 8000c94:	db01      	blt.n	8000c9a <_malloc_r+0x1a>
 8000c96:	42a9      	cmp	r1, r5
 8000c98:	d903      	bls.n	8000ca2 <_malloc_r+0x22>
 8000c9a:	230c      	movs	r3, #12
 8000c9c:	6033      	str	r3, [r6, #0]
 8000c9e:	2000      	movs	r0, #0
 8000ca0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ca2:	f000 fbdd 	bl	8001460 <__malloc_lock>
 8000ca6:	4921      	ldr	r1, [pc, #132]	; (8000d2c <_malloc_r+0xac>)
 8000ca8:	680a      	ldr	r2, [r1, #0]
 8000caa:	4614      	mov	r4, r2
 8000cac:	b99c      	cbnz	r4, 8000cd6 <_malloc_r+0x56>
 8000cae:	4f20      	ldr	r7, [pc, #128]	; (8000d30 <_malloc_r+0xb0>)
 8000cb0:	683b      	ldr	r3, [r7, #0]
 8000cb2:	b923      	cbnz	r3, 8000cbe <_malloc_r+0x3e>
 8000cb4:	4621      	mov	r1, r4
 8000cb6:	4630      	mov	r0, r6
 8000cb8:	f000 fb28 	bl	800130c <_sbrk_r>
 8000cbc:	6038      	str	r0, [r7, #0]
 8000cbe:	4629      	mov	r1, r5
 8000cc0:	4630      	mov	r0, r6
 8000cc2:	f000 fb23 	bl	800130c <_sbrk_r>
 8000cc6:	1c43      	adds	r3, r0, #1
 8000cc8:	d123      	bne.n	8000d12 <_malloc_r+0x92>
 8000cca:	230c      	movs	r3, #12
 8000ccc:	6033      	str	r3, [r6, #0]
 8000cce:	4630      	mov	r0, r6
 8000cd0:	f000 fbcc 	bl	800146c <__malloc_unlock>
 8000cd4:	e7e3      	b.n	8000c9e <_malloc_r+0x1e>
 8000cd6:	6823      	ldr	r3, [r4, #0]
 8000cd8:	1b5b      	subs	r3, r3, r5
 8000cda:	d417      	bmi.n	8000d0c <_malloc_r+0x8c>
 8000cdc:	2b0b      	cmp	r3, #11
 8000cde:	d903      	bls.n	8000ce8 <_malloc_r+0x68>
 8000ce0:	6023      	str	r3, [r4, #0]
 8000ce2:	441c      	add	r4, r3
 8000ce4:	6025      	str	r5, [r4, #0]
 8000ce6:	e004      	b.n	8000cf2 <_malloc_r+0x72>
 8000ce8:	6863      	ldr	r3, [r4, #4]
 8000cea:	42a2      	cmp	r2, r4
 8000cec:	bf0c      	ite	eq
 8000cee:	600b      	streq	r3, [r1, #0]
 8000cf0:	6053      	strne	r3, [r2, #4]
 8000cf2:	4630      	mov	r0, r6
 8000cf4:	f000 fbba 	bl	800146c <__malloc_unlock>
 8000cf8:	f104 000b 	add.w	r0, r4, #11
 8000cfc:	1d23      	adds	r3, r4, #4
 8000cfe:	f020 0007 	bic.w	r0, r0, #7
 8000d02:	1ac2      	subs	r2, r0, r3
 8000d04:	d0cc      	beq.n	8000ca0 <_malloc_r+0x20>
 8000d06:	1a1b      	subs	r3, r3, r0
 8000d08:	50a3      	str	r3, [r4, r2]
 8000d0a:	e7c9      	b.n	8000ca0 <_malloc_r+0x20>
 8000d0c:	4622      	mov	r2, r4
 8000d0e:	6864      	ldr	r4, [r4, #4]
 8000d10:	e7cc      	b.n	8000cac <_malloc_r+0x2c>
 8000d12:	1cc4      	adds	r4, r0, #3
 8000d14:	f024 0403 	bic.w	r4, r4, #3
 8000d18:	42a0      	cmp	r0, r4
 8000d1a:	d0e3      	beq.n	8000ce4 <_malloc_r+0x64>
 8000d1c:	1a21      	subs	r1, r4, r0
 8000d1e:	4630      	mov	r0, r6
 8000d20:	f000 faf4 	bl	800130c <_sbrk_r>
 8000d24:	3001      	adds	r0, #1
 8000d26:	d1dd      	bne.n	8000ce4 <_malloc_r+0x64>
 8000d28:	e7cf      	b.n	8000cca <_malloc_r+0x4a>
 8000d2a:	bf00      	nop
 8000d2c:	2000008c 	.word	0x2000008c
 8000d30:	20000090 	.word	0x20000090

08000d34 <__sfputc_r>:
 8000d34:	6893      	ldr	r3, [r2, #8]
 8000d36:	3b01      	subs	r3, #1
 8000d38:	2b00      	cmp	r3, #0
 8000d3a:	b410      	push	{r4}
 8000d3c:	6093      	str	r3, [r2, #8]
 8000d3e:	da07      	bge.n	8000d50 <__sfputc_r+0x1c>
 8000d40:	6994      	ldr	r4, [r2, #24]
 8000d42:	42a3      	cmp	r3, r4
 8000d44:	db01      	blt.n	8000d4a <__sfputc_r+0x16>
 8000d46:	290a      	cmp	r1, #10
 8000d48:	d102      	bne.n	8000d50 <__sfputc_r+0x1c>
 8000d4a:	bc10      	pop	{r4}
 8000d4c:	f7ff bc6c 	b.w	8000628 <__swbuf_r>
 8000d50:	6813      	ldr	r3, [r2, #0]
 8000d52:	1c58      	adds	r0, r3, #1
 8000d54:	6010      	str	r0, [r2, #0]
 8000d56:	7019      	strb	r1, [r3, #0]
 8000d58:	4608      	mov	r0, r1
 8000d5a:	bc10      	pop	{r4}
 8000d5c:	4770      	bx	lr

08000d5e <__sfputs_r>:
 8000d5e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d60:	4606      	mov	r6, r0
 8000d62:	460f      	mov	r7, r1
 8000d64:	4614      	mov	r4, r2
 8000d66:	18d5      	adds	r5, r2, r3
 8000d68:	42ac      	cmp	r4, r5
 8000d6a:	d101      	bne.n	8000d70 <__sfputs_r+0x12>
 8000d6c:	2000      	movs	r0, #0
 8000d6e:	e007      	b.n	8000d80 <__sfputs_r+0x22>
 8000d70:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d74:	463a      	mov	r2, r7
 8000d76:	4630      	mov	r0, r6
 8000d78:	f7ff ffdc 	bl	8000d34 <__sfputc_r>
 8000d7c:	1c43      	adds	r3, r0, #1
 8000d7e:	d1f3      	bne.n	8000d68 <__sfputs_r+0xa>
 8000d80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000d84 <_vfiprintf_r>:
 8000d84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d88:	460d      	mov	r5, r1
 8000d8a:	b09d      	sub	sp, #116	; 0x74
 8000d8c:	4614      	mov	r4, r2
 8000d8e:	4698      	mov	r8, r3
 8000d90:	4606      	mov	r6, r0
 8000d92:	b118      	cbz	r0, 8000d9c <_vfiprintf_r+0x18>
 8000d94:	6983      	ldr	r3, [r0, #24]
 8000d96:	b90b      	cbnz	r3, 8000d9c <_vfiprintf_r+0x18>
 8000d98:	f7ff fe20 	bl	80009dc <__sinit>
 8000d9c:	4b89      	ldr	r3, [pc, #548]	; (8000fc4 <_vfiprintf_r+0x240>)
 8000d9e:	429d      	cmp	r5, r3
 8000da0:	d11b      	bne.n	8000dda <_vfiprintf_r+0x56>
 8000da2:	6875      	ldr	r5, [r6, #4]
 8000da4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000da6:	07d9      	lsls	r1, r3, #31
 8000da8:	d405      	bmi.n	8000db6 <_vfiprintf_r+0x32>
 8000daa:	89ab      	ldrh	r3, [r5, #12]
 8000dac:	059a      	lsls	r2, r3, #22
 8000dae:	d402      	bmi.n	8000db6 <_vfiprintf_r+0x32>
 8000db0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000db2:	f7ff feb1 	bl	8000b18 <__retarget_lock_acquire_recursive>
 8000db6:	89ab      	ldrh	r3, [r5, #12]
 8000db8:	071b      	lsls	r3, r3, #28
 8000dba:	d501      	bpl.n	8000dc0 <_vfiprintf_r+0x3c>
 8000dbc:	692b      	ldr	r3, [r5, #16]
 8000dbe:	b9eb      	cbnz	r3, 8000dfc <_vfiprintf_r+0x78>
 8000dc0:	4629      	mov	r1, r5
 8000dc2:	4630      	mov	r0, r6
 8000dc4:	f7ff fc82 	bl	80006cc <__swsetup_r>
 8000dc8:	b1c0      	cbz	r0, 8000dfc <_vfiprintf_r+0x78>
 8000dca:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000dcc:	07dc      	lsls	r4, r3, #31
 8000dce:	d50e      	bpl.n	8000dee <_vfiprintf_r+0x6a>
 8000dd0:	f04f 30ff 	mov.w	r0, #4294967295
 8000dd4:	b01d      	add	sp, #116	; 0x74
 8000dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000dda:	4b7b      	ldr	r3, [pc, #492]	; (8000fc8 <_vfiprintf_r+0x244>)
 8000ddc:	429d      	cmp	r5, r3
 8000dde:	d101      	bne.n	8000de4 <_vfiprintf_r+0x60>
 8000de0:	68b5      	ldr	r5, [r6, #8]
 8000de2:	e7df      	b.n	8000da4 <_vfiprintf_r+0x20>
 8000de4:	4b79      	ldr	r3, [pc, #484]	; (8000fcc <_vfiprintf_r+0x248>)
 8000de6:	429d      	cmp	r5, r3
 8000de8:	bf08      	it	eq
 8000dea:	68f5      	ldreq	r5, [r6, #12]
 8000dec:	e7da      	b.n	8000da4 <_vfiprintf_r+0x20>
 8000dee:	89ab      	ldrh	r3, [r5, #12]
 8000df0:	0598      	lsls	r0, r3, #22
 8000df2:	d4ed      	bmi.n	8000dd0 <_vfiprintf_r+0x4c>
 8000df4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000df6:	f7ff fe90 	bl	8000b1a <__retarget_lock_release_recursive>
 8000dfa:	e7e9      	b.n	8000dd0 <_vfiprintf_r+0x4c>
 8000dfc:	2300      	movs	r3, #0
 8000dfe:	9309      	str	r3, [sp, #36]	; 0x24
 8000e00:	2320      	movs	r3, #32
 8000e02:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000e06:	f8cd 800c 	str.w	r8, [sp, #12]
 8000e0a:	2330      	movs	r3, #48	; 0x30
 8000e0c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000fd0 <_vfiprintf_r+0x24c>
 8000e10:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e14:	f04f 0901 	mov.w	r9, #1
 8000e18:	4623      	mov	r3, r4
 8000e1a:	469a      	mov	sl, r3
 8000e1c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000e20:	b10a      	cbz	r2, 8000e26 <_vfiprintf_r+0xa2>
 8000e22:	2a25      	cmp	r2, #37	; 0x25
 8000e24:	d1f9      	bne.n	8000e1a <_vfiprintf_r+0x96>
 8000e26:	ebba 0b04 	subs.w	fp, sl, r4
 8000e2a:	d00b      	beq.n	8000e44 <_vfiprintf_r+0xc0>
 8000e2c:	465b      	mov	r3, fp
 8000e2e:	4622      	mov	r2, r4
 8000e30:	4629      	mov	r1, r5
 8000e32:	4630      	mov	r0, r6
 8000e34:	f7ff ff93 	bl	8000d5e <__sfputs_r>
 8000e38:	3001      	adds	r0, #1
 8000e3a:	f000 80aa 	beq.w	8000f92 <_vfiprintf_r+0x20e>
 8000e3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000e40:	445a      	add	r2, fp
 8000e42:	9209      	str	r2, [sp, #36]	; 0x24
 8000e44:	f89a 3000 	ldrb.w	r3, [sl]
 8000e48:	2b00      	cmp	r3, #0
 8000e4a:	f000 80a2 	beq.w	8000f92 <_vfiprintf_r+0x20e>
 8000e4e:	2300      	movs	r3, #0
 8000e50:	f04f 32ff 	mov.w	r2, #4294967295
 8000e54:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000e58:	f10a 0a01 	add.w	sl, sl, #1
 8000e5c:	9304      	str	r3, [sp, #16]
 8000e5e:	9307      	str	r3, [sp, #28]
 8000e60:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000e64:	931a      	str	r3, [sp, #104]	; 0x68
 8000e66:	4654      	mov	r4, sl
 8000e68:	2205      	movs	r2, #5
 8000e6a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e6e:	4858      	ldr	r0, [pc, #352]	; (8000fd0 <_vfiprintf_r+0x24c>)
 8000e70:	f7ff f9be 	bl	80001f0 <memchr>
 8000e74:	9a04      	ldr	r2, [sp, #16]
 8000e76:	b9d8      	cbnz	r0, 8000eb0 <_vfiprintf_r+0x12c>
 8000e78:	06d1      	lsls	r1, r2, #27
 8000e7a:	bf44      	itt	mi
 8000e7c:	2320      	movmi	r3, #32
 8000e7e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000e82:	0713      	lsls	r3, r2, #28
 8000e84:	bf44      	itt	mi
 8000e86:	232b      	movmi	r3, #43	; 0x2b
 8000e88:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000e8c:	f89a 3000 	ldrb.w	r3, [sl]
 8000e90:	2b2a      	cmp	r3, #42	; 0x2a
 8000e92:	d015      	beq.n	8000ec0 <_vfiprintf_r+0x13c>
 8000e94:	9a07      	ldr	r2, [sp, #28]
 8000e96:	4654      	mov	r4, sl
 8000e98:	2000      	movs	r0, #0
 8000e9a:	f04f 0c0a 	mov.w	ip, #10
 8000e9e:	4621      	mov	r1, r4
 8000ea0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ea4:	3b30      	subs	r3, #48	; 0x30
 8000ea6:	2b09      	cmp	r3, #9
 8000ea8:	d94e      	bls.n	8000f48 <_vfiprintf_r+0x1c4>
 8000eaa:	b1b0      	cbz	r0, 8000eda <_vfiprintf_r+0x156>
 8000eac:	9207      	str	r2, [sp, #28]
 8000eae:	e014      	b.n	8000eda <_vfiprintf_r+0x156>
 8000eb0:	eba0 0308 	sub.w	r3, r0, r8
 8000eb4:	fa09 f303 	lsl.w	r3, r9, r3
 8000eb8:	4313      	orrs	r3, r2
 8000eba:	9304      	str	r3, [sp, #16]
 8000ebc:	46a2      	mov	sl, r4
 8000ebe:	e7d2      	b.n	8000e66 <_vfiprintf_r+0xe2>
 8000ec0:	9b03      	ldr	r3, [sp, #12]
 8000ec2:	1d19      	adds	r1, r3, #4
 8000ec4:	681b      	ldr	r3, [r3, #0]
 8000ec6:	9103      	str	r1, [sp, #12]
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	bfbb      	ittet	lt
 8000ecc:	425b      	neglt	r3, r3
 8000ece:	f042 0202 	orrlt.w	r2, r2, #2
 8000ed2:	9307      	strge	r3, [sp, #28]
 8000ed4:	9307      	strlt	r3, [sp, #28]
 8000ed6:	bfb8      	it	lt
 8000ed8:	9204      	strlt	r2, [sp, #16]
 8000eda:	7823      	ldrb	r3, [r4, #0]
 8000edc:	2b2e      	cmp	r3, #46	; 0x2e
 8000ede:	d10c      	bne.n	8000efa <_vfiprintf_r+0x176>
 8000ee0:	7863      	ldrb	r3, [r4, #1]
 8000ee2:	2b2a      	cmp	r3, #42	; 0x2a
 8000ee4:	d135      	bne.n	8000f52 <_vfiprintf_r+0x1ce>
 8000ee6:	9b03      	ldr	r3, [sp, #12]
 8000ee8:	1d1a      	adds	r2, r3, #4
 8000eea:	681b      	ldr	r3, [r3, #0]
 8000eec:	9203      	str	r2, [sp, #12]
 8000eee:	2b00      	cmp	r3, #0
 8000ef0:	bfb8      	it	lt
 8000ef2:	f04f 33ff 	movlt.w	r3, #4294967295
 8000ef6:	3402      	adds	r4, #2
 8000ef8:	9305      	str	r3, [sp, #20]
 8000efa:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000fe0 <_vfiprintf_r+0x25c>
 8000efe:	7821      	ldrb	r1, [r4, #0]
 8000f00:	2203      	movs	r2, #3
 8000f02:	4650      	mov	r0, sl
 8000f04:	f7ff f974 	bl	80001f0 <memchr>
 8000f08:	b140      	cbz	r0, 8000f1c <_vfiprintf_r+0x198>
 8000f0a:	2340      	movs	r3, #64	; 0x40
 8000f0c:	eba0 000a 	sub.w	r0, r0, sl
 8000f10:	fa03 f000 	lsl.w	r0, r3, r0
 8000f14:	9b04      	ldr	r3, [sp, #16]
 8000f16:	4303      	orrs	r3, r0
 8000f18:	3401      	adds	r4, #1
 8000f1a:	9304      	str	r3, [sp, #16]
 8000f1c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f20:	482c      	ldr	r0, [pc, #176]	; (8000fd4 <_vfiprintf_r+0x250>)
 8000f22:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000f26:	2206      	movs	r2, #6
 8000f28:	f7ff f962 	bl	80001f0 <memchr>
 8000f2c:	2800      	cmp	r0, #0
 8000f2e:	d03f      	beq.n	8000fb0 <_vfiprintf_r+0x22c>
 8000f30:	4b29      	ldr	r3, [pc, #164]	; (8000fd8 <_vfiprintf_r+0x254>)
 8000f32:	bb1b      	cbnz	r3, 8000f7c <_vfiprintf_r+0x1f8>
 8000f34:	9b03      	ldr	r3, [sp, #12]
 8000f36:	3307      	adds	r3, #7
 8000f38:	f023 0307 	bic.w	r3, r3, #7
 8000f3c:	3308      	adds	r3, #8
 8000f3e:	9303      	str	r3, [sp, #12]
 8000f40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000f42:	443b      	add	r3, r7
 8000f44:	9309      	str	r3, [sp, #36]	; 0x24
 8000f46:	e767      	b.n	8000e18 <_vfiprintf_r+0x94>
 8000f48:	fb0c 3202 	mla	r2, ip, r2, r3
 8000f4c:	460c      	mov	r4, r1
 8000f4e:	2001      	movs	r0, #1
 8000f50:	e7a5      	b.n	8000e9e <_vfiprintf_r+0x11a>
 8000f52:	2300      	movs	r3, #0
 8000f54:	3401      	adds	r4, #1
 8000f56:	9305      	str	r3, [sp, #20]
 8000f58:	4619      	mov	r1, r3
 8000f5a:	f04f 0c0a 	mov.w	ip, #10
 8000f5e:	4620      	mov	r0, r4
 8000f60:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000f64:	3a30      	subs	r2, #48	; 0x30
 8000f66:	2a09      	cmp	r2, #9
 8000f68:	d903      	bls.n	8000f72 <_vfiprintf_r+0x1ee>
 8000f6a:	2b00      	cmp	r3, #0
 8000f6c:	d0c5      	beq.n	8000efa <_vfiprintf_r+0x176>
 8000f6e:	9105      	str	r1, [sp, #20]
 8000f70:	e7c3      	b.n	8000efa <_vfiprintf_r+0x176>
 8000f72:	fb0c 2101 	mla	r1, ip, r1, r2
 8000f76:	4604      	mov	r4, r0
 8000f78:	2301      	movs	r3, #1
 8000f7a:	e7f0      	b.n	8000f5e <_vfiprintf_r+0x1da>
 8000f7c:	ab03      	add	r3, sp, #12
 8000f7e:	9300      	str	r3, [sp, #0]
 8000f80:	462a      	mov	r2, r5
 8000f82:	4b16      	ldr	r3, [pc, #88]	; (8000fdc <_vfiprintf_r+0x258>)
 8000f84:	a904      	add	r1, sp, #16
 8000f86:	4630      	mov	r0, r6
 8000f88:	f3af 8000 	nop.w
 8000f8c:	4607      	mov	r7, r0
 8000f8e:	1c78      	adds	r0, r7, #1
 8000f90:	d1d6      	bne.n	8000f40 <_vfiprintf_r+0x1bc>
 8000f92:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f94:	07d9      	lsls	r1, r3, #31
 8000f96:	d405      	bmi.n	8000fa4 <_vfiprintf_r+0x220>
 8000f98:	89ab      	ldrh	r3, [r5, #12]
 8000f9a:	059a      	lsls	r2, r3, #22
 8000f9c:	d402      	bmi.n	8000fa4 <_vfiprintf_r+0x220>
 8000f9e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000fa0:	f7ff fdbb 	bl	8000b1a <__retarget_lock_release_recursive>
 8000fa4:	89ab      	ldrh	r3, [r5, #12]
 8000fa6:	065b      	lsls	r3, r3, #25
 8000fa8:	f53f af12 	bmi.w	8000dd0 <_vfiprintf_r+0x4c>
 8000fac:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000fae:	e711      	b.n	8000dd4 <_vfiprintf_r+0x50>
 8000fb0:	ab03      	add	r3, sp, #12
 8000fb2:	9300      	str	r3, [sp, #0]
 8000fb4:	462a      	mov	r2, r5
 8000fb6:	4b09      	ldr	r3, [pc, #36]	; (8000fdc <_vfiprintf_r+0x258>)
 8000fb8:	a904      	add	r1, sp, #16
 8000fba:	4630      	mov	r0, r6
 8000fbc:	f000 f880 	bl	80010c0 <_printf_i>
 8000fc0:	e7e4      	b.n	8000f8c <_vfiprintf_r+0x208>
 8000fc2:	bf00      	nop
 8000fc4:	08001b88 	.word	0x08001b88
 8000fc8:	08001ba8 	.word	0x08001ba8
 8000fcc:	08001b68 	.word	0x08001b68
 8000fd0:	08001bc8 	.word	0x08001bc8
 8000fd4:	08001bd2 	.word	0x08001bd2
 8000fd8:	00000000 	.word	0x00000000
 8000fdc:	08000d5f 	.word	0x08000d5f
 8000fe0:	08001bce 	.word	0x08001bce

08000fe4 <_printf_common>:
 8000fe4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000fe8:	4616      	mov	r6, r2
 8000fea:	4699      	mov	r9, r3
 8000fec:	688a      	ldr	r2, [r1, #8]
 8000fee:	690b      	ldr	r3, [r1, #16]
 8000ff0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ff4:	4293      	cmp	r3, r2
 8000ff6:	bfb8      	it	lt
 8000ff8:	4613      	movlt	r3, r2
 8000ffa:	6033      	str	r3, [r6, #0]
 8000ffc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001000:	4607      	mov	r7, r0
 8001002:	460c      	mov	r4, r1
 8001004:	b10a      	cbz	r2, 800100a <_printf_common+0x26>
 8001006:	3301      	adds	r3, #1
 8001008:	6033      	str	r3, [r6, #0]
 800100a:	6823      	ldr	r3, [r4, #0]
 800100c:	0699      	lsls	r1, r3, #26
 800100e:	bf42      	ittt	mi
 8001010:	6833      	ldrmi	r3, [r6, #0]
 8001012:	3302      	addmi	r3, #2
 8001014:	6033      	strmi	r3, [r6, #0]
 8001016:	6825      	ldr	r5, [r4, #0]
 8001018:	f015 0506 	ands.w	r5, r5, #6
 800101c:	d106      	bne.n	800102c <_printf_common+0x48>
 800101e:	f104 0a19 	add.w	sl, r4, #25
 8001022:	68e3      	ldr	r3, [r4, #12]
 8001024:	6832      	ldr	r2, [r6, #0]
 8001026:	1a9b      	subs	r3, r3, r2
 8001028:	42ab      	cmp	r3, r5
 800102a:	dc26      	bgt.n	800107a <_printf_common+0x96>
 800102c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001030:	1e13      	subs	r3, r2, #0
 8001032:	6822      	ldr	r2, [r4, #0]
 8001034:	bf18      	it	ne
 8001036:	2301      	movne	r3, #1
 8001038:	0692      	lsls	r2, r2, #26
 800103a:	d42b      	bmi.n	8001094 <_printf_common+0xb0>
 800103c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001040:	4649      	mov	r1, r9
 8001042:	4638      	mov	r0, r7
 8001044:	47c0      	blx	r8
 8001046:	3001      	adds	r0, #1
 8001048:	d01e      	beq.n	8001088 <_printf_common+0xa4>
 800104a:	6823      	ldr	r3, [r4, #0]
 800104c:	68e5      	ldr	r5, [r4, #12]
 800104e:	6832      	ldr	r2, [r6, #0]
 8001050:	f003 0306 	and.w	r3, r3, #6
 8001054:	2b04      	cmp	r3, #4
 8001056:	bf08      	it	eq
 8001058:	1aad      	subeq	r5, r5, r2
 800105a:	68a3      	ldr	r3, [r4, #8]
 800105c:	6922      	ldr	r2, [r4, #16]
 800105e:	bf0c      	ite	eq
 8001060:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001064:	2500      	movne	r5, #0
 8001066:	4293      	cmp	r3, r2
 8001068:	bfc4      	itt	gt
 800106a:	1a9b      	subgt	r3, r3, r2
 800106c:	18ed      	addgt	r5, r5, r3
 800106e:	2600      	movs	r6, #0
 8001070:	341a      	adds	r4, #26
 8001072:	42b5      	cmp	r5, r6
 8001074:	d11a      	bne.n	80010ac <_printf_common+0xc8>
 8001076:	2000      	movs	r0, #0
 8001078:	e008      	b.n	800108c <_printf_common+0xa8>
 800107a:	2301      	movs	r3, #1
 800107c:	4652      	mov	r2, sl
 800107e:	4649      	mov	r1, r9
 8001080:	4638      	mov	r0, r7
 8001082:	47c0      	blx	r8
 8001084:	3001      	adds	r0, #1
 8001086:	d103      	bne.n	8001090 <_printf_common+0xac>
 8001088:	f04f 30ff 	mov.w	r0, #4294967295
 800108c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001090:	3501      	adds	r5, #1
 8001092:	e7c6      	b.n	8001022 <_printf_common+0x3e>
 8001094:	18e1      	adds	r1, r4, r3
 8001096:	1c5a      	adds	r2, r3, #1
 8001098:	2030      	movs	r0, #48	; 0x30
 800109a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800109e:	4422      	add	r2, r4
 80010a0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80010a4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80010a8:	3302      	adds	r3, #2
 80010aa:	e7c7      	b.n	800103c <_printf_common+0x58>
 80010ac:	2301      	movs	r3, #1
 80010ae:	4622      	mov	r2, r4
 80010b0:	4649      	mov	r1, r9
 80010b2:	4638      	mov	r0, r7
 80010b4:	47c0      	blx	r8
 80010b6:	3001      	adds	r0, #1
 80010b8:	d0e6      	beq.n	8001088 <_printf_common+0xa4>
 80010ba:	3601      	adds	r6, #1
 80010bc:	e7d9      	b.n	8001072 <_printf_common+0x8e>
	...

080010c0 <_printf_i>:
 80010c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80010c4:	460c      	mov	r4, r1
 80010c6:	4691      	mov	r9, r2
 80010c8:	7e27      	ldrb	r7, [r4, #24]
 80010ca:	990c      	ldr	r1, [sp, #48]	; 0x30
 80010cc:	2f78      	cmp	r7, #120	; 0x78
 80010ce:	4680      	mov	r8, r0
 80010d0:	469a      	mov	sl, r3
 80010d2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80010d6:	d807      	bhi.n	80010e8 <_printf_i+0x28>
 80010d8:	2f62      	cmp	r7, #98	; 0x62
 80010da:	d80a      	bhi.n	80010f2 <_printf_i+0x32>
 80010dc:	2f00      	cmp	r7, #0
 80010de:	f000 80d8 	beq.w	8001292 <_printf_i+0x1d2>
 80010e2:	2f58      	cmp	r7, #88	; 0x58
 80010e4:	f000 80a3 	beq.w	800122e <_printf_i+0x16e>
 80010e8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80010ec:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80010f0:	e03a      	b.n	8001168 <_printf_i+0xa8>
 80010f2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80010f6:	2b15      	cmp	r3, #21
 80010f8:	d8f6      	bhi.n	80010e8 <_printf_i+0x28>
 80010fa:	a001      	add	r0, pc, #4	; (adr r0, 8001100 <_printf_i+0x40>)
 80010fc:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8001100:	08001159 	.word	0x08001159
 8001104:	0800116d 	.word	0x0800116d
 8001108:	080010e9 	.word	0x080010e9
 800110c:	080010e9 	.word	0x080010e9
 8001110:	080010e9 	.word	0x080010e9
 8001114:	080010e9 	.word	0x080010e9
 8001118:	0800116d 	.word	0x0800116d
 800111c:	080010e9 	.word	0x080010e9
 8001120:	080010e9 	.word	0x080010e9
 8001124:	080010e9 	.word	0x080010e9
 8001128:	080010e9 	.word	0x080010e9
 800112c:	08001279 	.word	0x08001279
 8001130:	0800119d 	.word	0x0800119d
 8001134:	0800125b 	.word	0x0800125b
 8001138:	080010e9 	.word	0x080010e9
 800113c:	080010e9 	.word	0x080010e9
 8001140:	0800129b 	.word	0x0800129b
 8001144:	080010e9 	.word	0x080010e9
 8001148:	0800119d 	.word	0x0800119d
 800114c:	080010e9 	.word	0x080010e9
 8001150:	080010e9 	.word	0x080010e9
 8001154:	08001263 	.word	0x08001263
 8001158:	680b      	ldr	r3, [r1, #0]
 800115a:	1d1a      	adds	r2, r3, #4
 800115c:	681b      	ldr	r3, [r3, #0]
 800115e:	600a      	str	r2, [r1, #0]
 8001160:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8001164:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001168:	2301      	movs	r3, #1
 800116a:	e0a3      	b.n	80012b4 <_printf_i+0x1f4>
 800116c:	6825      	ldr	r5, [r4, #0]
 800116e:	6808      	ldr	r0, [r1, #0]
 8001170:	062e      	lsls	r6, r5, #24
 8001172:	f100 0304 	add.w	r3, r0, #4
 8001176:	d50a      	bpl.n	800118e <_printf_i+0xce>
 8001178:	6805      	ldr	r5, [r0, #0]
 800117a:	600b      	str	r3, [r1, #0]
 800117c:	2d00      	cmp	r5, #0
 800117e:	da03      	bge.n	8001188 <_printf_i+0xc8>
 8001180:	232d      	movs	r3, #45	; 0x2d
 8001182:	426d      	negs	r5, r5
 8001184:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001188:	485e      	ldr	r0, [pc, #376]	; (8001304 <_printf_i+0x244>)
 800118a:	230a      	movs	r3, #10
 800118c:	e019      	b.n	80011c2 <_printf_i+0x102>
 800118e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8001192:	6805      	ldr	r5, [r0, #0]
 8001194:	600b      	str	r3, [r1, #0]
 8001196:	bf18      	it	ne
 8001198:	b22d      	sxthne	r5, r5
 800119a:	e7ef      	b.n	800117c <_printf_i+0xbc>
 800119c:	680b      	ldr	r3, [r1, #0]
 800119e:	6825      	ldr	r5, [r4, #0]
 80011a0:	1d18      	adds	r0, r3, #4
 80011a2:	6008      	str	r0, [r1, #0]
 80011a4:	0628      	lsls	r0, r5, #24
 80011a6:	d501      	bpl.n	80011ac <_printf_i+0xec>
 80011a8:	681d      	ldr	r5, [r3, #0]
 80011aa:	e002      	b.n	80011b2 <_printf_i+0xf2>
 80011ac:	0669      	lsls	r1, r5, #25
 80011ae:	d5fb      	bpl.n	80011a8 <_printf_i+0xe8>
 80011b0:	881d      	ldrh	r5, [r3, #0]
 80011b2:	4854      	ldr	r0, [pc, #336]	; (8001304 <_printf_i+0x244>)
 80011b4:	2f6f      	cmp	r7, #111	; 0x6f
 80011b6:	bf0c      	ite	eq
 80011b8:	2308      	moveq	r3, #8
 80011ba:	230a      	movne	r3, #10
 80011bc:	2100      	movs	r1, #0
 80011be:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80011c2:	6866      	ldr	r6, [r4, #4]
 80011c4:	60a6      	str	r6, [r4, #8]
 80011c6:	2e00      	cmp	r6, #0
 80011c8:	bfa2      	ittt	ge
 80011ca:	6821      	ldrge	r1, [r4, #0]
 80011cc:	f021 0104 	bicge.w	r1, r1, #4
 80011d0:	6021      	strge	r1, [r4, #0]
 80011d2:	b90d      	cbnz	r5, 80011d8 <_printf_i+0x118>
 80011d4:	2e00      	cmp	r6, #0
 80011d6:	d04d      	beq.n	8001274 <_printf_i+0x1b4>
 80011d8:	4616      	mov	r6, r2
 80011da:	fbb5 f1f3 	udiv	r1, r5, r3
 80011de:	fb03 5711 	mls	r7, r3, r1, r5
 80011e2:	5dc7      	ldrb	r7, [r0, r7]
 80011e4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80011e8:	462f      	mov	r7, r5
 80011ea:	42bb      	cmp	r3, r7
 80011ec:	460d      	mov	r5, r1
 80011ee:	d9f4      	bls.n	80011da <_printf_i+0x11a>
 80011f0:	2b08      	cmp	r3, #8
 80011f2:	d10b      	bne.n	800120c <_printf_i+0x14c>
 80011f4:	6823      	ldr	r3, [r4, #0]
 80011f6:	07df      	lsls	r7, r3, #31
 80011f8:	d508      	bpl.n	800120c <_printf_i+0x14c>
 80011fa:	6923      	ldr	r3, [r4, #16]
 80011fc:	6861      	ldr	r1, [r4, #4]
 80011fe:	4299      	cmp	r1, r3
 8001200:	bfde      	ittt	le
 8001202:	2330      	movle	r3, #48	; 0x30
 8001204:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001208:	f106 36ff 	addle.w	r6, r6, #4294967295
 800120c:	1b92      	subs	r2, r2, r6
 800120e:	6122      	str	r2, [r4, #16]
 8001210:	f8cd a000 	str.w	sl, [sp]
 8001214:	464b      	mov	r3, r9
 8001216:	aa03      	add	r2, sp, #12
 8001218:	4621      	mov	r1, r4
 800121a:	4640      	mov	r0, r8
 800121c:	f7ff fee2 	bl	8000fe4 <_printf_common>
 8001220:	3001      	adds	r0, #1
 8001222:	d14c      	bne.n	80012be <_printf_i+0x1fe>
 8001224:	f04f 30ff 	mov.w	r0, #4294967295
 8001228:	b004      	add	sp, #16
 800122a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800122e:	4835      	ldr	r0, [pc, #212]	; (8001304 <_printf_i+0x244>)
 8001230:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001234:	6823      	ldr	r3, [r4, #0]
 8001236:	680e      	ldr	r6, [r1, #0]
 8001238:	061f      	lsls	r7, r3, #24
 800123a:	f856 5b04 	ldr.w	r5, [r6], #4
 800123e:	600e      	str	r6, [r1, #0]
 8001240:	d514      	bpl.n	800126c <_printf_i+0x1ac>
 8001242:	07d9      	lsls	r1, r3, #31
 8001244:	bf44      	itt	mi
 8001246:	f043 0320 	orrmi.w	r3, r3, #32
 800124a:	6023      	strmi	r3, [r4, #0]
 800124c:	b91d      	cbnz	r5, 8001256 <_printf_i+0x196>
 800124e:	6823      	ldr	r3, [r4, #0]
 8001250:	f023 0320 	bic.w	r3, r3, #32
 8001254:	6023      	str	r3, [r4, #0]
 8001256:	2310      	movs	r3, #16
 8001258:	e7b0      	b.n	80011bc <_printf_i+0xfc>
 800125a:	6823      	ldr	r3, [r4, #0]
 800125c:	f043 0320 	orr.w	r3, r3, #32
 8001260:	6023      	str	r3, [r4, #0]
 8001262:	2378      	movs	r3, #120	; 0x78
 8001264:	4828      	ldr	r0, [pc, #160]	; (8001308 <_printf_i+0x248>)
 8001266:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800126a:	e7e3      	b.n	8001234 <_printf_i+0x174>
 800126c:	065e      	lsls	r6, r3, #25
 800126e:	bf48      	it	mi
 8001270:	b2ad      	uxthmi	r5, r5
 8001272:	e7e6      	b.n	8001242 <_printf_i+0x182>
 8001274:	4616      	mov	r6, r2
 8001276:	e7bb      	b.n	80011f0 <_printf_i+0x130>
 8001278:	680b      	ldr	r3, [r1, #0]
 800127a:	6826      	ldr	r6, [r4, #0]
 800127c:	6960      	ldr	r0, [r4, #20]
 800127e:	1d1d      	adds	r5, r3, #4
 8001280:	600d      	str	r5, [r1, #0]
 8001282:	0635      	lsls	r5, r6, #24
 8001284:	681b      	ldr	r3, [r3, #0]
 8001286:	d501      	bpl.n	800128c <_printf_i+0x1cc>
 8001288:	6018      	str	r0, [r3, #0]
 800128a:	e002      	b.n	8001292 <_printf_i+0x1d2>
 800128c:	0671      	lsls	r1, r6, #25
 800128e:	d5fb      	bpl.n	8001288 <_printf_i+0x1c8>
 8001290:	8018      	strh	r0, [r3, #0]
 8001292:	2300      	movs	r3, #0
 8001294:	6123      	str	r3, [r4, #16]
 8001296:	4616      	mov	r6, r2
 8001298:	e7ba      	b.n	8001210 <_printf_i+0x150>
 800129a:	680b      	ldr	r3, [r1, #0]
 800129c:	1d1a      	adds	r2, r3, #4
 800129e:	600a      	str	r2, [r1, #0]
 80012a0:	681e      	ldr	r6, [r3, #0]
 80012a2:	6862      	ldr	r2, [r4, #4]
 80012a4:	2100      	movs	r1, #0
 80012a6:	4630      	mov	r0, r6
 80012a8:	f7fe ffa2 	bl	80001f0 <memchr>
 80012ac:	b108      	cbz	r0, 80012b2 <_printf_i+0x1f2>
 80012ae:	1b80      	subs	r0, r0, r6
 80012b0:	6060      	str	r0, [r4, #4]
 80012b2:	6863      	ldr	r3, [r4, #4]
 80012b4:	6123      	str	r3, [r4, #16]
 80012b6:	2300      	movs	r3, #0
 80012b8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012bc:	e7a8      	b.n	8001210 <_printf_i+0x150>
 80012be:	6923      	ldr	r3, [r4, #16]
 80012c0:	4632      	mov	r2, r6
 80012c2:	4649      	mov	r1, r9
 80012c4:	4640      	mov	r0, r8
 80012c6:	47d0      	blx	sl
 80012c8:	3001      	adds	r0, #1
 80012ca:	d0ab      	beq.n	8001224 <_printf_i+0x164>
 80012cc:	6823      	ldr	r3, [r4, #0]
 80012ce:	079b      	lsls	r3, r3, #30
 80012d0:	d413      	bmi.n	80012fa <_printf_i+0x23a>
 80012d2:	68e0      	ldr	r0, [r4, #12]
 80012d4:	9b03      	ldr	r3, [sp, #12]
 80012d6:	4298      	cmp	r0, r3
 80012d8:	bfb8      	it	lt
 80012da:	4618      	movlt	r0, r3
 80012dc:	e7a4      	b.n	8001228 <_printf_i+0x168>
 80012de:	2301      	movs	r3, #1
 80012e0:	4632      	mov	r2, r6
 80012e2:	4649      	mov	r1, r9
 80012e4:	4640      	mov	r0, r8
 80012e6:	47d0      	blx	sl
 80012e8:	3001      	adds	r0, #1
 80012ea:	d09b      	beq.n	8001224 <_printf_i+0x164>
 80012ec:	3501      	adds	r5, #1
 80012ee:	68e3      	ldr	r3, [r4, #12]
 80012f0:	9903      	ldr	r1, [sp, #12]
 80012f2:	1a5b      	subs	r3, r3, r1
 80012f4:	42ab      	cmp	r3, r5
 80012f6:	dcf2      	bgt.n	80012de <_printf_i+0x21e>
 80012f8:	e7eb      	b.n	80012d2 <_printf_i+0x212>
 80012fa:	2500      	movs	r5, #0
 80012fc:	f104 0619 	add.w	r6, r4, #25
 8001300:	e7f5      	b.n	80012ee <_printf_i+0x22e>
 8001302:	bf00      	nop
 8001304:	08001bd9 	.word	0x08001bd9
 8001308:	08001bea 	.word	0x08001bea

0800130c <_sbrk_r>:
 800130c:	b538      	push	{r3, r4, r5, lr}
 800130e:	4d06      	ldr	r5, [pc, #24]	; (8001328 <_sbrk_r+0x1c>)
 8001310:	2300      	movs	r3, #0
 8001312:	4604      	mov	r4, r0
 8001314:	4608      	mov	r0, r1
 8001316:	602b      	str	r3, [r5, #0]
 8001318:	f7ff f866 	bl	80003e8 <_sbrk>
 800131c:	1c43      	adds	r3, r0, #1
 800131e:	d102      	bne.n	8001326 <_sbrk_r+0x1a>
 8001320:	682b      	ldr	r3, [r5, #0]
 8001322:	b103      	cbz	r3, 8001326 <_sbrk_r+0x1a>
 8001324:	6023      	str	r3, [r4, #0]
 8001326:	bd38      	pop	{r3, r4, r5, pc}
 8001328:	2000014c 	.word	0x2000014c

0800132c <__sread>:
 800132c:	b510      	push	{r4, lr}
 800132e:	460c      	mov	r4, r1
 8001330:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001334:	f000 f8a0 	bl	8001478 <_read_r>
 8001338:	2800      	cmp	r0, #0
 800133a:	bfab      	itete	ge
 800133c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800133e:	89a3      	ldrhlt	r3, [r4, #12]
 8001340:	181b      	addge	r3, r3, r0
 8001342:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001346:	bfac      	ite	ge
 8001348:	6563      	strge	r3, [r4, #84]	; 0x54
 800134a:	81a3      	strhlt	r3, [r4, #12]
 800134c:	bd10      	pop	{r4, pc}

0800134e <__swrite>:
 800134e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001352:	461f      	mov	r7, r3
 8001354:	898b      	ldrh	r3, [r1, #12]
 8001356:	05db      	lsls	r3, r3, #23
 8001358:	4605      	mov	r5, r0
 800135a:	460c      	mov	r4, r1
 800135c:	4616      	mov	r6, r2
 800135e:	d505      	bpl.n	800136c <__swrite+0x1e>
 8001360:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001364:	2302      	movs	r3, #2
 8001366:	2200      	movs	r2, #0
 8001368:	f000 f868 	bl	800143c <_lseek_r>
 800136c:	89a3      	ldrh	r3, [r4, #12]
 800136e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001372:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001376:	81a3      	strh	r3, [r4, #12]
 8001378:	4632      	mov	r2, r6
 800137a:	463b      	mov	r3, r7
 800137c:	4628      	mov	r0, r5
 800137e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001382:	f000 b817 	b.w	80013b4 <_write_r>

08001386 <__sseek>:
 8001386:	b510      	push	{r4, lr}
 8001388:	460c      	mov	r4, r1
 800138a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800138e:	f000 f855 	bl	800143c <_lseek_r>
 8001392:	1c43      	adds	r3, r0, #1
 8001394:	89a3      	ldrh	r3, [r4, #12]
 8001396:	bf15      	itete	ne
 8001398:	6560      	strne	r0, [r4, #84]	; 0x54
 800139a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800139e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80013a2:	81a3      	strheq	r3, [r4, #12]
 80013a4:	bf18      	it	ne
 80013a6:	81a3      	strhne	r3, [r4, #12]
 80013a8:	bd10      	pop	{r4, pc}

080013aa <__sclose>:
 80013aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013ae:	f000 b813 	b.w	80013d8 <_close_r>
	...

080013b4 <_write_r>:
 80013b4:	b538      	push	{r3, r4, r5, lr}
 80013b6:	4d07      	ldr	r5, [pc, #28]	; (80013d4 <_write_r+0x20>)
 80013b8:	4604      	mov	r4, r0
 80013ba:	4608      	mov	r0, r1
 80013bc:	4611      	mov	r1, r2
 80013be:	2200      	movs	r2, #0
 80013c0:	602a      	str	r2, [r5, #0]
 80013c2:	461a      	mov	r2, r3
 80013c4:	f000 f91a 	bl	80015fc <_write>
 80013c8:	1c43      	adds	r3, r0, #1
 80013ca:	d102      	bne.n	80013d2 <_write_r+0x1e>
 80013cc:	682b      	ldr	r3, [r5, #0]
 80013ce:	b103      	cbz	r3, 80013d2 <_write_r+0x1e>
 80013d0:	6023      	str	r3, [r4, #0]
 80013d2:	bd38      	pop	{r3, r4, r5, pc}
 80013d4:	2000014c 	.word	0x2000014c

080013d8 <_close_r>:
 80013d8:	b538      	push	{r3, r4, r5, lr}
 80013da:	4d06      	ldr	r5, [pc, #24]	; (80013f4 <_close_r+0x1c>)
 80013dc:	2300      	movs	r3, #0
 80013de:	4604      	mov	r4, r0
 80013e0:	4608      	mov	r0, r1
 80013e2:	602b      	str	r3, [r5, #0]
 80013e4:	f000 f938 	bl	8001658 <_close>
 80013e8:	1c43      	adds	r3, r0, #1
 80013ea:	d102      	bne.n	80013f2 <_close_r+0x1a>
 80013ec:	682b      	ldr	r3, [r5, #0]
 80013ee:	b103      	cbz	r3, 80013f2 <_close_r+0x1a>
 80013f0:	6023      	str	r3, [r4, #0]
 80013f2:	bd38      	pop	{r3, r4, r5, pc}
 80013f4:	2000014c 	.word	0x2000014c

080013f8 <_fstat_r>:
 80013f8:	b538      	push	{r3, r4, r5, lr}
 80013fa:	4d07      	ldr	r5, [pc, #28]	; (8001418 <_fstat_r+0x20>)
 80013fc:	2300      	movs	r3, #0
 80013fe:	4604      	mov	r4, r0
 8001400:	4608      	mov	r0, r1
 8001402:	4611      	mov	r1, r2
 8001404:	602b      	str	r3, [r5, #0]
 8001406:	f000 f96e 	bl	80016e6 <_fstat>
 800140a:	1c43      	adds	r3, r0, #1
 800140c:	d102      	bne.n	8001414 <_fstat_r+0x1c>
 800140e:	682b      	ldr	r3, [r5, #0]
 8001410:	b103      	cbz	r3, 8001414 <_fstat_r+0x1c>
 8001412:	6023      	str	r3, [r4, #0]
 8001414:	bd38      	pop	{r3, r4, r5, pc}
 8001416:	bf00      	nop
 8001418:	2000014c 	.word	0x2000014c

0800141c <_isatty_r>:
 800141c:	b538      	push	{r3, r4, r5, lr}
 800141e:	4d06      	ldr	r5, [pc, #24]	; (8001438 <_isatty_r+0x1c>)
 8001420:	2300      	movs	r3, #0
 8001422:	4604      	mov	r4, r0
 8001424:	4608      	mov	r0, r1
 8001426:	602b      	str	r3, [r5, #0]
 8001428:	f000 fac2 	bl	80019b0 <_isatty>
 800142c:	1c43      	adds	r3, r0, #1
 800142e:	d102      	bne.n	8001436 <_isatty_r+0x1a>
 8001430:	682b      	ldr	r3, [r5, #0]
 8001432:	b103      	cbz	r3, 8001436 <_isatty_r+0x1a>
 8001434:	6023      	str	r3, [r4, #0]
 8001436:	bd38      	pop	{r3, r4, r5, pc}
 8001438:	2000014c 	.word	0x2000014c

0800143c <_lseek_r>:
 800143c:	b538      	push	{r3, r4, r5, lr}
 800143e:	4d07      	ldr	r5, [pc, #28]	; (800145c <_lseek_r+0x20>)
 8001440:	4604      	mov	r4, r0
 8001442:	4608      	mov	r0, r1
 8001444:	4611      	mov	r1, r2
 8001446:	2200      	movs	r2, #0
 8001448:	602a      	str	r2, [r5, #0]
 800144a:	461a      	mov	r2, r3
 800144c:	f000 f8c4 	bl	80015d8 <_lseek>
 8001450:	1c43      	adds	r3, r0, #1
 8001452:	d102      	bne.n	800145a <_lseek_r+0x1e>
 8001454:	682b      	ldr	r3, [r5, #0]
 8001456:	b103      	cbz	r3, 800145a <_lseek_r+0x1e>
 8001458:	6023      	str	r3, [r4, #0]
 800145a:	bd38      	pop	{r3, r4, r5, pc}
 800145c:	2000014c 	.word	0x2000014c

08001460 <__malloc_lock>:
 8001460:	4801      	ldr	r0, [pc, #4]	; (8001468 <__malloc_lock+0x8>)
 8001462:	f7ff bb59 	b.w	8000b18 <__retarget_lock_acquire_recursive>
 8001466:	bf00      	nop
 8001468:	20000144 	.word	0x20000144

0800146c <__malloc_unlock>:
 800146c:	4801      	ldr	r0, [pc, #4]	; (8001474 <__malloc_unlock+0x8>)
 800146e:	f7ff bb54 	b.w	8000b1a <__retarget_lock_release_recursive>
 8001472:	bf00      	nop
 8001474:	20000144 	.word	0x20000144

08001478 <_read_r>:
 8001478:	b538      	push	{r3, r4, r5, lr}
 800147a:	4d07      	ldr	r5, [pc, #28]	; (8001498 <_read_r+0x20>)
 800147c:	4604      	mov	r4, r0
 800147e:	4608      	mov	r0, r1
 8001480:	4611      	mov	r1, r2
 8001482:	2200      	movs	r2, #0
 8001484:	602a      	str	r2, [r5, #0]
 8001486:	461a      	mov	r2, r3
 8001488:	f000 f850 	bl	800152c <_read>
 800148c:	1c43      	adds	r3, r0, #1
 800148e:	d102      	bne.n	8001496 <_read_r+0x1e>
 8001490:	682b      	ldr	r3, [r5, #0]
 8001492:	b103      	cbz	r3, 8001496 <_read_r+0x1e>
 8001494:	6023      	str	r3, [r4, #0]
 8001496:	bd38      	pop	{r3, r4, r5, pc}
 8001498:	2000014c 	.word	0x2000014c

0800149c <findslot>:
 800149c:	4b0a      	ldr	r3, [pc, #40]	; (80014c8 <findslot+0x2c>)
 800149e:	b510      	push	{r4, lr}
 80014a0:	4604      	mov	r4, r0
 80014a2:	6818      	ldr	r0, [r3, #0]
 80014a4:	b118      	cbz	r0, 80014ae <findslot+0x12>
 80014a6:	6983      	ldr	r3, [r0, #24]
 80014a8:	b90b      	cbnz	r3, 80014ae <findslot+0x12>
 80014aa:	f7ff fa97 	bl	80009dc <__sinit>
 80014ae:	2c13      	cmp	r4, #19
 80014b0:	d807      	bhi.n	80014c2 <findslot+0x26>
 80014b2:	4806      	ldr	r0, [pc, #24]	; (80014cc <findslot+0x30>)
 80014b4:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 80014b8:	3201      	adds	r2, #1
 80014ba:	d002      	beq.n	80014c2 <findslot+0x26>
 80014bc:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 80014c0:	bd10      	pop	{r4, pc}
 80014c2:	2000      	movs	r0, #0
 80014c4:	e7fc      	b.n	80014c0 <findslot+0x24>
 80014c6:	bf00      	nop
 80014c8:	20000000 	.word	0x20000000
 80014cc:	200000a0 	.word	0x200000a0

080014d0 <checkerror>:
 80014d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014d2:	1c43      	adds	r3, r0, #1
 80014d4:	4604      	mov	r4, r0
 80014d6:	d109      	bne.n	80014ec <checkerror+0x1c>
 80014d8:	f7fe ffe6 	bl	80004a8 <__errno>
 80014dc:	2613      	movs	r6, #19
 80014de:	4605      	mov	r5, r0
 80014e0:	2700      	movs	r7, #0
 80014e2:	4630      	mov	r0, r6
 80014e4:	4639      	mov	r1, r7
 80014e6:	beab      	bkpt	0x00ab
 80014e8:	4606      	mov	r6, r0
 80014ea:	602e      	str	r6, [r5, #0]
 80014ec:	4620      	mov	r0, r4
 80014ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080014f0 <error>:
 80014f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014f2:	4604      	mov	r4, r0
 80014f4:	f7fe ffd8 	bl	80004a8 <__errno>
 80014f8:	2613      	movs	r6, #19
 80014fa:	4605      	mov	r5, r0
 80014fc:	2700      	movs	r7, #0
 80014fe:	4630      	mov	r0, r6
 8001500:	4639      	mov	r1, r7
 8001502:	beab      	bkpt	0x00ab
 8001504:	4606      	mov	r6, r0
 8001506:	602e      	str	r6, [r5, #0]
 8001508:	4620      	mov	r0, r4
 800150a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800150c <_swiread>:
 800150c:	b530      	push	{r4, r5, lr}
 800150e:	b085      	sub	sp, #20
 8001510:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001514:	9203      	str	r2, [sp, #12]
 8001516:	2406      	movs	r4, #6
 8001518:	ad01      	add	r5, sp, #4
 800151a:	4620      	mov	r0, r4
 800151c:	4629      	mov	r1, r5
 800151e:	beab      	bkpt	0x00ab
 8001520:	4604      	mov	r4, r0
 8001522:	4620      	mov	r0, r4
 8001524:	f7ff ffd4 	bl	80014d0 <checkerror>
 8001528:	b005      	add	sp, #20
 800152a:	bd30      	pop	{r4, r5, pc}

0800152c <_read>:
 800152c:	b570      	push	{r4, r5, r6, lr}
 800152e:	460e      	mov	r6, r1
 8001530:	4615      	mov	r5, r2
 8001532:	f7ff ffb3 	bl	800149c <findslot>
 8001536:	4604      	mov	r4, r0
 8001538:	b930      	cbnz	r0, 8001548 <_read+0x1c>
 800153a:	f7fe ffb5 	bl	80004a8 <__errno>
 800153e:	2309      	movs	r3, #9
 8001540:	6003      	str	r3, [r0, #0]
 8001542:	f04f 30ff 	mov.w	r0, #4294967295
 8001546:	bd70      	pop	{r4, r5, r6, pc}
 8001548:	6800      	ldr	r0, [r0, #0]
 800154a:	462a      	mov	r2, r5
 800154c:	4631      	mov	r1, r6
 800154e:	f7ff ffdd 	bl	800150c <_swiread>
 8001552:	1c43      	adds	r3, r0, #1
 8001554:	bf1f      	itttt	ne
 8001556:	6863      	ldrne	r3, [r4, #4]
 8001558:	1a28      	subne	r0, r5, r0
 800155a:	181b      	addne	r3, r3, r0
 800155c:	6063      	strne	r3, [r4, #4]
 800155e:	e7f2      	b.n	8001546 <_read+0x1a>

08001560 <_swilseek>:
 8001560:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001562:	460c      	mov	r4, r1
 8001564:	4616      	mov	r6, r2
 8001566:	f7ff ff99 	bl	800149c <findslot>
 800156a:	4605      	mov	r5, r0
 800156c:	b940      	cbnz	r0, 8001580 <_swilseek+0x20>
 800156e:	f7fe ff9b 	bl	80004a8 <__errno>
 8001572:	2309      	movs	r3, #9
 8001574:	6003      	str	r3, [r0, #0]
 8001576:	f04f 34ff 	mov.w	r4, #4294967295
 800157a:	4620      	mov	r0, r4
 800157c:	b003      	add	sp, #12
 800157e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001580:	2e02      	cmp	r6, #2
 8001582:	d903      	bls.n	800158c <_swilseek+0x2c>
 8001584:	f7fe ff90 	bl	80004a8 <__errno>
 8001588:	2316      	movs	r3, #22
 800158a:	e7f3      	b.n	8001574 <_swilseek+0x14>
 800158c:	2e01      	cmp	r6, #1
 800158e:	d112      	bne.n	80015b6 <_swilseek+0x56>
 8001590:	6843      	ldr	r3, [r0, #4]
 8001592:	18e4      	adds	r4, r4, r3
 8001594:	d4f6      	bmi.n	8001584 <_swilseek+0x24>
 8001596:	682b      	ldr	r3, [r5, #0]
 8001598:	260a      	movs	r6, #10
 800159a:	e9cd 3400 	strd	r3, r4, [sp]
 800159e:	466f      	mov	r7, sp
 80015a0:	4630      	mov	r0, r6
 80015a2:	4639      	mov	r1, r7
 80015a4:	beab      	bkpt	0x00ab
 80015a6:	4606      	mov	r6, r0
 80015a8:	4630      	mov	r0, r6
 80015aa:	f7ff ff91 	bl	80014d0 <checkerror>
 80015ae:	2800      	cmp	r0, #0
 80015b0:	dbe1      	blt.n	8001576 <_swilseek+0x16>
 80015b2:	606c      	str	r4, [r5, #4]
 80015b4:	e7e1      	b.n	800157a <_swilseek+0x1a>
 80015b6:	2e02      	cmp	r6, #2
 80015b8:	d1ed      	bne.n	8001596 <_swilseek+0x36>
 80015ba:	6803      	ldr	r3, [r0, #0]
 80015bc:	9300      	str	r3, [sp, #0]
 80015be:	260c      	movs	r6, #12
 80015c0:	466f      	mov	r7, sp
 80015c2:	4630      	mov	r0, r6
 80015c4:	4639      	mov	r1, r7
 80015c6:	beab      	bkpt	0x00ab
 80015c8:	4606      	mov	r6, r0
 80015ca:	4630      	mov	r0, r6
 80015cc:	f7ff ff80 	bl	80014d0 <checkerror>
 80015d0:	1c43      	adds	r3, r0, #1
 80015d2:	d0d0      	beq.n	8001576 <_swilseek+0x16>
 80015d4:	4404      	add	r4, r0
 80015d6:	e7de      	b.n	8001596 <_swilseek+0x36>

080015d8 <_lseek>:
 80015d8:	f7ff bfc2 	b.w	8001560 <_swilseek>

080015dc <_swiwrite>:
 80015dc:	b530      	push	{r4, r5, lr}
 80015de:	b085      	sub	sp, #20
 80015e0:	e9cd 0101 	strd	r0, r1, [sp, #4]
 80015e4:	9203      	str	r2, [sp, #12]
 80015e6:	2405      	movs	r4, #5
 80015e8:	ad01      	add	r5, sp, #4
 80015ea:	4620      	mov	r0, r4
 80015ec:	4629      	mov	r1, r5
 80015ee:	beab      	bkpt	0x00ab
 80015f0:	4604      	mov	r4, r0
 80015f2:	4620      	mov	r0, r4
 80015f4:	f7ff ff6c 	bl	80014d0 <checkerror>
 80015f8:	b005      	add	sp, #20
 80015fa:	bd30      	pop	{r4, r5, pc}

080015fc <_write>:
 80015fc:	b570      	push	{r4, r5, r6, lr}
 80015fe:	460e      	mov	r6, r1
 8001600:	4615      	mov	r5, r2
 8001602:	f7ff ff4b 	bl	800149c <findslot>
 8001606:	4604      	mov	r4, r0
 8001608:	b930      	cbnz	r0, 8001618 <_write+0x1c>
 800160a:	f7fe ff4d 	bl	80004a8 <__errno>
 800160e:	2309      	movs	r3, #9
 8001610:	6003      	str	r3, [r0, #0]
 8001612:	f04f 30ff 	mov.w	r0, #4294967295
 8001616:	bd70      	pop	{r4, r5, r6, pc}
 8001618:	6800      	ldr	r0, [r0, #0]
 800161a:	462a      	mov	r2, r5
 800161c:	4631      	mov	r1, r6
 800161e:	f7ff ffdd 	bl	80015dc <_swiwrite>
 8001622:	1e03      	subs	r3, r0, #0
 8001624:	dbf5      	blt.n	8001612 <_write+0x16>
 8001626:	6862      	ldr	r2, [r4, #4]
 8001628:	1ae8      	subs	r0, r5, r3
 800162a:	4402      	add	r2, r0
 800162c:	42ab      	cmp	r3, r5
 800162e:	6062      	str	r2, [r4, #4]
 8001630:	d1f1      	bne.n	8001616 <_write+0x1a>
 8001632:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001636:	2000      	movs	r0, #0
 8001638:	f7ff bf5a 	b.w	80014f0 <error>

0800163c <_swiclose>:
 800163c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800163e:	2402      	movs	r4, #2
 8001640:	9001      	str	r0, [sp, #4]
 8001642:	ad01      	add	r5, sp, #4
 8001644:	4620      	mov	r0, r4
 8001646:	4629      	mov	r1, r5
 8001648:	beab      	bkpt	0x00ab
 800164a:	4604      	mov	r4, r0
 800164c:	4620      	mov	r0, r4
 800164e:	f7ff ff3f 	bl	80014d0 <checkerror>
 8001652:	b003      	add	sp, #12
 8001654:	bd30      	pop	{r4, r5, pc}
	...

08001658 <_close>:
 8001658:	b538      	push	{r3, r4, r5, lr}
 800165a:	4605      	mov	r5, r0
 800165c:	f7ff ff1e 	bl	800149c <findslot>
 8001660:	4604      	mov	r4, r0
 8001662:	b930      	cbnz	r0, 8001672 <_close+0x1a>
 8001664:	f7fe ff20 	bl	80004a8 <__errno>
 8001668:	2309      	movs	r3, #9
 800166a:	6003      	str	r3, [r0, #0]
 800166c:	f04f 30ff 	mov.w	r0, #4294967295
 8001670:	bd38      	pop	{r3, r4, r5, pc}
 8001672:	3d01      	subs	r5, #1
 8001674:	2d01      	cmp	r5, #1
 8001676:	d809      	bhi.n	800168c <_close+0x34>
 8001678:	4b09      	ldr	r3, [pc, #36]	; (80016a0 <_close+0x48>)
 800167a:	689a      	ldr	r2, [r3, #8]
 800167c:	691b      	ldr	r3, [r3, #16]
 800167e:	429a      	cmp	r2, r3
 8001680:	d104      	bne.n	800168c <_close+0x34>
 8001682:	f04f 33ff 	mov.w	r3, #4294967295
 8001686:	6003      	str	r3, [r0, #0]
 8001688:	2000      	movs	r0, #0
 800168a:	e7f1      	b.n	8001670 <_close+0x18>
 800168c:	6820      	ldr	r0, [r4, #0]
 800168e:	f7ff ffd5 	bl	800163c <_swiclose>
 8001692:	2800      	cmp	r0, #0
 8001694:	d1ec      	bne.n	8001670 <_close+0x18>
 8001696:	f04f 33ff 	mov.w	r3, #4294967295
 800169a:	6023      	str	r3, [r4, #0]
 800169c:	e7e8      	b.n	8001670 <_close+0x18>
 800169e:	bf00      	nop
 80016a0:	200000a0 	.word	0x200000a0

080016a4 <_swistat>:
 80016a4:	b570      	push	{r4, r5, r6, lr}
 80016a6:	460c      	mov	r4, r1
 80016a8:	f7ff fef8 	bl	800149c <findslot>
 80016ac:	4605      	mov	r5, r0
 80016ae:	b930      	cbnz	r0, 80016be <_swistat+0x1a>
 80016b0:	f7fe fefa 	bl	80004a8 <__errno>
 80016b4:	2309      	movs	r3, #9
 80016b6:	6003      	str	r3, [r0, #0]
 80016b8:	f04f 30ff 	mov.w	r0, #4294967295
 80016bc:	bd70      	pop	{r4, r5, r6, pc}
 80016be:	6863      	ldr	r3, [r4, #4]
 80016c0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80016c4:	6063      	str	r3, [r4, #4]
 80016c6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80016ca:	64a3      	str	r3, [r4, #72]	; 0x48
 80016cc:	260c      	movs	r6, #12
 80016ce:	4630      	mov	r0, r6
 80016d0:	4629      	mov	r1, r5
 80016d2:	beab      	bkpt	0x00ab
 80016d4:	4605      	mov	r5, r0
 80016d6:	4628      	mov	r0, r5
 80016d8:	f7ff fefa 	bl	80014d0 <checkerror>
 80016dc:	1c43      	adds	r3, r0, #1
 80016de:	bf1c      	itt	ne
 80016e0:	6120      	strne	r0, [r4, #16]
 80016e2:	2000      	movne	r0, #0
 80016e4:	e7ea      	b.n	80016bc <_swistat+0x18>

080016e6 <_fstat>:
 80016e6:	460b      	mov	r3, r1
 80016e8:	b510      	push	{r4, lr}
 80016ea:	2100      	movs	r1, #0
 80016ec:	4604      	mov	r4, r0
 80016ee:	2258      	movs	r2, #88	; 0x58
 80016f0:	4618      	mov	r0, r3
 80016f2:	f7fe ff03 	bl	80004fc <memset>
 80016f6:	4601      	mov	r1, r0
 80016f8:	4620      	mov	r0, r4
 80016fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80016fe:	f7ff bfd1 	b.w	80016a4 <_swistat>

08001702 <_stat>:
 8001702:	b538      	push	{r3, r4, r5, lr}
 8001704:	460d      	mov	r5, r1
 8001706:	4604      	mov	r4, r0
 8001708:	2258      	movs	r2, #88	; 0x58
 800170a:	2100      	movs	r1, #0
 800170c:	4628      	mov	r0, r5
 800170e:	f7fe fef5 	bl	80004fc <memset>
 8001712:	4620      	mov	r0, r4
 8001714:	2100      	movs	r1, #0
 8001716:	f000 f811 	bl	800173c <_swiopen>
 800171a:	1c43      	adds	r3, r0, #1
 800171c:	4604      	mov	r4, r0
 800171e:	d00b      	beq.n	8001738 <_stat+0x36>
 8001720:	686b      	ldr	r3, [r5, #4]
 8001722:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8001726:	606b      	str	r3, [r5, #4]
 8001728:	4629      	mov	r1, r5
 800172a:	f7ff ffbb 	bl	80016a4 <_swistat>
 800172e:	4605      	mov	r5, r0
 8001730:	4620      	mov	r0, r4
 8001732:	f7ff ff91 	bl	8001658 <_close>
 8001736:	462c      	mov	r4, r5
 8001738:	4620      	mov	r0, r4
 800173a:	bd38      	pop	{r3, r4, r5, pc}

0800173c <_swiopen>:
 800173c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001740:	4b2a      	ldr	r3, [pc, #168]	; (80017ec <_swiopen+0xb0>)
 8001742:	b097      	sub	sp, #92	; 0x5c
 8001744:	4681      	mov	r9, r0
 8001746:	460f      	mov	r7, r1
 8001748:	2500      	movs	r5, #0
 800174a:	461e      	mov	r6, r3
 800174c:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 8001750:	1c61      	adds	r1, r4, #1
 8001752:	d037      	beq.n	80017c4 <_swiopen+0x88>
 8001754:	3501      	adds	r5, #1
 8001756:	2d14      	cmp	r5, #20
 8001758:	d1f8      	bne.n	800174c <_swiopen+0x10>
 800175a:	f7fe fea5 	bl	80004a8 <__errno>
 800175e:	2318      	movs	r3, #24
 8001760:	6003      	str	r3, [r0, #0]
 8001762:	f04f 34ff 	mov.w	r4, #4294967295
 8001766:	e03d      	b.n	80017e4 <_swiopen+0xa8>
 8001768:	f3c7 4400 	ubfx	r4, r7, #16, #1
 800176c:	f240 6301 	movw	r3, #1537	; 0x601
 8001770:	07ba      	lsls	r2, r7, #30
 8001772:	bf48      	it	mi
 8001774:	f044 0402 	orrmi.w	r4, r4, #2
 8001778:	421f      	tst	r7, r3
 800177a:	bf18      	it	ne
 800177c:	f044 0404 	orrne.w	r4, r4, #4
 8001780:	073b      	lsls	r3, r7, #28
 8001782:	bf48      	it	mi
 8001784:	f024 0404 	bicmi.w	r4, r4, #4
 8001788:	4648      	mov	r0, r9
 800178a:	bf48      	it	mi
 800178c:	f044 0408 	orrmi.w	r4, r4, #8
 8001790:	f8cd 9000 	str.w	r9, [sp]
 8001794:	f7fe fd7c 	bl	8000290 <strlen>
 8001798:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800179c:	2401      	movs	r4, #1
 800179e:	4620      	mov	r0, r4
 80017a0:	4641      	mov	r1, r8
 80017a2:	beab      	bkpt	0x00ab
 80017a4:	4604      	mov	r4, r0
 80017a6:	2c00      	cmp	r4, #0
 80017a8:	db07      	blt.n	80017ba <_swiopen+0x7e>
 80017aa:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 80017ae:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 80017b2:	2300      	movs	r3, #0
 80017b4:	6073      	str	r3, [r6, #4]
 80017b6:	462c      	mov	r4, r5
 80017b8:	e014      	b.n	80017e4 <_swiopen+0xa8>
 80017ba:	4620      	mov	r0, r4
 80017bc:	f7ff fe98 	bl	80014f0 <error>
 80017c0:	4604      	mov	r4, r0
 80017c2:	e00f      	b.n	80017e4 <_swiopen+0xa8>
 80017c4:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 80017c8:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 80017cc:	46e8      	mov	r8, sp
 80017ce:	d1cb      	bne.n	8001768 <_swiopen+0x2c>
 80017d0:	4641      	mov	r1, r8
 80017d2:	4648      	mov	r0, r9
 80017d4:	f7ff ff95 	bl	8001702 <_stat>
 80017d8:	3001      	adds	r0, #1
 80017da:	d0c5      	beq.n	8001768 <_swiopen+0x2c>
 80017dc:	f7fe fe64 	bl	80004a8 <__errno>
 80017e0:	2311      	movs	r3, #17
 80017e2:	6003      	str	r3, [r0, #0]
 80017e4:	4620      	mov	r0, r4
 80017e6:	b017      	add	sp, #92	; 0x5c
 80017e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80017ec:	200000a0 	.word	0x200000a0

080017f0 <_get_semihosting_exts>:
 80017f0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80017f4:	4606      	mov	r6, r0
 80017f6:	460f      	mov	r7, r1
 80017f8:	482a      	ldr	r0, [pc, #168]	; (80018a4 <_get_semihosting_exts+0xb4>)
 80017fa:	2100      	movs	r1, #0
 80017fc:	4615      	mov	r5, r2
 80017fe:	f7ff ff9d 	bl	800173c <_swiopen>
 8001802:	462a      	mov	r2, r5
 8001804:	4604      	mov	r4, r0
 8001806:	2100      	movs	r1, #0
 8001808:	4630      	mov	r0, r6
 800180a:	f7fe fe77 	bl	80004fc <memset>
 800180e:	1c63      	adds	r3, r4, #1
 8001810:	d016      	beq.n	8001840 <_get_semihosting_exts+0x50>
 8001812:	4620      	mov	r0, r4
 8001814:	f7ff fe42 	bl	800149c <findslot>
 8001818:	f04f 080c 	mov.w	r8, #12
 800181c:	4681      	mov	r9, r0
 800181e:	4640      	mov	r0, r8
 8001820:	4649      	mov	r1, r9
 8001822:	beab      	bkpt	0x00ab
 8001824:	4680      	mov	r8, r0
 8001826:	4640      	mov	r0, r8
 8001828:	f7ff fe52 	bl	80014d0 <checkerror>
 800182c:	2803      	cmp	r0, #3
 800182e:	dd02      	ble.n	8001836 <_get_semihosting_exts+0x46>
 8001830:	1ec3      	subs	r3, r0, #3
 8001832:	42ab      	cmp	r3, r5
 8001834:	dc08      	bgt.n	8001848 <_get_semihosting_exts+0x58>
 8001836:	4620      	mov	r0, r4
 8001838:	f7ff ff0e 	bl	8001658 <_close>
 800183c:	f04f 34ff 	mov.w	r4, #4294967295
 8001840:	4620      	mov	r0, r4
 8001842:	b003      	add	sp, #12
 8001844:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001848:	2204      	movs	r2, #4
 800184a:	eb0d 0102 	add.w	r1, sp, r2
 800184e:	4620      	mov	r0, r4
 8001850:	f7ff fe6c 	bl	800152c <_read>
 8001854:	2803      	cmp	r0, #3
 8001856:	ddee      	ble.n	8001836 <_get_semihosting_exts+0x46>
 8001858:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800185c:	2b53      	cmp	r3, #83	; 0x53
 800185e:	d1ea      	bne.n	8001836 <_get_semihosting_exts+0x46>
 8001860:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8001864:	2b48      	cmp	r3, #72	; 0x48
 8001866:	d1e6      	bne.n	8001836 <_get_semihosting_exts+0x46>
 8001868:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800186c:	2b46      	cmp	r3, #70	; 0x46
 800186e:	d1e2      	bne.n	8001836 <_get_semihosting_exts+0x46>
 8001870:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001874:	2b42      	cmp	r3, #66	; 0x42
 8001876:	d1de      	bne.n	8001836 <_get_semihosting_exts+0x46>
 8001878:	2201      	movs	r2, #1
 800187a:	4639      	mov	r1, r7
 800187c:	4620      	mov	r0, r4
 800187e:	f7ff fe6f 	bl	8001560 <_swilseek>
 8001882:	2800      	cmp	r0, #0
 8001884:	dbd7      	blt.n	8001836 <_get_semihosting_exts+0x46>
 8001886:	462a      	mov	r2, r5
 8001888:	4631      	mov	r1, r6
 800188a:	4620      	mov	r0, r4
 800188c:	f7ff fe4e 	bl	800152c <_read>
 8001890:	4605      	mov	r5, r0
 8001892:	4620      	mov	r0, r4
 8001894:	f7ff fee0 	bl	8001658 <_close>
 8001898:	4628      	mov	r0, r5
 800189a:	f7ff fe19 	bl	80014d0 <checkerror>
 800189e:	4604      	mov	r4, r0
 80018a0:	e7ce      	b.n	8001840 <_get_semihosting_exts+0x50>
 80018a2:	bf00      	nop
 80018a4:	08001bfb 	.word	0x08001bfb

080018a8 <initialise_semihosting_exts>:
 80018a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80018aa:	4d0a      	ldr	r5, [pc, #40]	; (80018d4 <initialise_semihosting_exts+0x2c>)
 80018ac:	4c0a      	ldr	r4, [pc, #40]	; (80018d8 <initialise_semihosting_exts+0x30>)
 80018ae:	2100      	movs	r1, #0
 80018b0:	2201      	movs	r2, #1
 80018b2:	a801      	add	r0, sp, #4
 80018b4:	6029      	str	r1, [r5, #0]
 80018b6:	6022      	str	r2, [r4, #0]
 80018b8:	f7ff ff9a 	bl	80017f0 <_get_semihosting_exts>
 80018bc:	2800      	cmp	r0, #0
 80018be:	dd07      	ble.n	80018d0 <initialise_semihosting_exts+0x28>
 80018c0:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80018c4:	f003 0201 	and.w	r2, r3, #1
 80018c8:	f003 0302 	and.w	r3, r3, #2
 80018cc:	602a      	str	r2, [r5, #0]
 80018ce:	6023      	str	r3, [r4, #0]
 80018d0:	b003      	add	sp, #12
 80018d2:	bd30      	pop	{r4, r5, pc}
 80018d4:	20000064 	.word	0x20000064
 80018d8:	20000068 	.word	0x20000068

080018dc <_has_ext_stdout_stderr>:
 80018dc:	b510      	push	{r4, lr}
 80018de:	4c04      	ldr	r4, [pc, #16]	; (80018f0 <_has_ext_stdout_stderr+0x14>)
 80018e0:	6822      	ldr	r2, [r4, #0]
 80018e2:	2a00      	cmp	r2, #0
 80018e4:	da01      	bge.n	80018ea <_has_ext_stdout_stderr+0xe>
 80018e6:	f7ff ffdf 	bl	80018a8 <initialise_semihosting_exts>
 80018ea:	6820      	ldr	r0, [r4, #0]
 80018ec:	bd10      	pop	{r4, pc}
 80018ee:	bf00      	nop
 80018f0:	20000068 	.word	0x20000068

080018f4 <initialise_monitor_handles>:
 80018f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80018f8:	b085      	sub	sp, #20
 80018fa:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80019ac <initialise_monitor_handles+0xb8>
 80018fe:	f8cd 9004 	str.w	r9, [sp, #4]
 8001902:	2303      	movs	r3, #3
 8001904:	2400      	movs	r4, #0
 8001906:	9303      	str	r3, [sp, #12]
 8001908:	f10d 0804 	add.w	r8, sp, #4
 800190c:	9402      	str	r4, [sp, #8]
 800190e:	2501      	movs	r5, #1
 8001910:	4628      	mov	r0, r5
 8001912:	4641      	mov	r1, r8
 8001914:	beab      	bkpt	0x00ab
 8001916:	4605      	mov	r5, r0
 8001918:	4e20      	ldr	r6, [pc, #128]	; (800199c <initialise_monitor_handles+0xa8>)
 800191a:	4a21      	ldr	r2, [pc, #132]	; (80019a0 <initialise_monitor_handles+0xac>)
 800191c:	6035      	str	r5, [r6, #0]
 800191e:	4623      	mov	r3, r4
 8001920:	f04f 31ff 	mov.w	r1, #4294967295
 8001924:	4614      	mov	r4, r2
 8001926:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 800192a:	3301      	adds	r3, #1
 800192c:	2b14      	cmp	r3, #20
 800192e:	d1fa      	bne.n	8001926 <initialise_monitor_handles+0x32>
 8001930:	f7ff ffd4 	bl	80018dc <_has_ext_stdout_stderr>
 8001934:	4d1b      	ldr	r5, [pc, #108]	; (80019a4 <initialise_monitor_handles+0xb0>)
 8001936:	b1d0      	cbz	r0, 800196e <initialise_monitor_handles+0x7a>
 8001938:	f04f 0a03 	mov.w	sl, #3
 800193c:	2304      	movs	r3, #4
 800193e:	f8cd 9004 	str.w	r9, [sp, #4]
 8001942:	2701      	movs	r7, #1
 8001944:	f8cd a00c 	str.w	sl, [sp, #12]
 8001948:	9302      	str	r3, [sp, #8]
 800194a:	4638      	mov	r0, r7
 800194c:	4641      	mov	r1, r8
 800194e:	beab      	bkpt	0x00ab
 8001950:	4683      	mov	fp, r0
 8001952:	4b15      	ldr	r3, [pc, #84]	; (80019a8 <initialise_monitor_handles+0xb4>)
 8001954:	f8cd 9004 	str.w	r9, [sp, #4]
 8001958:	f8c3 b000 	str.w	fp, [r3]
 800195c:	2308      	movs	r3, #8
 800195e:	f8cd a00c 	str.w	sl, [sp, #12]
 8001962:	9302      	str	r3, [sp, #8]
 8001964:	4638      	mov	r0, r7
 8001966:	4641      	mov	r1, r8
 8001968:	beab      	bkpt	0x00ab
 800196a:	4607      	mov	r7, r0
 800196c:	602f      	str	r7, [r5, #0]
 800196e:	682b      	ldr	r3, [r5, #0]
 8001970:	3301      	adds	r3, #1
 8001972:	bf02      	ittt	eq
 8001974:	4b0c      	ldreq	r3, [pc, #48]	; (80019a8 <initialise_monitor_handles+0xb4>)
 8001976:	681b      	ldreq	r3, [r3, #0]
 8001978:	602b      	streq	r3, [r5, #0]
 800197a:	6833      	ldr	r3, [r6, #0]
 800197c:	6023      	str	r3, [r4, #0]
 800197e:	2600      	movs	r6, #0
 8001980:	6066      	str	r6, [r4, #4]
 8001982:	f7ff ffab 	bl	80018dc <_has_ext_stdout_stderr>
 8001986:	b130      	cbz	r0, 8001996 <initialise_monitor_handles+0xa2>
 8001988:	4b07      	ldr	r3, [pc, #28]	; (80019a8 <initialise_monitor_handles+0xb4>)
 800198a:	681b      	ldr	r3, [r3, #0]
 800198c:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8001990:	682b      	ldr	r3, [r5, #0]
 8001992:	e9c4 3604 	strd	r3, r6, [r4, #16]
 8001996:	b005      	add	sp, #20
 8001998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800199c:	20000098 	.word	0x20000098
 80019a0:	200000a0 	.word	0x200000a0
 80019a4:	20000094 	.word	0x20000094
 80019a8:	2000009c 	.word	0x2000009c
 80019ac:	08001c11 	.word	0x08001c11

080019b0 <_isatty>:
 80019b0:	b570      	push	{r4, r5, r6, lr}
 80019b2:	f7ff fd73 	bl	800149c <findslot>
 80019b6:	2509      	movs	r5, #9
 80019b8:	4604      	mov	r4, r0
 80019ba:	b920      	cbnz	r0, 80019c6 <_isatty+0x16>
 80019bc:	f7fe fd74 	bl	80004a8 <__errno>
 80019c0:	6005      	str	r5, [r0, #0]
 80019c2:	4620      	mov	r0, r4
 80019c4:	bd70      	pop	{r4, r5, r6, pc}
 80019c6:	4628      	mov	r0, r5
 80019c8:	4621      	mov	r1, r4
 80019ca:	beab      	bkpt	0x00ab
 80019cc:	4604      	mov	r4, r0
 80019ce:	2c01      	cmp	r4, #1
 80019d0:	d0f7      	beq.n	80019c2 <_isatty+0x12>
 80019d2:	f7fe fd69 	bl	80004a8 <__errno>
 80019d6:	2400      	movs	r4, #0
 80019d8:	4605      	mov	r5, r0
 80019da:	2613      	movs	r6, #19
 80019dc:	4630      	mov	r0, r6
 80019de:	4621      	mov	r1, r4
 80019e0:	beab      	bkpt	0x00ab
 80019e2:	4606      	mov	r6, r0
 80019e4:	602e      	str	r6, [r5, #0]
 80019e6:	e7ec      	b.n	80019c2 <_isatty+0x12>

080019e8 <_init>:
 80019e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019ea:	bf00      	nop
 80019ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019ee:	bc08      	pop	{r3}
 80019f0:	469e      	mov	lr, r3
 80019f2:	4770      	bx	lr

080019f4 <_fini>:
 80019f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019f6:	bf00      	nop
 80019f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019fa:	bc08      	pop	{r3}
 80019fc:	469e      	mov	lr, r3
 80019fe:	4770      	bx	lr
