
008_stack.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000016b4  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000d4  08001864  08001864  00011864  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001938  08001938  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  08001938  08001938  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001938  08001938  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001938  08001938  00011938  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800193c  0800193c  0001193c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  08001940  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000e4  2000006c  080019ac  0002006c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000150  080019ac  00020150  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000141a  00000000  00000000  00020096  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003c8  00000000  00000000  000214b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000088  00000000  00000000  00021878  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000060  00000000  00000000  00021900  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000022e0  00000000  00000000  00021960  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b74  00000000  00000000  00023c40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000084ca  00000000  00000000  000247b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0002cc7e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c8c  00000000  00000000  0002ccd4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000006c 	.word	0x2000006c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0800184c 	.word	0x0800184c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000070 	.word	0x20000070
 80001ec:	0800184c 	.word	0x0800184c

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <main>:
#include <stdint.h>
#include <stdio.h>
#include "main.h"

/* This function executes in the THREAD MODE + PRIV ACCESS LEVEL of the processor */
int main(void) {
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b082      	sub	sp, #8
 80002a4:	af00      	add	r7, sp, #0
	initialise_monitor_handles() ;                                              // Debugger
 80002a6:	f001 fa57 	bl	8001758 <initialise_monitor_handles>

    change_sp_to_psp() ;
 80002aa:	f000 f827 	bl	80002fc <change_sp_to_psp>

    int sum ;

    sum = fun_add(1, 4, 5, 6) ;
 80002ae:	2306      	movs	r3, #6
 80002b0:	2205      	movs	r2, #5
 80002b2:	2104      	movs	r1, #4
 80002b4:	2001      	movs	r0, #1
 80002b6:	f000 f80b 	bl	80002d0 <fun_add>
 80002ba:	6078      	str	r0, [r7, #4]

    printf("Result = %d\n", sum) ;
 80002bc:	6879      	ldr	r1, [r7, #4]
 80002be:	4803      	ldr	r0, [pc, #12]	; (80002cc <main+0x2c>)
 80002c0:	f000 f8cc 	bl	800045c <iprintf>

    generate_exception() ;
 80002c4:	f000 f826 	bl	8000314 <generate_exception>

    /* Loop forever */
	for(;;);
 80002c8:	e7fe      	b.n	80002c8 <main+0x28>
 80002ca:	bf00      	nop
 80002cc:	08001864 	.word	0x08001864

080002d0 <fun_add>:
}

int fun_add(int a, int b, int c, int d) {
 80002d0:	b480      	push	{r7}
 80002d2:	b087      	sub	sp, #28
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	60f8      	str	r0, [r7, #12]
 80002d8:	60b9      	str	r1, [r7, #8]
 80002da:	607a      	str	r2, [r7, #4]
 80002dc:	603b      	str	r3, [r7, #0]
    int sum = a + b + c + d ;
 80002de:	68fa      	ldr	r2, [r7, #12]
 80002e0:	68bb      	ldr	r3, [r7, #8]
 80002e2:	441a      	add	r2, r3
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	4413      	add	r3, r2
 80002e8:	683a      	ldr	r2, [r7, #0]
 80002ea:	4413      	add	r3, r2
 80002ec:	617b      	str	r3, [r7, #20]
    return sum ;
 80002ee:	697b      	ldr	r3, [r7, #20]
}
 80002f0:	4618      	mov	r0, r3
 80002f2:	371c      	adds	r7, #28
 80002f4:	46bd      	mov	sp, r7
 80002f6:	bc80      	pop	{r7}
 80002f8:	4770      	bx	lr
	...

080002fc <change_sp_to_psp>:
__attribute__((naked)) void change_sp_to_psp(void) {
    // Use equ assembler directive .equ label, <value> instead of #define macro
    __asm volatile (".equ SRAM_END, (0x20000000 + (192 * 1024) )") ;
    __asm volatile (".equ PSP_START, (SRAM_END - 512)") ;

    __asm volatile ("LDR R0, =PSP_START") ;                               // Cannot use C macros inside inline assembly
 80002fc:	4804      	ldr	r0, [pc, #16]	; (8000310 <change_sp_to_psp+0x14>)
    __asm volatile ("MSR PSP, R0") ;
 80002fe:	f380 8809 	msr	PSP, r0
    __asm volatile ("MOV R0, 0x02") ;
 8000302:	f04f 0002 	mov.w	r0, #2
    __asm volatile ("MSR CONTROL, R0") ;
 8000306:	f380 8814 	msr	CONTROL, r0

    // Return to main function
    __asm volatile ("BX LR") ;
 800030a:	4770      	bx	lr
}
 800030c:	bf00      	nop
 800030e:	0000      	.short	0x0000
 8000310:	2002fe00 	.word	0x2002fe00

08000314 <generate_exception>:

void generate_exception(void) {
 8000314:	b480      	push	{r7}
 8000316:	af00      	add	r7, sp, #0
    __asm volatile ("SVC #0x02") ;
 8000318:	df02      	svc	2
}
 800031a:	bf00      	nop
 800031c:	46bd      	mov	sp, r7
 800031e:	bc80      	pop	{r7}
 8000320:	4770      	bx	lr
	...

08000324 <SVC_Handler>:

void SVC_Handler(void) {
 8000324:	b580      	push	{r7, lr}
 8000326:	af00      	add	r7, sp, #0
    printf("In SVC_Handler") ;
 8000328:	4802      	ldr	r0, [pc, #8]	; (8000334 <SVC_Handler+0x10>)
 800032a:	f000 f897 	bl	800045c <iprintf>
 800032e:	bf00      	nop
 8000330:	bd80      	pop	{r7, pc}
 8000332:	bf00      	nop
 8000334:	08001874 	.word	0x08001874

08000338 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000338:	b580      	push	{r7, lr}
 800033a:	b086      	sub	sp, #24
 800033c:	af00      	add	r7, sp, #0
 800033e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000340:	4a14      	ldr	r2, [pc, #80]	; (8000394 <_sbrk+0x5c>)
 8000342:	4b15      	ldr	r3, [pc, #84]	; (8000398 <_sbrk+0x60>)
 8000344:	1ad3      	subs	r3, r2, r3
 8000346:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000348:	697b      	ldr	r3, [r7, #20]
 800034a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800034c:	4b13      	ldr	r3, [pc, #76]	; (800039c <_sbrk+0x64>)
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	2b00      	cmp	r3, #0
 8000352:	d102      	bne.n	800035a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000354:	4b11      	ldr	r3, [pc, #68]	; (800039c <_sbrk+0x64>)
 8000356:	4a12      	ldr	r2, [pc, #72]	; (80003a0 <_sbrk+0x68>)
 8000358:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800035a:	4b10      	ldr	r3, [pc, #64]	; (800039c <_sbrk+0x64>)
 800035c:	681a      	ldr	r2, [r3, #0]
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4413      	add	r3, r2
 8000362:	693a      	ldr	r2, [r7, #16]
 8000364:	429a      	cmp	r2, r3
 8000366:	d207      	bcs.n	8000378 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000368:	f000 f846 	bl	80003f8 <__errno>
 800036c:	4603      	mov	r3, r0
 800036e:	220c      	movs	r2, #12
 8000370:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000372:	f04f 33ff 	mov.w	r3, #4294967295
 8000376:	e009      	b.n	800038c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000378:	4b08      	ldr	r3, [pc, #32]	; (800039c <_sbrk+0x64>)
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800037e:	4b07      	ldr	r3, [pc, #28]	; (800039c <_sbrk+0x64>)
 8000380:	681a      	ldr	r2, [r3, #0]
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4413      	add	r3, r2
 8000386:	4a05      	ldr	r2, [pc, #20]	; (800039c <_sbrk+0x64>)
 8000388:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800038a:	68fb      	ldr	r3, [r7, #12]
}
 800038c:	4618      	mov	r0, r3
 800038e:	3718      	adds	r7, #24
 8000390:	46bd      	mov	sp, r7
 8000392:	bd80      	pop	{r7, pc}
 8000394:	20030000 	.word	0x20030000
 8000398:	00000400 	.word	0x00000400
 800039c:	20000088 	.word	0x20000088
 80003a0:	20000150 	.word	0x20000150

080003a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003a4:	480d      	ldr	r0, [pc, #52]	; (80003dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003a6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80003a8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003ac:	480c      	ldr	r0, [pc, #48]	; (80003e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80003ae:	490d      	ldr	r1, [pc, #52]	; (80003e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003b0:	4a0d      	ldr	r2, [pc, #52]	; (80003e8 <LoopForever+0xe>)
  movs r3, #0
 80003b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003b4:	e002      	b.n	80003bc <LoopCopyDataInit>

080003b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003ba:	3304      	adds	r3, #4

080003bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003c0:	d3f9      	bcc.n	80003b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003c2:	4a0a      	ldr	r2, [pc, #40]	; (80003ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80003c4:	4c0a      	ldr	r4, [pc, #40]	; (80003f0 <LoopForever+0x16>)
  movs r3, #0
 80003c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003c8:	e001      	b.n	80003ce <LoopFillZerobss>

080003ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003cc:	3204      	adds	r2, #4

080003ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003d0:	d3fb      	bcc.n	80003ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003d2:	f000 f817 	bl	8000404 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003d6:	f7ff ff63 	bl	80002a0 <main>

080003da <LoopForever>:

LoopForever:
    b LoopForever
 80003da:	e7fe      	b.n	80003da <LoopForever>
  ldr   r0, =_estack
 80003dc:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80003e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003e4:	2000006c 	.word	0x2000006c
  ldr r2, =_sidata
 80003e8:	08001940 	.word	0x08001940
  ldr r2, =_sbss
 80003ec:	2000006c 	.word	0x2000006c
  ldr r4, =_ebss
 80003f0:	20000150 	.word	0x20000150

080003f4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003f4:	e7fe      	b.n	80003f4 <ADC_IRQHandler>
	...

080003f8 <__errno>:
 80003f8:	4b01      	ldr	r3, [pc, #4]	; (8000400 <__errno+0x8>)
 80003fa:	6818      	ldr	r0, [r3, #0]
 80003fc:	4770      	bx	lr
 80003fe:	bf00      	nop
 8000400:	20000000 	.word	0x20000000

08000404 <__libc_init_array>:
 8000404:	b570      	push	{r4, r5, r6, lr}
 8000406:	4d0d      	ldr	r5, [pc, #52]	; (800043c <__libc_init_array+0x38>)
 8000408:	4c0d      	ldr	r4, [pc, #52]	; (8000440 <__libc_init_array+0x3c>)
 800040a:	1b64      	subs	r4, r4, r5
 800040c:	10a4      	asrs	r4, r4, #2
 800040e:	2600      	movs	r6, #0
 8000410:	42a6      	cmp	r6, r4
 8000412:	d109      	bne.n	8000428 <__libc_init_array+0x24>
 8000414:	4d0b      	ldr	r5, [pc, #44]	; (8000444 <__libc_init_array+0x40>)
 8000416:	4c0c      	ldr	r4, [pc, #48]	; (8000448 <__libc_init_array+0x44>)
 8000418:	f001 fa18 	bl	800184c <_init>
 800041c:	1b64      	subs	r4, r4, r5
 800041e:	10a4      	asrs	r4, r4, #2
 8000420:	2600      	movs	r6, #0
 8000422:	42a6      	cmp	r6, r4
 8000424:	d105      	bne.n	8000432 <__libc_init_array+0x2e>
 8000426:	bd70      	pop	{r4, r5, r6, pc}
 8000428:	f855 3b04 	ldr.w	r3, [r5], #4
 800042c:	4798      	blx	r3
 800042e:	3601      	adds	r6, #1
 8000430:	e7ee      	b.n	8000410 <__libc_init_array+0xc>
 8000432:	f855 3b04 	ldr.w	r3, [r5], #4
 8000436:	4798      	blx	r3
 8000438:	3601      	adds	r6, #1
 800043a:	e7f2      	b.n	8000422 <__libc_init_array+0x1e>
 800043c:	08001938 	.word	0x08001938
 8000440:	08001938 	.word	0x08001938
 8000444:	08001938 	.word	0x08001938
 8000448:	0800193c 	.word	0x0800193c

0800044c <memset>:
 800044c:	4402      	add	r2, r0
 800044e:	4603      	mov	r3, r0
 8000450:	4293      	cmp	r3, r2
 8000452:	d100      	bne.n	8000456 <memset+0xa>
 8000454:	4770      	bx	lr
 8000456:	f803 1b01 	strb.w	r1, [r3], #1
 800045a:	e7f9      	b.n	8000450 <memset+0x4>

0800045c <iprintf>:
 800045c:	b40f      	push	{r0, r1, r2, r3}
 800045e:	4b0a      	ldr	r3, [pc, #40]	; (8000488 <iprintf+0x2c>)
 8000460:	b513      	push	{r0, r1, r4, lr}
 8000462:	681c      	ldr	r4, [r3, #0]
 8000464:	b124      	cbz	r4, 8000470 <iprintf+0x14>
 8000466:	69a3      	ldr	r3, [r4, #24]
 8000468:	b913      	cbnz	r3, 8000470 <iprintf+0x14>
 800046a:	4620      	mov	r0, r4
 800046c:	f000 f866 	bl	800053c <__sinit>
 8000470:	ab05      	add	r3, sp, #20
 8000472:	9a04      	ldr	r2, [sp, #16]
 8000474:	68a1      	ldr	r1, [r4, #8]
 8000476:	9301      	str	r3, [sp, #4]
 8000478:	4620      	mov	r0, r4
 800047a:	f000 f981 	bl	8000780 <_vfiprintf_r>
 800047e:	b002      	add	sp, #8
 8000480:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000484:	b004      	add	sp, #16
 8000486:	4770      	bx	lr
 8000488:	20000000 	.word	0x20000000

0800048c <std>:
 800048c:	2300      	movs	r3, #0
 800048e:	b510      	push	{r4, lr}
 8000490:	4604      	mov	r4, r0
 8000492:	e9c0 3300 	strd	r3, r3, [r0]
 8000496:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800049a:	6083      	str	r3, [r0, #8]
 800049c:	8181      	strh	r1, [r0, #12]
 800049e:	6643      	str	r3, [r0, #100]	; 0x64
 80004a0:	81c2      	strh	r2, [r0, #14]
 80004a2:	6183      	str	r3, [r0, #24]
 80004a4:	4619      	mov	r1, r3
 80004a6:	2208      	movs	r2, #8
 80004a8:	305c      	adds	r0, #92	; 0x5c
 80004aa:	f7ff ffcf 	bl	800044c <memset>
 80004ae:	4b05      	ldr	r3, [pc, #20]	; (80004c4 <std+0x38>)
 80004b0:	6263      	str	r3, [r4, #36]	; 0x24
 80004b2:	4b05      	ldr	r3, [pc, #20]	; (80004c8 <std+0x3c>)
 80004b4:	62a3      	str	r3, [r4, #40]	; 0x28
 80004b6:	4b05      	ldr	r3, [pc, #20]	; (80004cc <std+0x40>)
 80004b8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80004ba:	4b05      	ldr	r3, [pc, #20]	; (80004d0 <std+0x44>)
 80004bc:	6224      	str	r4, [r4, #32]
 80004be:	6323      	str	r3, [r4, #48]	; 0x30
 80004c0:	bd10      	pop	{r4, pc}
 80004c2:	bf00      	nop
 80004c4:	08000d29 	.word	0x08000d29
 80004c8:	08000d4b 	.word	0x08000d4b
 80004cc:	08000d83 	.word	0x08000d83
 80004d0:	08000da7 	.word	0x08000da7

080004d4 <_cleanup_r>:
 80004d4:	4901      	ldr	r1, [pc, #4]	; (80004dc <_cleanup_r+0x8>)
 80004d6:	f000 b8af 	b.w	8000638 <_fwalk_reent>
 80004da:	bf00      	nop
 80004dc:	08001081 	.word	0x08001081

080004e0 <__sfmoreglue>:
 80004e0:	b570      	push	{r4, r5, r6, lr}
 80004e2:	1e4a      	subs	r2, r1, #1
 80004e4:	2568      	movs	r5, #104	; 0x68
 80004e6:	4355      	muls	r5, r2
 80004e8:	460e      	mov	r6, r1
 80004ea:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80004ee:	f000 f8c5 	bl	800067c <_malloc_r>
 80004f2:	4604      	mov	r4, r0
 80004f4:	b140      	cbz	r0, 8000508 <__sfmoreglue+0x28>
 80004f6:	2100      	movs	r1, #0
 80004f8:	e9c0 1600 	strd	r1, r6, [r0]
 80004fc:	300c      	adds	r0, #12
 80004fe:	60a0      	str	r0, [r4, #8]
 8000500:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000504:	f7ff ffa2 	bl	800044c <memset>
 8000508:	4620      	mov	r0, r4
 800050a:	bd70      	pop	{r4, r5, r6, pc}

0800050c <__sfp_lock_acquire>:
 800050c:	4801      	ldr	r0, [pc, #4]	; (8000514 <__sfp_lock_acquire+0x8>)
 800050e:	f000 b8b3 	b.w	8000678 <__retarget_lock_acquire_recursive>
 8000512:	bf00      	nop
 8000514:	20000148 	.word	0x20000148

08000518 <__sfp_lock_release>:
 8000518:	4801      	ldr	r0, [pc, #4]	; (8000520 <__sfp_lock_release+0x8>)
 800051a:	f000 b8ae 	b.w	800067a <__retarget_lock_release_recursive>
 800051e:	bf00      	nop
 8000520:	20000148 	.word	0x20000148

08000524 <__sinit_lock_acquire>:
 8000524:	4801      	ldr	r0, [pc, #4]	; (800052c <__sinit_lock_acquire+0x8>)
 8000526:	f000 b8a7 	b.w	8000678 <__retarget_lock_acquire_recursive>
 800052a:	bf00      	nop
 800052c:	20000143 	.word	0x20000143

08000530 <__sinit_lock_release>:
 8000530:	4801      	ldr	r0, [pc, #4]	; (8000538 <__sinit_lock_release+0x8>)
 8000532:	f000 b8a2 	b.w	800067a <__retarget_lock_release_recursive>
 8000536:	bf00      	nop
 8000538:	20000143 	.word	0x20000143

0800053c <__sinit>:
 800053c:	b510      	push	{r4, lr}
 800053e:	4604      	mov	r4, r0
 8000540:	f7ff fff0 	bl	8000524 <__sinit_lock_acquire>
 8000544:	69a3      	ldr	r3, [r4, #24]
 8000546:	b11b      	cbz	r3, 8000550 <__sinit+0x14>
 8000548:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800054c:	f7ff bff0 	b.w	8000530 <__sinit_lock_release>
 8000550:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000554:	6523      	str	r3, [r4, #80]	; 0x50
 8000556:	4b13      	ldr	r3, [pc, #76]	; (80005a4 <__sinit+0x68>)
 8000558:	4a13      	ldr	r2, [pc, #76]	; (80005a8 <__sinit+0x6c>)
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	62a2      	str	r2, [r4, #40]	; 0x28
 800055e:	42a3      	cmp	r3, r4
 8000560:	bf04      	itt	eq
 8000562:	2301      	moveq	r3, #1
 8000564:	61a3      	streq	r3, [r4, #24]
 8000566:	4620      	mov	r0, r4
 8000568:	f000 f820 	bl	80005ac <__sfp>
 800056c:	6060      	str	r0, [r4, #4]
 800056e:	4620      	mov	r0, r4
 8000570:	f000 f81c 	bl	80005ac <__sfp>
 8000574:	60a0      	str	r0, [r4, #8]
 8000576:	4620      	mov	r0, r4
 8000578:	f000 f818 	bl	80005ac <__sfp>
 800057c:	2200      	movs	r2, #0
 800057e:	60e0      	str	r0, [r4, #12]
 8000580:	2104      	movs	r1, #4
 8000582:	6860      	ldr	r0, [r4, #4]
 8000584:	f7ff ff82 	bl	800048c <std>
 8000588:	68a0      	ldr	r0, [r4, #8]
 800058a:	2201      	movs	r2, #1
 800058c:	2109      	movs	r1, #9
 800058e:	f7ff ff7d 	bl	800048c <std>
 8000592:	68e0      	ldr	r0, [r4, #12]
 8000594:	2202      	movs	r2, #2
 8000596:	2112      	movs	r1, #18
 8000598:	f7ff ff78 	bl	800048c <std>
 800059c:	2301      	movs	r3, #1
 800059e:	61a3      	str	r3, [r4, #24]
 80005a0:	e7d2      	b.n	8000548 <__sinit+0xc>
 80005a2:	bf00      	nop
 80005a4:	08001884 	.word	0x08001884
 80005a8:	080004d5 	.word	0x080004d5

080005ac <__sfp>:
 80005ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ae:	4607      	mov	r7, r0
 80005b0:	f7ff ffac 	bl	800050c <__sfp_lock_acquire>
 80005b4:	4b1e      	ldr	r3, [pc, #120]	; (8000630 <__sfp+0x84>)
 80005b6:	681e      	ldr	r6, [r3, #0]
 80005b8:	69b3      	ldr	r3, [r6, #24]
 80005ba:	b913      	cbnz	r3, 80005c2 <__sfp+0x16>
 80005bc:	4630      	mov	r0, r6
 80005be:	f7ff ffbd 	bl	800053c <__sinit>
 80005c2:	3648      	adds	r6, #72	; 0x48
 80005c4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80005c8:	3b01      	subs	r3, #1
 80005ca:	d503      	bpl.n	80005d4 <__sfp+0x28>
 80005cc:	6833      	ldr	r3, [r6, #0]
 80005ce:	b30b      	cbz	r3, 8000614 <__sfp+0x68>
 80005d0:	6836      	ldr	r6, [r6, #0]
 80005d2:	e7f7      	b.n	80005c4 <__sfp+0x18>
 80005d4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80005d8:	b9d5      	cbnz	r5, 8000610 <__sfp+0x64>
 80005da:	4b16      	ldr	r3, [pc, #88]	; (8000634 <__sfp+0x88>)
 80005dc:	60e3      	str	r3, [r4, #12]
 80005de:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80005e2:	6665      	str	r5, [r4, #100]	; 0x64
 80005e4:	f000 f847 	bl	8000676 <__retarget_lock_init_recursive>
 80005e8:	f7ff ff96 	bl	8000518 <__sfp_lock_release>
 80005ec:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80005f0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80005f4:	6025      	str	r5, [r4, #0]
 80005f6:	61a5      	str	r5, [r4, #24]
 80005f8:	2208      	movs	r2, #8
 80005fa:	4629      	mov	r1, r5
 80005fc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000600:	f7ff ff24 	bl	800044c <memset>
 8000604:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000608:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800060c:	4620      	mov	r0, r4
 800060e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000610:	3468      	adds	r4, #104	; 0x68
 8000612:	e7d9      	b.n	80005c8 <__sfp+0x1c>
 8000614:	2104      	movs	r1, #4
 8000616:	4638      	mov	r0, r7
 8000618:	f7ff ff62 	bl	80004e0 <__sfmoreglue>
 800061c:	4604      	mov	r4, r0
 800061e:	6030      	str	r0, [r6, #0]
 8000620:	2800      	cmp	r0, #0
 8000622:	d1d5      	bne.n	80005d0 <__sfp+0x24>
 8000624:	f7ff ff78 	bl	8000518 <__sfp_lock_release>
 8000628:	230c      	movs	r3, #12
 800062a:	603b      	str	r3, [r7, #0]
 800062c:	e7ee      	b.n	800060c <__sfp+0x60>
 800062e:	bf00      	nop
 8000630:	08001884 	.word	0x08001884
 8000634:	ffff0001 	.word	0xffff0001

08000638 <_fwalk_reent>:
 8000638:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800063c:	4606      	mov	r6, r0
 800063e:	4688      	mov	r8, r1
 8000640:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000644:	2700      	movs	r7, #0
 8000646:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800064a:	f1b9 0901 	subs.w	r9, r9, #1
 800064e:	d505      	bpl.n	800065c <_fwalk_reent+0x24>
 8000650:	6824      	ldr	r4, [r4, #0]
 8000652:	2c00      	cmp	r4, #0
 8000654:	d1f7      	bne.n	8000646 <_fwalk_reent+0xe>
 8000656:	4638      	mov	r0, r7
 8000658:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800065c:	89ab      	ldrh	r3, [r5, #12]
 800065e:	2b01      	cmp	r3, #1
 8000660:	d907      	bls.n	8000672 <_fwalk_reent+0x3a>
 8000662:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000666:	3301      	adds	r3, #1
 8000668:	d003      	beq.n	8000672 <_fwalk_reent+0x3a>
 800066a:	4629      	mov	r1, r5
 800066c:	4630      	mov	r0, r6
 800066e:	47c0      	blx	r8
 8000670:	4307      	orrs	r7, r0
 8000672:	3568      	adds	r5, #104	; 0x68
 8000674:	e7e9      	b.n	800064a <_fwalk_reent+0x12>

08000676 <__retarget_lock_init_recursive>:
 8000676:	4770      	bx	lr

08000678 <__retarget_lock_acquire_recursive>:
 8000678:	4770      	bx	lr

0800067a <__retarget_lock_release_recursive>:
 800067a:	4770      	bx	lr

0800067c <_malloc_r>:
 800067c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800067e:	1ccd      	adds	r5, r1, #3
 8000680:	f025 0503 	bic.w	r5, r5, #3
 8000684:	3508      	adds	r5, #8
 8000686:	2d0c      	cmp	r5, #12
 8000688:	bf38      	it	cc
 800068a:	250c      	movcc	r5, #12
 800068c:	2d00      	cmp	r5, #0
 800068e:	4606      	mov	r6, r0
 8000690:	db01      	blt.n	8000696 <_malloc_r+0x1a>
 8000692:	42a9      	cmp	r1, r5
 8000694:	d903      	bls.n	800069e <_malloc_r+0x22>
 8000696:	230c      	movs	r3, #12
 8000698:	6033      	str	r3, [r6, #0]
 800069a:	2000      	movs	r0, #0
 800069c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800069e:	f000 fda1 	bl	80011e4 <__malloc_lock>
 80006a2:	4921      	ldr	r1, [pc, #132]	; (8000728 <_malloc_r+0xac>)
 80006a4:	680a      	ldr	r2, [r1, #0]
 80006a6:	4614      	mov	r4, r2
 80006a8:	b99c      	cbnz	r4, 80006d2 <_malloc_r+0x56>
 80006aa:	4f20      	ldr	r7, [pc, #128]	; (800072c <_malloc_r+0xb0>)
 80006ac:	683b      	ldr	r3, [r7, #0]
 80006ae:	b923      	cbnz	r3, 80006ba <_malloc_r+0x3e>
 80006b0:	4621      	mov	r1, r4
 80006b2:	4630      	mov	r0, r6
 80006b4:	f000 fb28 	bl	8000d08 <_sbrk_r>
 80006b8:	6038      	str	r0, [r7, #0]
 80006ba:	4629      	mov	r1, r5
 80006bc:	4630      	mov	r0, r6
 80006be:	f000 fb23 	bl	8000d08 <_sbrk_r>
 80006c2:	1c43      	adds	r3, r0, #1
 80006c4:	d123      	bne.n	800070e <_malloc_r+0x92>
 80006c6:	230c      	movs	r3, #12
 80006c8:	6033      	str	r3, [r6, #0]
 80006ca:	4630      	mov	r0, r6
 80006cc:	f000 fd90 	bl	80011f0 <__malloc_unlock>
 80006d0:	e7e3      	b.n	800069a <_malloc_r+0x1e>
 80006d2:	6823      	ldr	r3, [r4, #0]
 80006d4:	1b5b      	subs	r3, r3, r5
 80006d6:	d417      	bmi.n	8000708 <_malloc_r+0x8c>
 80006d8:	2b0b      	cmp	r3, #11
 80006da:	d903      	bls.n	80006e4 <_malloc_r+0x68>
 80006dc:	6023      	str	r3, [r4, #0]
 80006de:	441c      	add	r4, r3
 80006e0:	6025      	str	r5, [r4, #0]
 80006e2:	e004      	b.n	80006ee <_malloc_r+0x72>
 80006e4:	6863      	ldr	r3, [r4, #4]
 80006e6:	42a2      	cmp	r2, r4
 80006e8:	bf0c      	ite	eq
 80006ea:	600b      	streq	r3, [r1, #0]
 80006ec:	6053      	strne	r3, [r2, #4]
 80006ee:	4630      	mov	r0, r6
 80006f0:	f000 fd7e 	bl	80011f0 <__malloc_unlock>
 80006f4:	f104 000b 	add.w	r0, r4, #11
 80006f8:	1d23      	adds	r3, r4, #4
 80006fa:	f020 0007 	bic.w	r0, r0, #7
 80006fe:	1ac2      	subs	r2, r0, r3
 8000700:	d0cc      	beq.n	800069c <_malloc_r+0x20>
 8000702:	1a1b      	subs	r3, r3, r0
 8000704:	50a3      	str	r3, [r4, r2]
 8000706:	e7c9      	b.n	800069c <_malloc_r+0x20>
 8000708:	4622      	mov	r2, r4
 800070a:	6864      	ldr	r4, [r4, #4]
 800070c:	e7cc      	b.n	80006a8 <_malloc_r+0x2c>
 800070e:	1cc4      	adds	r4, r0, #3
 8000710:	f024 0403 	bic.w	r4, r4, #3
 8000714:	42a0      	cmp	r0, r4
 8000716:	d0e3      	beq.n	80006e0 <_malloc_r+0x64>
 8000718:	1a21      	subs	r1, r4, r0
 800071a:	4630      	mov	r0, r6
 800071c:	f000 faf4 	bl	8000d08 <_sbrk_r>
 8000720:	3001      	adds	r0, #1
 8000722:	d1dd      	bne.n	80006e0 <_malloc_r+0x64>
 8000724:	e7cf      	b.n	80006c6 <_malloc_r+0x4a>
 8000726:	bf00      	nop
 8000728:	2000008c 	.word	0x2000008c
 800072c:	20000090 	.word	0x20000090

08000730 <__sfputc_r>:
 8000730:	6893      	ldr	r3, [r2, #8]
 8000732:	3b01      	subs	r3, #1
 8000734:	2b00      	cmp	r3, #0
 8000736:	b410      	push	{r4}
 8000738:	6093      	str	r3, [r2, #8]
 800073a:	da07      	bge.n	800074c <__sfputc_r+0x1c>
 800073c:	6994      	ldr	r4, [r2, #24]
 800073e:	42a3      	cmp	r3, r4
 8000740:	db01      	blt.n	8000746 <__sfputc_r+0x16>
 8000742:	290a      	cmp	r1, #10
 8000744:	d102      	bne.n	800074c <__sfputc_r+0x1c>
 8000746:	bc10      	pop	{r4}
 8000748:	f000 bb32 	b.w	8000db0 <__swbuf_r>
 800074c:	6813      	ldr	r3, [r2, #0]
 800074e:	1c58      	adds	r0, r3, #1
 8000750:	6010      	str	r0, [r2, #0]
 8000752:	7019      	strb	r1, [r3, #0]
 8000754:	4608      	mov	r0, r1
 8000756:	bc10      	pop	{r4}
 8000758:	4770      	bx	lr

0800075a <__sfputs_r>:
 800075a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800075c:	4606      	mov	r6, r0
 800075e:	460f      	mov	r7, r1
 8000760:	4614      	mov	r4, r2
 8000762:	18d5      	adds	r5, r2, r3
 8000764:	42ac      	cmp	r4, r5
 8000766:	d101      	bne.n	800076c <__sfputs_r+0x12>
 8000768:	2000      	movs	r0, #0
 800076a:	e007      	b.n	800077c <__sfputs_r+0x22>
 800076c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000770:	463a      	mov	r2, r7
 8000772:	4630      	mov	r0, r6
 8000774:	f7ff ffdc 	bl	8000730 <__sfputc_r>
 8000778:	1c43      	adds	r3, r0, #1
 800077a:	d1f3      	bne.n	8000764 <__sfputs_r+0xa>
 800077c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000780 <_vfiprintf_r>:
 8000780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000784:	460d      	mov	r5, r1
 8000786:	b09d      	sub	sp, #116	; 0x74
 8000788:	4614      	mov	r4, r2
 800078a:	4698      	mov	r8, r3
 800078c:	4606      	mov	r6, r0
 800078e:	b118      	cbz	r0, 8000798 <_vfiprintf_r+0x18>
 8000790:	6983      	ldr	r3, [r0, #24]
 8000792:	b90b      	cbnz	r3, 8000798 <_vfiprintf_r+0x18>
 8000794:	f7ff fed2 	bl	800053c <__sinit>
 8000798:	4b89      	ldr	r3, [pc, #548]	; (80009c0 <_vfiprintf_r+0x240>)
 800079a:	429d      	cmp	r5, r3
 800079c:	d11b      	bne.n	80007d6 <_vfiprintf_r+0x56>
 800079e:	6875      	ldr	r5, [r6, #4]
 80007a0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80007a2:	07d9      	lsls	r1, r3, #31
 80007a4:	d405      	bmi.n	80007b2 <_vfiprintf_r+0x32>
 80007a6:	89ab      	ldrh	r3, [r5, #12]
 80007a8:	059a      	lsls	r2, r3, #22
 80007aa:	d402      	bmi.n	80007b2 <_vfiprintf_r+0x32>
 80007ac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80007ae:	f7ff ff63 	bl	8000678 <__retarget_lock_acquire_recursive>
 80007b2:	89ab      	ldrh	r3, [r5, #12]
 80007b4:	071b      	lsls	r3, r3, #28
 80007b6:	d501      	bpl.n	80007bc <_vfiprintf_r+0x3c>
 80007b8:	692b      	ldr	r3, [r5, #16]
 80007ba:	b9eb      	cbnz	r3, 80007f8 <_vfiprintf_r+0x78>
 80007bc:	4629      	mov	r1, r5
 80007be:	4630      	mov	r0, r6
 80007c0:	f000 fb5a 	bl	8000e78 <__swsetup_r>
 80007c4:	b1c0      	cbz	r0, 80007f8 <_vfiprintf_r+0x78>
 80007c6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80007c8:	07dc      	lsls	r4, r3, #31
 80007ca:	d50e      	bpl.n	80007ea <_vfiprintf_r+0x6a>
 80007cc:	f04f 30ff 	mov.w	r0, #4294967295
 80007d0:	b01d      	add	sp, #116	; 0x74
 80007d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80007d6:	4b7b      	ldr	r3, [pc, #492]	; (80009c4 <_vfiprintf_r+0x244>)
 80007d8:	429d      	cmp	r5, r3
 80007da:	d101      	bne.n	80007e0 <_vfiprintf_r+0x60>
 80007dc:	68b5      	ldr	r5, [r6, #8]
 80007de:	e7df      	b.n	80007a0 <_vfiprintf_r+0x20>
 80007e0:	4b79      	ldr	r3, [pc, #484]	; (80009c8 <_vfiprintf_r+0x248>)
 80007e2:	429d      	cmp	r5, r3
 80007e4:	bf08      	it	eq
 80007e6:	68f5      	ldreq	r5, [r6, #12]
 80007e8:	e7da      	b.n	80007a0 <_vfiprintf_r+0x20>
 80007ea:	89ab      	ldrh	r3, [r5, #12]
 80007ec:	0598      	lsls	r0, r3, #22
 80007ee:	d4ed      	bmi.n	80007cc <_vfiprintf_r+0x4c>
 80007f0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80007f2:	f7ff ff42 	bl	800067a <__retarget_lock_release_recursive>
 80007f6:	e7e9      	b.n	80007cc <_vfiprintf_r+0x4c>
 80007f8:	2300      	movs	r3, #0
 80007fa:	9309      	str	r3, [sp, #36]	; 0x24
 80007fc:	2320      	movs	r3, #32
 80007fe:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000802:	f8cd 800c 	str.w	r8, [sp, #12]
 8000806:	2330      	movs	r3, #48	; 0x30
 8000808:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80009cc <_vfiprintf_r+0x24c>
 800080c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000810:	f04f 0901 	mov.w	r9, #1
 8000814:	4623      	mov	r3, r4
 8000816:	469a      	mov	sl, r3
 8000818:	f813 2b01 	ldrb.w	r2, [r3], #1
 800081c:	b10a      	cbz	r2, 8000822 <_vfiprintf_r+0xa2>
 800081e:	2a25      	cmp	r2, #37	; 0x25
 8000820:	d1f9      	bne.n	8000816 <_vfiprintf_r+0x96>
 8000822:	ebba 0b04 	subs.w	fp, sl, r4
 8000826:	d00b      	beq.n	8000840 <_vfiprintf_r+0xc0>
 8000828:	465b      	mov	r3, fp
 800082a:	4622      	mov	r2, r4
 800082c:	4629      	mov	r1, r5
 800082e:	4630      	mov	r0, r6
 8000830:	f7ff ff93 	bl	800075a <__sfputs_r>
 8000834:	3001      	adds	r0, #1
 8000836:	f000 80aa 	beq.w	800098e <_vfiprintf_r+0x20e>
 800083a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800083c:	445a      	add	r2, fp
 800083e:	9209      	str	r2, [sp, #36]	; 0x24
 8000840:	f89a 3000 	ldrb.w	r3, [sl]
 8000844:	2b00      	cmp	r3, #0
 8000846:	f000 80a2 	beq.w	800098e <_vfiprintf_r+0x20e>
 800084a:	2300      	movs	r3, #0
 800084c:	f04f 32ff 	mov.w	r2, #4294967295
 8000850:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000854:	f10a 0a01 	add.w	sl, sl, #1
 8000858:	9304      	str	r3, [sp, #16]
 800085a:	9307      	str	r3, [sp, #28]
 800085c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000860:	931a      	str	r3, [sp, #104]	; 0x68
 8000862:	4654      	mov	r4, sl
 8000864:	2205      	movs	r2, #5
 8000866:	f814 1b01 	ldrb.w	r1, [r4], #1
 800086a:	4858      	ldr	r0, [pc, #352]	; (80009cc <_vfiprintf_r+0x24c>)
 800086c:	f7ff fcc0 	bl	80001f0 <memchr>
 8000870:	9a04      	ldr	r2, [sp, #16]
 8000872:	b9d8      	cbnz	r0, 80008ac <_vfiprintf_r+0x12c>
 8000874:	06d1      	lsls	r1, r2, #27
 8000876:	bf44      	itt	mi
 8000878:	2320      	movmi	r3, #32
 800087a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800087e:	0713      	lsls	r3, r2, #28
 8000880:	bf44      	itt	mi
 8000882:	232b      	movmi	r3, #43	; 0x2b
 8000884:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000888:	f89a 3000 	ldrb.w	r3, [sl]
 800088c:	2b2a      	cmp	r3, #42	; 0x2a
 800088e:	d015      	beq.n	80008bc <_vfiprintf_r+0x13c>
 8000890:	9a07      	ldr	r2, [sp, #28]
 8000892:	4654      	mov	r4, sl
 8000894:	2000      	movs	r0, #0
 8000896:	f04f 0c0a 	mov.w	ip, #10
 800089a:	4621      	mov	r1, r4
 800089c:	f811 3b01 	ldrb.w	r3, [r1], #1
 80008a0:	3b30      	subs	r3, #48	; 0x30
 80008a2:	2b09      	cmp	r3, #9
 80008a4:	d94e      	bls.n	8000944 <_vfiprintf_r+0x1c4>
 80008a6:	b1b0      	cbz	r0, 80008d6 <_vfiprintf_r+0x156>
 80008a8:	9207      	str	r2, [sp, #28]
 80008aa:	e014      	b.n	80008d6 <_vfiprintf_r+0x156>
 80008ac:	eba0 0308 	sub.w	r3, r0, r8
 80008b0:	fa09 f303 	lsl.w	r3, r9, r3
 80008b4:	4313      	orrs	r3, r2
 80008b6:	9304      	str	r3, [sp, #16]
 80008b8:	46a2      	mov	sl, r4
 80008ba:	e7d2      	b.n	8000862 <_vfiprintf_r+0xe2>
 80008bc:	9b03      	ldr	r3, [sp, #12]
 80008be:	1d19      	adds	r1, r3, #4
 80008c0:	681b      	ldr	r3, [r3, #0]
 80008c2:	9103      	str	r1, [sp, #12]
 80008c4:	2b00      	cmp	r3, #0
 80008c6:	bfbb      	ittet	lt
 80008c8:	425b      	neglt	r3, r3
 80008ca:	f042 0202 	orrlt.w	r2, r2, #2
 80008ce:	9307      	strge	r3, [sp, #28]
 80008d0:	9307      	strlt	r3, [sp, #28]
 80008d2:	bfb8      	it	lt
 80008d4:	9204      	strlt	r2, [sp, #16]
 80008d6:	7823      	ldrb	r3, [r4, #0]
 80008d8:	2b2e      	cmp	r3, #46	; 0x2e
 80008da:	d10c      	bne.n	80008f6 <_vfiprintf_r+0x176>
 80008dc:	7863      	ldrb	r3, [r4, #1]
 80008de:	2b2a      	cmp	r3, #42	; 0x2a
 80008e0:	d135      	bne.n	800094e <_vfiprintf_r+0x1ce>
 80008e2:	9b03      	ldr	r3, [sp, #12]
 80008e4:	1d1a      	adds	r2, r3, #4
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	9203      	str	r2, [sp, #12]
 80008ea:	2b00      	cmp	r3, #0
 80008ec:	bfb8      	it	lt
 80008ee:	f04f 33ff 	movlt.w	r3, #4294967295
 80008f2:	3402      	adds	r4, #2
 80008f4:	9305      	str	r3, [sp, #20]
 80008f6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80009dc <_vfiprintf_r+0x25c>
 80008fa:	7821      	ldrb	r1, [r4, #0]
 80008fc:	2203      	movs	r2, #3
 80008fe:	4650      	mov	r0, sl
 8000900:	f7ff fc76 	bl	80001f0 <memchr>
 8000904:	b140      	cbz	r0, 8000918 <_vfiprintf_r+0x198>
 8000906:	2340      	movs	r3, #64	; 0x40
 8000908:	eba0 000a 	sub.w	r0, r0, sl
 800090c:	fa03 f000 	lsl.w	r0, r3, r0
 8000910:	9b04      	ldr	r3, [sp, #16]
 8000912:	4303      	orrs	r3, r0
 8000914:	3401      	adds	r4, #1
 8000916:	9304      	str	r3, [sp, #16]
 8000918:	f814 1b01 	ldrb.w	r1, [r4], #1
 800091c:	482c      	ldr	r0, [pc, #176]	; (80009d0 <_vfiprintf_r+0x250>)
 800091e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000922:	2206      	movs	r2, #6
 8000924:	f7ff fc64 	bl	80001f0 <memchr>
 8000928:	2800      	cmp	r0, #0
 800092a:	d03f      	beq.n	80009ac <_vfiprintf_r+0x22c>
 800092c:	4b29      	ldr	r3, [pc, #164]	; (80009d4 <_vfiprintf_r+0x254>)
 800092e:	bb1b      	cbnz	r3, 8000978 <_vfiprintf_r+0x1f8>
 8000930:	9b03      	ldr	r3, [sp, #12]
 8000932:	3307      	adds	r3, #7
 8000934:	f023 0307 	bic.w	r3, r3, #7
 8000938:	3308      	adds	r3, #8
 800093a:	9303      	str	r3, [sp, #12]
 800093c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800093e:	443b      	add	r3, r7
 8000940:	9309      	str	r3, [sp, #36]	; 0x24
 8000942:	e767      	b.n	8000814 <_vfiprintf_r+0x94>
 8000944:	fb0c 3202 	mla	r2, ip, r2, r3
 8000948:	460c      	mov	r4, r1
 800094a:	2001      	movs	r0, #1
 800094c:	e7a5      	b.n	800089a <_vfiprintf_r+0x11a>
 800094e:	2300      	movs	r3, #0
 8000950:	3401      	adds	r4, #1
 8000952:	9305      	str	r3, [sp, #20]
 8000954:	4619      	mov	r1, r3
 8000956:	f04f 0c0a 	mov.w	ip, #10
 800095a:	4620      	mov	r0, r4
 800095c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000960:	3a30      	subs	r2, #48	; 0x30
 8000962:	2a09      	cmp	r2, #9
 8000964:	d903      	bls.n	800096e <_vfiprintf_r+0x1ee>
 8000966:	2b00      	cmp	r3, #0
 8000968:	d0c5      	beq.n	80008f6 <_vfiprintf_r+0x176>
 800096a:	9105      	str	r1, [sp, #20]
 800096c:	e7c3      	b.n	80008f6 <_vfiprintf_r+0x176>
 800096e:	fb0c 2101 	mla	r1, ip, r1, r2
 8000972:	4604      	mov	r4, r0
 8000974:	2301      	movs	r3, #1
 8000976:	e7f0      	b.n	800095a <_vfiprintf_r+0x1da>
 8000978:	ab03      	add	r3, sp, #12
 800097a:	9300      	str	r3, [sp, #0]
 800097c:	462a      	mov	r2, r5
 800097e:	4b16      	ldr	r3, [pc, #88]	; (80009d8 <_vfiprintf_r+0x258>)
 8000980:	a904      	add	r1, sp, #16
 8000982:	4630      	mov	r0, r6
 8000984:	f3af 8000 	nop.w
 8000988:	4607      	mov	r7, r0
 800098a:	1c78      	adds	r0, r7, #1
 800098c:	d1d6      	bne.n	800093c <_vfiprintf_r+0x1bc>
 800098e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000990:	07d9      	lsls	r1, r3, #31
 8000992:	d405      	bmi.n	80009a0 <_vfiprintf_r+0x220>
 8000994:	89ab      	ldrh	r3, [r5, #12]
 8000996:	059a      	lsls	r2, r3, #22
 8000998:	d402      	bmi.n	80009a0 <_vfiprintf_r+0x220>
 800099a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800099c:	f7ff fe6d 	bl	800067a <__retarget_lock_release_recursive>
 80009a0:	89ab      	ldrh	r3, [r5, #12]
 80009a2:	065b      	lsls	r3, r3, #25
 80009a4:	f53f af12 	bmi.w	80007cc <_vfiprintf_r+0x4c>
 80009a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80009aa:	e711      	b.n	80007d0 <_vfiprintf_r+0x50>
 80009ac:	ab03      	add	r3, sp, #12
 80009ae:	9300      	str	r3, [sp, #0]
 80009b0:	462a      	mov	r2, r5
 80009b2:	4b09      	ldr	r3, [pc, #36]	; (80009d8 <_vfiprintf_r+0x258>)
 80009b4:	a904      	add	r1, sp, #16
 80009b6:	4630      	mov	r0, r6
 80009b8:	f000 f880 	bl	8000abc <_printf_i>
 80009bc:	e7e4      	b.n	8000988 <_vfiprintf_r+0x208>
 80009be:	bf00      	nop
 80009c0:	080018a8 	.word	0x080018a8
 80009c4:	080018c8 	.word	0x080018c8
 80009c8:	08001888 	.word	0x08001888
 80009cc:	080018e8 	.word	0x080018e8
 80009d0:	080018f2 	.word	0x080018f2
 80009d4:	00000000 	.word	0x00000000
 80009d8:	0800075b 	.word	0x0800075b
 80009dc:	080018ee 	.word	0x080018ee

080009e0 <_printf_common>:
 80009e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80009e4:	4616      	mov	r6, r2
 80009e6:	4699      	mov	r9, r3
 80009e8:	688a      	ldr	r2, [r1, #8]
 80009ea:	690b      	ldr	r3, [r1, #16]
 80009ec:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80009f0:	4293      	cmp	r3, r2
 80009f2:	bfb8      	it	lt
 80009f4:	4613      	movlt	r3, r2
 80009f6:	6033      	str	r3, [r6, #0]
 80009f8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80009fc:	4607      	mov	r7, r0
 80009fe:	460c      	mov	r4, r1
 8000a00:	b10a      	cbz	r2, 8000a06 <_printf_common+0x26>
 8000a02:	3301      	adds	r3, #1
 8000a04:	6033      	str	r3, [r6, #0]
 8000a06:	6823      	ldr	r3, [r4, #0]
 8000a08:	0699      	lsls	r1, r3, #26
 8000a0a:	bf42      	ittt	mi
 8000a0c:	6833      	ldrmi	r3, [r6, #0]
 8000a0e:	3302      	addmi	r3, #2
 8000a10:	6033      	strmi	r3, [r6, #0]
 8000a12:	6825      	ldr	r5, [r4, #0]
 8000a14:	f015 0506 	ands.w	r5, r5, #6
 8000a18:	d106      	bne.n	8000a28 <_printf_common+0x48>
 8000a1a:	f104 0a19 	add.w	sl, r4, #25
 8000a1e:	68e3      	ldr	r3, [r4, #12]
 8000a20:	6832      	ldr	r2, [r6, #0]
 8000a22:	1a9b      	subs	r3, r3, r2
 8000a24:	42ab      	cmp	r3, r5
 8000a26:	dc26      	bgt.n	8000a76 <_printf_common+0x96>
 8000a28:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000a2c:	1e13      	subs	r3, r2, #0
 8000a2e:	6822      	ldr	r2, [r4, #0]
 8000a30:	bf18      	it	ne
 8000a32:	2301      	movne	r3, #1
 8000a34:	0692      	lsls	r2, r2, #26
 8000a36:	d42b      	bmi.n	8000a90 <_printf_common+0xb0>
 8000a38:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000a3c:	4649      	mov	r1, r9
 8000a3e:	4638      	mov	r0, r7
 8000a40:	47c0      	blx	r8
 8000a42:	3001      	adds	r0, #1
 8000a44:	d01e      	beq.n	8000a84 <_printf_common+0xa4>
 8000a46:	6823      	ldr	r3, [r4, #0]
 8000a48:	68e5      	ldr	r5, [r4, #12]
 8000a4a:	6832      	ldr	r2, [r6, #0]
 8000a4c:	f003 0306 	and.w	r3, r3, #6
 8000a50:	2b04      	cmp	r3, #4
 8000a52:	bf08      	it	eq
 8000a54:	1aad      	subeq	r5, r5, r2
 8000a56:	68a3      	ldr	r3, [r4, #8]
 8000a58:	6922      	ldr	r2, [r4, #16]
 8000a5a:	bf0c      	ite	eq
 8000a5c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000a60:	2500      	movne	r5, #0
 8000a62:	4293      	cmp	r3, r2
 8000a64:	bfc4      	itt	gt
 8000a66:	1a9b      	subgt	r3, r3, r2
 8000a68:	18ed      	addgt	r5, r5, r3
 8000a6a:	2600      	movs	r6, #0
 8000a6c:	341a      	adds	r4, #26
 8000a6e:	42b5      	cmp	r5, r6
 8000a70:	d11a      	bne.n	8000aa8 <_printf_common+0xc8>
 8000a72:	2000      	movs	r0, #0
 8000a74:	e008      	b.n	8000a88 <_printf_common+0xa8>
 8000a76:	2301      	movs	r3, #1
 8000a78:	4652      	mov	r2, sl
 8000a7a:	4649      	mov	r1, r9
 8000a7c:	4638      	mov	r0, r7
 8000a7e:	47c0      	blx	r8
 8000a80:	3001      	adds	r0, #1
 8000a82:	d103      	bne.n	8000a8c <_printf_common+0xac>
 8000a84:	f04f 30ff 	mov.w	r0, #4294967295
 8000a88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a8c:	3501      	adds	r5, #1
 8000a8e:	e7c6      	b.n	8000a1e <_printf_common+0x3e>
 8000a90:	18e1      	adds	r1, r4, r3
 8000a92:	1c5a      	adds	r2, r3, #1
 8000a94:	2030      	movs	r0, #48	; 0x30
 8000a96:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000a9a:	4422      	add	r2, r4
 8000a9c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000aa0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000aa4:	3302      	adds	r3, #2
 8000aa6:	e7c7      	b.n	8000a38 <_printf_common+0x58>
 8000aa8:	2301      	movs	r3, #1
 8000aaa:	4622      	mov	r2, r4
 8000aac:	4649      	mov	r1, r9
 8000aae:	4638      	mov	r0, r7
 8000ab0:	47c0      	blx	r8
 8000ab2:	3001      	adds	r0, #1
 8000ab4:	d0e6      	beq.n	8000a84 <_printf_common+0xa4>
 8000ab6:	3601      	adds	r6, #1
 8000ab8:	e7d9      	b.n	8000a6e <_printf_common+0x8e>
	...

08000abc <_printf_i>:
 8000abc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000ac0:	460c      	mov	r4, r1
 8000ac2:	4691      	mov	r9, r2
 8000ac4:	7e27      	ldrb	r7, [r4, #24]
 8000ac6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000ac8:	2f78      	cmp	r7, #120	; 0x78
 8000aca:	4680      	mov	r8, r0
 8000acc:	469a      	mov	sl, r3
 8000ace:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000ad2:	d807      	bhi.n	8000ae4 <_printf_i+0x28>
 8000ad4:	2f62      	cmp	r7, #98	; 0x62
 8000ad6:	d80a      	bhi.n	8000aee <_printf_i+0x32>
 8000ad8:	2f00      	cmp	r7, #0
 8000ada:	f000 80d8 	beq.w	8000c8e <_printf_i+0x1d2>
 8000ade:	2f58      	cmp	r7, #88	; 0x58
 8000ae0:	f000 80a3 	beq.w	8000c2a <_printf_i+0x16e>
 8000ae4:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000ae8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000aec:	e03a      	b.n	8000b64 <_printf_i+0xa8>
 8000aee:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000af2:	2b15      	cmp	r3, #21
 8000af4:	d8f6      	bhi.n	8000ae4 <_printf_i+0x28>
 8000af6:	a001      	add	r0, pc, #4	; (adr r0, 8000afc <_printf_i+0x40>)
 8000af8:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000afc:	08000b55 	.word	0x08000b55
 8000b00:	08000b69 	.word	0x08000b69
 8000b04:	08000ae5 	.word	0x08000ae5
 8000b08:	08000ae5 	.word	0x08000ae5
 8000b0c:	08000ae5 	.word	0x08000ae5
 8000b10:	08000ae5 	.word	0x08000ae5
 8000b14:	08000b69 	.word	0x08000b69
 8000b18:	08000ae5 	.word	0x08000ae5
 8000b1c:	08000ae5 	.word	0x08000ae5
 8000b20:	08000ae5 	.word	0x08000ae5
 8000b24:	08000ae5 	.word	0x08000ae5
 8000b28:	08000c75 	.word	0x08000c75
 8000b2c:	08000b99 	.word	0x08000b99
 8000b30:	08000c57 	.word	0x08000c57
 8000b34:	08000ae5 	.word	0x08000ae5
 8000b38:	08000ae5 	.word	0x08000ae5
 8000b3c:	08000c97 	.word	0x08000c97
 8000b40:	08000ae5 	.word	0x08000ae5
 8000b44:	08000b99 	.word	0x08000b99
 8000b48:	08000ae5 	.word	0x08000ae5
 8000b4c:	08000ae5 	.word	0x08000ae5
 8000b50:	08000c5f 	.word	0x08000c5f
 8000b54:	680b      	ldr	r3, [r1, #0]
 8000b56:	1d1a      	adds	r2, r3, #4
 8000b58:	681b      	ldr	r3, [r3, #0]
 8000b5a:	600a      	str	r2, [r1, #0]
 8000b5c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000b60:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000b64:	2301      	movs	r3, #1
 8000b66:	e0a3      	b.n	8000cb0 <_printf_i+0x1f4>
 8000b68:	6825      	ldr	r5, [r4, #0]
 8000b6a:	6808      	ldr	r0, [r1, #0]
 8000b6c:	062e      	lsls	r6, r5, #24
 8000b6e:	f100 0304 	add.w	r3, r0, #4
 8000b72:	d50a      	bpl.n	8000b8a <_printf_i+0xce>
 8000b74:	6805      	ldr	r5, [r0, #0]
 8000b76:	600b      	str	r3, [r1, #0]
 8000b78:	2d00      	cmp	r5, #0
 8000b7a:	da03      	bge.n	8000b84 <_printf_i+0xc8>
 8000b7c:	232d      	movs	r3, #45	; 0x2d
 8000b7e:	426d      	negs	r5, r5
 8000b80:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000b84:	485e      	ldr	r0, [pc, #376]	; (8000d00 <_printf_i+0x244>)
 8000b86:	230a      	movs	r3, #10
 8000b88:	e019      	b.n	8000bbe <_printf_i+0x102>
 8000b8a:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000b8e:	6805      	ldr	r5, [r0, #0]
 8000b90:	600b      	str	r3, [r1, #0]
 8000b92:	bf18      	it	ne
 8000b94:	b22d      	sxthne	r5, r5
 8000b96:	e7ef      	b.n	8000b78 <_printf_i+0xbc>
 8000b98:	680b      	ldr	r3, [r1, #0]
 8000b9a:	6825      	ldr	r5, [r4, #0]
 8000b9c:	1d18      	adds	r0, r3, #4
 8000b9e:	6008      	str	r0, [r1, #0]
 8000ba0:	0628      	lsls	r0, r5, #24
 8000ba2:	d501      	bpl.n	8000ba8 <_printf_i+0xec>
 8000ba4:	681d      	ldr	r5, [r3, #0]
 8000ba6:	e002      	b.n	8000bae <_printf_i+0xf2>
 8000ba8:	0669      	lsls	r1, r5, #25
 8000baa:	d5fb      	bpl.n	8000ba4 <_printf_i+0xe8>
 8000bac:	881d      	ldrh	r5, [r3, #0]
 8000bae:	4854      	ldr	r0, [pc, #336]	; (8000d00 <_printf_i+0x244>)
 8000bb0:	2f6f      	cmp	r7, #111	; 0x6f
 8000bb2:	bf0c      	ite	eq
 8000bb4:	2308      	moveq	r3, #8
 8000bb6:	230a      	movne	r3, #10
 8000bb8:	2100      	movs	r1, #0
 8000bba:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000bbe:	6866      	ldr	r6, [r4, #4]
 8000bc0:	60a6      	str	r6, [r4, #8]
 8000bc2:	2e00      	cmp	r6, #0
 8000bc4:	bfa2      	ittt	ge
 8000bc6:	6821      	ldrge	r1, [r4, #0]
 8000bc8:	f021 0104 	bicge.w	r1, r1, #4
 8000bcc:	6021      	strge	r1, [r4, #0]
 8000bce:	b90d      	cbnz	r5, 8000bd4 <_printf_i+0x118>
 8000bd0:	2e00      	cmp	r6, #0
 8000bd2:	d04d      	beq.n	8000c70 <_printf_i+0x1b4>
 8000bd4:	4616      	mov	r6, r2
 8000bd6:	fbb5 f1f3 	udiv	r1, r5, r3
 8000bda:	fb03 5711 	mls	r7, r3, r1, r5
 8000bde:	5dc7      	ldrb	r7, [r0, r7]
 8000be0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000be4:	462f      	mov	r7, r5
 8000be6:	42bb      	cmp	r3, r7
 8000be8:	460d      	mov	r5, r1
 8000bea:	d9f4      	bls.n	8000bd6 <_printf_i+0x11a>
 8000bec:	2b08      	cmp	r3, #8
 8000bee:	d10b      	bne.n	8000c08 <_printf_i+0x14c>
 8000bf0:	6823      	ldr	r3, [r4, #0]
 8000bf2:	07df      	lsls	r7, r3, #31
 8000bf4:	d508      	bpl.n	8000c08 <_printf_i+0x14c>
 8000bf6:	6923      	ldr	r3, [r4, #16]
 8000bf8:	6861      	ldr	r1, [r4, #4]
 8000bfa:	4299      	cmp	r1, r3
 8000bfc:	bfde      	ittt	le
 8000bfe:	2330      	movle	r3, #48	; 0x30
 8000c00:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000c04:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000c08:	1b92      	subs	r2, r2, r6
 8000c0a:	6122      	str	r2, [r4, #16]
 8000c0c:	f8cd a000 	str.w	sl, [sp]
 8000c10:	464b      	mov	r3, r9
 8000c12:	aa03      	add	r2, sp, #12
 8000c14:	4621      	mov	r1, r4
 8000c16:	4640      	mov	r0, r8
 8000c18:	f7ff fee2 	bl	80009e0 <_printf_common>
 8000c1c:	3001      	adds	r0, #1
 8000c1e:	d14c      	bne.n	8000cba <_printf_i+0x1fe>
 8000c20:	f04f 30ff 	mov.w	r0, #4294967295
 8000c24:	b004      	add	sp, #16
 8000c26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c2a:	4835      	ldr	r0, [pc, #212]	; (8000d00 <_printf_i+0x244>)
 8000c2c:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000c30:	6823      	ldr	r3, [r4, #0]
 8000c32:	680e      	ldr	r6, [r1, #0]
 8000c34:	061f      	lsls	r7, r3, #24
 8000c36:	f856 5b04 	ldr.w	r5, [r6], #4
 8000c3a:	600e      	str	r6, [r1, #0]
 8000c3c:	d514      	bpl.n	8000c68 <_printf_i+0x1ac>
 8000c3e:	07d9      	lsls	r1, r3, #31
 8000c40:	bf44      	itt	mi
 8000c42:	f043 0320 	orrmi.w	r3, r3, #32
 8000c46:	6023      	strmi	r3, [r4, #0]
 8000c48:	b91d      	cbnz	r5, 8000c52 <_printf_i+0x196>
 8000c4a:	6823      	ldr	r3, [r4, #0]
 8000c4c:	f023 0320 	bic.w	r3, r3, #32
 8000c50:	6023      	str	r3, [r4, #0]
 8000c52:	2310      	movs	r3, #16
 8000c54:	e7b0      	b.n	8000bb8 <_printf_i+0xfc>
 8000c56:	6823      	ldr	r3, [r4, #0]
 8000c58:	f043 0320 	orr.w	r3, r3, #32
 8000c5c:	6023      	str	r3, [r4, #0]
 8000c5e:	2378      	movs	r3, #120	; 0x78
 8000c60:	4828      	ldr	r0, [pc, #160]	; (8000d04 <_printf_i+0x248>)
 8000c62:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000c66:	e7e3      	b.n	8000c30 <_printf_i+0x174>
 8000c68:	065e      	lsls	r6, r3, #25
 8000c6a:	bf48      	it	mi
 8000c6c:	b2ad      	uxthmi	r5, r5
 8000c6e:	e7e6      	b.n	8000c3e <_printf_i+0x182>
 8000c70:	4616      	mov	r6, r2
 8000c72:	e7bb      	b.n	8000bec <_printf_i+0x130>
 8000c74:	680b      	ldr	r3, [r1, #0]
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	6960      	ldr	r0, [r4, #20]
 8000c7a:	1d1d      	adds	r5, r3, #4
 8000c7c:	600d      	str	r5, [r1, #0]
 8000c7e:	0635      	lsls	r5, r6, #24
 8000c80:	681b      	ldr	r3, [r3, #0]
 8000c82:	d501      	bpl.n	8000c88 <_printf_i+0x1cc>
 8000c84:	6018      	str	r0, [r3, #0]
 8000c86:	e002      	b.n	8000c8e <_printf_i+0x1d2>
 8000c88:	0671      	lsls	r1, r6, #25
 8000c8a:	d5fb      	bpl.n	8000c84 <_printf_i+0x1c8>
 8000c8c:	8018      	strh	r0, [r3, #0]
 8000c8e:	2300      	movs	r3, #0
 8000c90:	6123      	str	r3, [r4, #16]
 8000c92:	4616      	mov	r6, r2
 8000c94:	e7ba      	b.n	8000c0c <_printf_i+0x150>
 8000c96:	680b      	ldr	r3, [r1, #0]
 8000c98:	1d1a      	adds	r2, r3, #4
 8000c9a:	600a      	str	r2, [r1, #0]
 8000c9c:	681e      	ldr	r6, [r3, #0]
 8000c9e:	6862      	ldr	r2, [r4, #4]
 8000ca0:	2100      	movs	r1, #0
 8000ca2:	4630      	mov	r0, r6
 8000ca4:	f7ff faa4 	bl	80001f0 <memchr>
 8000ca8:	b108      	cbz	r0, 8000cae <_printf_i+0x1f2>
 8000caa:	1b80      	subs	r0, r0, r6
 8000cac:	6060      	str	r0, [r4, #4]
 8000cae:	6863      	ldr	r3, [r4, #4]
 8000cb0:	6123      	str	r3, [r4, #16]
 8000cb2:	2300      	movs	r3, #0
 8000cb4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000cb8:	e7a8      	b.n	8000c0c <_printf_i+0x150>
 8000cba:	6923      	ldr	r3, [r4, #16]
 8000cbc:	4632      	mov	r2, r6
 8000cbe:	4649      	mov	r1, r9
 8000cc0:	4640      	mov	r0, r8
 8000cc2:	47d0      	blx	sl
 8000cc4:	3001      	adds	r0, #1
 8000cc6:	d0ab      	beq.n	8000c20 <_printf_i+0x164>
 8000cc8:	6823      	ldr	r3, [r4, #0]
 8000cca:	079b      	lsls	r3, r3, #30
 8000ccc:	d413      	bmi.n	8000cf6 <_printf_i+0x23a>
 8000cce:	68e0      	ldr	r0, [r4, #12]
 8000cd0:	9b03      	ldr	r3, [sp, #12]
 8000cd2:	4298      	cmp	r0, r3
 8000cd4:	bfb8      	it	lt
 8000cd6:	4618      	movlt	r0, r3
 8000cd8:	e7a4      	b.n	8000c24 <_printf_i+0x168>
 8000cda:	2301      	movs	r3, #1
 8000cdc:	4632      	mov	r2, r6
 8000cde:	4649      	mov	r1, r9
 8000ce0:	4640      	mov	r0, r8
 8000ce2:	47d0      	blx	sl
 8000ce4:	3001      	adds	r0, #1
 8000ce6:	d09b      	beq.n	8000c20 <_printf_i+0x164>
 8000ce8:	3501      	adds	r5, #1
 8000cea:	68e3      	ldr	r3, [r4, #12]
 8000cec:	9903      	ldr	r1, [sp, #12]
 8000cee:	1a5b      	subs	r3, r3, r1
 8000cf0:	42ab      	cmp	r3, r5
 8000cf2:	dcf2      	bgt.n	8000cda <_printf_i+0x21e>
 8000cf4:	e7eb      	b.n	8000cce <_printf_i+0x212>
 8000cf6:	2500      	movs	r5, #0
 8000cf8:	f104 0619 	add.w	r6, r4, #25
 8000cfc:	e7f5      	b.n	8000cea <_printf_i+0x22e>
 8000cfe:	bf00      	nop
 8000d00:	080018f9 	.word	0x080018f9
 8000d04:	0800190a 	.word	0x0800190a

08000d08 <_sbrk_r>:
 8000d08:	b538      	push	{r3, r4, r5, lr}
 8000d0a:	4d06      	ldr	r5, [pc, #24]	; (8000d24 <_sbrk_r+0x1c>)
 8000d0c:	2300      	movs	r3, #0
 8000d0e:	4604      	mov	r4, r0
 8000d10:	4608      	mov	r0, r1
 8000d12:	602b      	str	r3, [r5, #0]
 8000d14:	f7ff fb10 	bl	8000338 <_sbrk>
 8000d18:	1c43      	adds	r3, r0, #1
 8000d1a:	d102      	bne.n	8000d22 <_sbrk_r+0x1a>
 8000d1c:	682b      	ldr	r3, [r5, #0]
 8000d1e:	b103      	cbz	r3, 8000d22 <_sbrk_r+0x1a>
 8000d20:	6023      	str	r3, [r4, #0]
 8000d22:	bd38      	pop	{r3, r4, r5, pc}
 8000d24:	2000014c 	.word	0x2000014c

08000d28 <__sread>:
 8000d28:	b510      	push	{r4, lr}
 8000d2a:	460c      	mov	r4, r1
 8000d2c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d30:	f000 fab2 	bl	8001298 <_read_r>
 8000d34:	2800      	cmp	r0, #0
 8000d36:	bfab      	itete	ge
 8000d38:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000d3a:	89a3      	ldrhlt	r3, [r4, #12]
 8000d3c:	181b      	addge	r3, r3, r0
 8000d3e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000d42:	bfac      	ite	ge
 8000d44:	6563      	strge	r3, [r4, #84]	; 0x54
 8000d46:	81a3      	strhlt	r3, [r4, #12]
 8000d48:	bd10      	pop	{r4, pc}

08000d4a <__swrite>:
 8000d4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d4e:	461f      	mov	r7, r3
 8000d50:	898b      	ldrh	r3, [r1, #12]
 8000d52:	05db      	lsls	r3, r3, #23
 8000d54:	4605      	mov	r5, r0
 8000d56:	460c      	mov	r4, r1
 8000d58:	4616      	mov	r6, r2
 8000d5a:	d505      	bpl.n	8000d68 <__swrite+0x1e>
 8000d5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d60:	2302      	movs	r3, #2
 8000d62:	2200      	movs	r2, #0
 8000d64:	f000 f9c8 	bl	80010f8 <_lseek_r>
 8000d68:	89a3      	ldrh	r3, [r4, #12]
 8000d6a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d6e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000d72:	81a3      	strh	r3, [r4, #12]
 8000d74:	4632      	mov	r2, r6
 8000d76:	463b      	mov	r3, r7
 8000d78:	4628      	mov	r0, r5
 8000d7a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000d7e:	f000 b869 	b.w	8000e54 <_write_r>

08000d82 <__sseek>:
 8000d82:	b510      	push	{r4, lr}
 8000d84:	460c      	mov	r4, r1
 8000d86:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d8a:	f000 f9b5 	bl	80010f8 <_lseek_r>
 8000d8e:	1c43      	adds	r3, r0, #1
 8000d90:	89a3      	ldrh	r3, [r4, #12]
 8000d92:	bf15      	itete	ne
 8000d94:	6560      	strne	r0, [r4, #84]	; 0x54
 8000d96:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000d9a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000d9e:	81a3      	strheq	r3, [r4, #12]
 8000da0:	bf18      	it	ne
 8000da2:	81a3      	strhne	r3, [r4, #12]
 8000da4:	bd10      	pop	{r4, pc}

08000da6 <__sclose>:
 8000da6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000daa:	f000 b8d3 	b.w	8000f54 <_close_r>
	...

08000db0 <__swbuf_r>:
 8000db0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000db2:	460e      	mov	r6, r1
 8000db4:	4614      	mov	r4, r2
 8000db6:	4605      	mov	r5, r0
 8000db8:	b118      	cbz	r0, 8000dc2 <__swbuf_r+0x12>
 8000dba:	6983      	ldr	r3, [r0, #24]
 8000dbc:	b90b      	cbnz	r3, 8000dc2 <__swbuf_r+0x12>
 8000dbe:	f7ff fbbd 	bl	800053c <__sinit>
 8000dc2:	4b21      	ldr	r3, [pc, #132]	; (8000e48 <__swbuf_r+0x98>)
 8000dc4:	429c      	cmp	r4, r3
 8000dc6:	d12b      	bne.n	8000e20 <__swbuf_r+0x70>
 8000dc8:	686c      	ldr	r4, [r5, #4]
 8000dca:	69a3      	ldr	r3, [r4, #24]
 8000dcc:	60a3      	str	r3, [r4, #8]
 8000dce:	89a3      	ldrh	r3, [r4, #12]
 8000dd0:	071a      	lsls	r2, r3, #28
 8000dd2:	d52f      	bpl.n	8000e34 <__swbuf_r+0x84>
 8000dd4:	6923      	ldr	r3, [r4, #16]
 8000dd6:	b36b      	cbz	r3, 8000e34 <__swbuf_r+0x84>
 8000dd8:	6923      	ldr	r3, [r4, #16]
 8000dda:	6820      	ldr	r0, [r4, #0]
 8000ddc:	1ac0      	subs	r0, r0, r3
 8000dde:	6963      	ldr	r3, [r4, #20]
 8000de0:	b2f6      	uxtb	r6, r6
 8000de2:	4283      	cmp	r3, r0
 8000de4:	4637      	mov	r7, r6
 8000de6:	dc04      	bgt.n	8000df2 <__swbuf_r+0x42>
 8000de8:	4621      	mov	r1, r4
 8000dea:	4628      	mov	r0, r5
 8000dec:	f000 f948 	bl	8001080 <_fflush_r>
 8000df0:	bb30      	cbnz	r0, 8000e40 <__swbuf_r+0x90>
 8000df2:	68a3      	ldr	r3, [r4, #8]
 8000df4:	3b01      	subs	r3, #1
 8000df6:	60a3      	str	r3, [r4, #8]
 8000df8:	6823      	ldr	r3, [r4, #0]
 8000dfa:	1c5a      	adds	r2, r3, #1
 8000dfc:	6022      	str	r2, [r4, #0]
 8000dfe:	701e      	strb	r6, [r3, #0]
 8000e00:	6963      	ldr	r3, [r4, #20]
 8000e02:	3001      	adds	r0, #1
 8000e04:	4283      	cmp	r3, r0
 8000e06:	d004      	beq.n	8000e12 <__swbuf_r+0x62>
 8000e08:	89a3      	ldrh	r3, [r4, #12]
 8000e0a:	07db      	lsls	r3, r3, #31
 8000e0c:	d506      	bpl.n	8000e1c <__swbuf_r+0x6c>
 8000e0e:	2e0a      	cmp	r6, #10
 8000e10:	d104      	bne.n	8000e1c <__swbuf_r+0x6c>
 8000e12:	4621      	mov	r1, r4
 8000e14:	4628      	mov	r0, r5
 8000e16:	f000 f933 	bl	8001080 <_fflush_r>
 8000e1a:	b988      	cbnz	r0, 8000e40 <__swbuf_r+0x90>
 8000e1c:	4638      	mov	r0, r7
 8000e1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000e20:	4b0a      	ldr	r3, [pc, #40]	; (8000e4c <__swbuf_r+0x9c>)
 8000e22:	429c      	cmp	r4, r3
 8000e24:	d101      	bne.n	8000e2a <__swbuf_r+0x7a>
 8000e26:	68ac      	ldr	r4, [r5, #8]
 8000e28:	e7cf      	b.n	8000dca <__swbuf_r+0x1a>
 8000e2a:	4b09      	ldr	r3, [pc, #36]	; (8000e50 <__swbuf_r+0xa0>)
 8000e2c:	429c      	cmp	r4, r3
 8000e2e:	bf08      	it	eq
 8000e30:	68ec      	ldreq	r4, [r5, #12]
 8000e32:	e7ca      	b.n	8000dca <__swbuf_r+0x1a>
 8000e34:	4621      	mov	r1, r4
 8000e36:	4628      	mov	r0, r5
 8000e38:	f000 f81e 	bl	8000e78 <__swsetup_r>
 8000e3c:	2800      	cmp	r0, #0
 8000e3e:	d0cb      	beq.n	8000dd8 <__swbuf_r+0x28>
 8000e40:	f04f 37ff 	mov.w	r7, #4294967295
 8000e44:	e7ea      	b.n	8000e1c <__swbuf_r+0x6c>
 8000e46:	bf00      	nop
 8000e48:	080018a8 	.word	0x080018a8
 8000e4c:	080018c8 	.word	0x080018c8
 8000e50:	08001888 	.word	0x08001888

08000e54 <_write_r>:
 8000e54:	b538      	push	{r3, r4, r5, lr}
 8000e56:	4d07      	ldr	r5, [pc, #28]	; (8000e74 <_write_r+0x20>)
 8000e58:	4604      	mov	r4, r0
 8000e5a:	4608      	mov	r0, r1
 8000e5c:	4611      	mov	r1, r2
 8000e5e:	2200      	movs	r2, #0
 8000e60:	602a      	str	r2, [r5, #0]
 8000e62:	461a      	mov	r2, r3
 8000e64:	f000 fafc 	bl	8001460 <_write>
 8000e68:	1c43      	adds	r3, r0, #1
 8000e6a:	d102      	bne.n	8000e72 <_write_r+0x1e>
 8000e6c:	682b      	ldr	r3, [r5, #0]
 8000e6e:	b103      	cbz	r3, 8000e72 <_write_r+0x1e>
 8000e70:	6023      	str	r3, [r4, #0]
 8000e72:	bd38      	pop	{r3, r4, r5, pc}
 8000e74:	2000014c 	.word	0x2000014c

08000e78 <__swsetup_r>:
 8000e78:	4b32      	ldr	r3, [pc, #200]	; (8000f44 <__swsetup_r+0xcc>)
 8000e7a:	b570      	push	{r4, r5, r6, lr}
 8000e7c:	681d      	ldr	r5, [r3, #0]
 8000e7e:	4606      	mov	r6, r0
 8000e80:	460c      	mov	r4, r1
 8000e82:	b125      	cbz	r5, 8000e8e <__swsetup_r+0x16>
 8000e84:	69ab      	ldr	r3, [r5, #24]
 8000e86:	b913      	cbnz	r3, 8000e8e <__swsetup_r+0x16>
 8000e88:	4628      	mov	r0, r5
 8000e8a:	f7ff fb57 	bl	800053c <__sinit>
 8000e8e:	4b2e      	ldr	r3, [pc, #184]	; (8000f48 <__swsetup_r+0xd0>)
 8000e90:	429c      	cmp	r4, r3
 8000e92:	d10f      	bne.n	8000eb4 <__swsetup_r+0x3c>
 8000e94:	686c      	ldr	r4, [r5, #4]
 8000e96:	89a3      	ldrh	r3, [r4, #12]
 8000e98:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000e9c:	0719      	lsls	r1, r3, #28
 8000e9e:	d42c      	bmi.n	8000efa <__swsetup_r+0x82>
 8000ea0:	06dd      	lsls	r5, r3, #27
 8000ea2:	d411      	bmi.n	8000ec8 <__swsetup_r+0x50>
 8000ea4:	2309      	movs	r3, #9
 8000ea6:	6033      	str	r3, [r6, #0]
 8000ea8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000eac:	81a3      	strh	r3, [r4, #12]
 8000eae:	f04f 30ff 	mov.w	r0, #4294967295
 8000eb2:	e03e      	b.n	8000f32 <__swsetup_r+0xba>
 8000eb4:	4b25      	ldr	r3, [pc, #148]	; (8000f4c <__swsetup_r+0xd4>)
 8000eb6:	429c      	cmp	r4, r3
 8000eb8:	d101      	bne.n	8000ebe <__swsetup_r+0x46>
 8000eba:	68ac      	ldr	r4, [r5, #8]
 8000ebc:	e7eb      	b.n	8000e96 <__swsetup_r+0x1e>
 8000ebe:	4b24      	ldr	r3, [pc, #144]	; (8000f50 <__swsetup_r+0xd8>)
 8000ec0:	429c      	cmp	r4, r3
 8000ec2:	bf08      	it	eq
 8000ec4:	68ec      	ldreq	r4, [r5, #12]
 8000ec6:	e7e6      	b.n	8000e96 <__swsetup_r+0x1e>
 8000ec8:	0758      	lsls	r0, r3, #29
 8000eca:	d512      	bpl.n	8000ef2 <__swsetup_r+0x7a>
 8000ecc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000ece:	b141      	cbz	r1, 8000ee2 <__swsetup_r+0x6a>
 8000ed0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000ed4:	4299      	cmp	r1, r3
 8000ed6:	d002      	beq.n	8000ede <__swsetup_r+0x66>
 8000ed8:	4630      	mov	r0, r6
 8000eda:	f000 f98f 	bl	80011fc <_free_r>
 8000ede:	2300      	movs	r3, #0
 8000ee0:	6363      	str	r3, [r4, #52]	; 0x34
 8000ee2:	89a3      	ldrh	r3, [r4, #12]
 8000ee4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000ee8:	81a3      	strh	r3, [r4, #12]
 8000eea:	2300      	movs	r3, #0
 8000eec:	6063      	str	r3, [r4, #4]
 8000eee:	6923      	ldr	r3, [r4, #16]
 8000ef0:	6023      	str	r3, [r4, #0]
 8000ef2:	89a3      	ldrh	r3, [r4, #12]
 8000ef4:	f043 0308 	orr.w	r3, r3, #8
 8000ef8:	81a3      	strh	r3, [r4, #12]
 8000efa:	6923      	ldr	r3, [r4, #16]
 8000efc:	b94b      	cbnz	r3, 8000f12 <__swsetup_r+0x9a>
 8000efe:	89a3      	ldrh	r3, [r4, #12]
 8000f00:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000f04:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000f08:	d003      	beq.n	8000f12 <__swsetup_r+0x9a>
 8000f0a:	4621      	mov	r1, r4
 8000f0c:	4630      	mov	r0, r6
 8000f0e:	f000 f929 	bl	8001164 <__smakebuf_r>
 8000f12:	89a0      	ldrh	r0, [r4, #12]
 8000f14:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000f18:	f010 0301 	ands.w	r3, r0, #1
 8000f1c:	d00a      	beq.n	8000f34 <__swsetup_r+0xbc>
 8000f1e:	2300      	movs	r3, #0
 8000f20:	60a3      	str	r3, [r4, #8]
 8000f22:	6963      	ldr	r3, [r4, #20]
 8000f24:	425b      	negs	r3, r3
 8000f26:	61a3      	str	r3, [r4, #24]
 8000f28:	6923      	ldr	r3, [r4, #16]
 8000f2a:	b943      	cbnz	r3, 8000f3e <__swsetup_r+0xc6>
 8000f2c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000f30:	d1ba      	bne.n	8000ea8 <__swsetup_r+0x30>
 8000f32:	bd70      	pop	{r4, r5, r6, pc}
 8000f34:	0781      	lsls	r1, r0, #30
 8000f36:	bf58      	it	pl
 8000f38:	6963      	ldrpl	r3, [r4, #20]
 8000f3a:	60a3      	str	r3, [r4, #8]
 8000f3c:	e7f4      	b.n	8000f28 <__swsetup_r+0xb0>
 8000f3e:	2000      	movs	r0, #0
 8000f40:	e7f7      	b.n	8000f32 <__swsetup_r+0xba>
 8000f42:	bf00      	nop
 8000f44:	20000000 	.word	0x20000000
 8000f48:	080018a8 	.word	0x080018a8
 8000f4c:	080018c8 	.word	0x080018c8
 8000f50:	08001888 	.word	0x08001888

08000f54 <_close_r>:
 8000f54:	b538      	push	{r3, r4, r5, lr}
 8000f56:	4d06      	ldr	r5, [pc, #24]	; (8000f70 <_close_r+0x1c>)
 8000f58:	2300      	movs	r3, #0
 8000f5a:	4604      	mov	r4, r0
 8000f5c:	4608      	mov	r0, r1
 8000f5e:	602b      	str	r3, [r5, #0]
 8000f60:	f000 faac 	bl	80014bc <_close>
 8000f64:	1c43      	adds	r3, r0, #1
 8000f66:	d102      	bne.n	8000f6e <_close_r+0x1a>
 8000f68:	682b      	ldr	r3, [r5, #0]
 8000f6a:	b103      	cbz	r3, 8000f6e <_close_r+0x1a>
 8000f6c:	6023      	str	r3, [r4, #0]
 8000f6e:	bd38      	pop	{r3, r4, r5, pc}
 8000f70:	2000014c 	.word	0x2000014c

08000f74 <__sflush_r>:
 8000f74:	898a      	ldrh	r2, [r1, #12]
 8000f76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f7a:	4605      	mov	r5, r0
 8000f7c:	0710      	lsls	r0, r2, #28
 8000f7e:	460c      	mov	r4, r1
 8000f80:	d458      	bmi.n	8001034 <__sflush_r+0xc0>
 8000f82:	684b      	ldr	r3, [r1, #4]
 8000f84:	2b00      	cmp	r3, #0
 8000f86:	dc05      	bgt.n	8000f94 <__sflush_r+0x20>
 8000f88:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f8a:	2b00      	cmp	r3, #0
 8000f8c:	dc02      	bgt.n	8000f94 <__sflush_r+0x20>
 8000f8e:	2000      	movs	r0, #0
 8000f90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f94:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f96:	2e00      	cmp	r6, #0
 8000f98:	d0f9      	beq.n	8000f8e <__sflush_r+0x1a>
 8000f9a:	2300      	movs	r3, #0
 8000f9c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000fa0:	682f      	ldr	r7, [r5, #0]
 8000fa2:	602b      	str	r3, [r5, #0]
 8000fa4:	d032      	beq.n	800100c <__sflush_r+0x98>
 8000fa6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000fa8:	89a3      	ldrh	r3, [r4, #12]
 8000faa:	075a      	lsls	r2, r3, #29
 8000fac:	d505      	bpl.n	8000fba <__sflush_r+0x46>
 8000fae:	6863      	ldr	r3, [r4, #4]
 8000fb0:	1ac0      	subs	r0, r0, r3
 8000fb2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000fb4:	b10b      	cbz	r3, 8000fba <__sflush_r+0x46>
 8000fb6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000fb8:	1ac0      	subs	r0, r0, r3
 8000fba:	2300      	movs	r3, #0
 8000fbc:	4602      	mov	r2, r0
 8000fbe:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fc0:	6a21      	ldr	r1, [r4, #32]
 8000fc2:	4628      	mov	r0, r5
 8000fc4:	47b0      	blx	r6
 8000fc6:	1c43      	adds	r3, r0, #1
 8000fc8:	89a3      	ldrh	r3, [r4, #12]
 8000fca:	d106      	bne.n	8000fda <__sflush_r+0x66>
 8000fcc:	6829      	ldr	r1, [r5, #0]
 8000fce:	291d      	cmp	r1, #29
 8000fd0:	d82c      	bhi.n	800102c <__sflush_r+0xb8>
 8000fd2:	4a2a      	ldr	r2, [pc, #168]	; (800107c <__sflush_r+0x108>)
 8000fd4:	40ca      	lsrs	r2, r1
 8000fd6:	07d6      	lsls	r6, r2, #31
 8000fd8:	d528      	bpl.n	800102c <__sflush_r+0xb8>
 8000fda:	2200      	movs	r2, #0
 8000fdc:	6062      	str	r2, [r4, #4]
 8000fde:	04d9      	lsls	r1, r3, #19
 8000fe0:	6922      	ldr	r2, [r4, #16]
 8000fe2:	6022      	str	r2, [r4, #0]
 8000fe4:	d504      	bpl.n	8000ff0 <__sflush_r+0x7c>
 8000fe6:	1c42      	adds	r2, r0, #1
 8000fe8:	d101      	bne.n	8000fee <__sflush_r+0x7a>
 8000fea:	682b      	ldr	r3, [r5, #0]
 8000fec:	b903      	cbnz	r3, 8000ff0 <__sflush_r+0x7c>
 8000fee:	6560      	str	r0, [r4, #84]	; 0x54
 8000ff0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000ff2:	602f      	str	r7, [r5, #0]
 8000ff4:	2900      	cmp	r1, #0
 8000ff6:	d0ca      	beq.n	8000f8e <__sflush_r+0x1a>
 8000ff8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000ffc:	4299      	cmp	r1, r3
 8000ffe:	d002      	beq.n	8001006 <__sflush_r+0x92>
 8001000:	4628      	mov	r0, r5
 8001002:	f000 f8fb 	bl	80011fc <_free_r>
 8001006:	2000      	movs	r0, #0
 8001008:	6360      	str	r0, [r4, #52]	; 0x34
 800100a:	e7c1      	b.n	8000f90 <__sflush_r+0x1c>
 800100c:	6a21      	ldr	r1, [r4, #32]
 800100e:	2301      	movs	r3, #1
 8001010:	4628      	mov	r0, r5
 8001012:	47b0      	blx	r6
 8001014:	1c41      	adds	r1, r0, #1
 8001016:	d1c7      	bne.n	8000fa8 <__sflush_r+0x34>
 8001018:	682b      	ldr	r3, [r5, #0]
 800101a:	2b00      	cmp	r3, #0
 800101c:	d0c4      	beq.n	8000fa8 <__sflush_r+0x34>
 800101e:	2b1d      	cmp	r3, #29
 8001020:	d001      	beq.n	8001026 <__sflush_r+0xb2>
 8001022:	2b16      	cmp	r3, #22
 8001024:	d101      	bne.n	800102a <__sflush_r+0xb6>
 8001026:	602f      	str	r7, [r5, #0]
 8001028:	e7b1      	b.n	8000f8e <__sflush_r+0x1a>
 800102a:	89a3      	ldrh	r3, [r4, #12]
 800102c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001030:	81a3      	strh	r3, [r4, #12]
 8001032:	e7ad      	b.n	8000f90 <__sflush_r+0x1c>
 8001034:	690f      	ldr	r7, [r1, #16]
 8001036:	2f00      	cmp	r7, #0
 8001038:	d0a9      	beq.n	8000f8e <__sflush_r+0x1a>
 800103a:	0793      	lsls	r3, r2, #30
 800103c:	680e      	ldr	r6, [r1, #0]
 800103e:	bf08      	it	eq
 8001040:	694b      	ldreq	r3, [r1, #20]
 8001042:	600f      	str	r7, [r1, #0]
 8001044:	bf18      	it	ne
 8001046:	2300      	movne	r3, #0
 8001048:	eba6 0807 	sub.w	r8, r6, r7
 800104c:	608b      	str	r3, [r1, #8]
 800104e:	f1b8 0f00 	cmp.w	r8, #0
 8001052:	dd9c      	ble.n	8000f8e <__sflush_r+0x1a>
 8001054:	6a21      	ldr	r1, [r4, #32]
 8001056:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001058:	4643      	mov	r3, r8
 800105a:	463a      	mov	r2, r7
 800105c:	4628      	mov	r0, r5
 800105e:	47b0      	blx	r6
 8001060:	2800      	cmp	r0, #0
 8001062:	dc06      	bgt.n	8001072 <__sflush_r+0xfe>
 8001064:	89a3      	ldrh	r3, [r4, #12]
 8001066:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800106a:	81a3      	strh	r3, [r4, #12]
 800106c:	f04f 30ff 	mov.w	r0, #4294967295
 8001070:	e78e      	b.n	8000f90 <__sflush_r+0x1c>
 8001072:	4407      	add	r7, r0
 8001074:	eba8 0800 	sub.w	r8, r8, r0
 8001078:	e7e9      	b.n	800104e <__sflush_r+0xda>
 800107a:	bf00      	nop
 800107c:	20400001 	.word	0x20400001

08001080 <_fflush_r>:
 8001080:	b538      	push	{r3, r4, r5, lr}
 8001082:	690b      	ldr	r3, [r1, #16]
 8001084:	4605      	mov	r5, r0
 8001086:	460c      	mov	r4, r1
 8001088:	b913      	cbnz	r3, 8001090 <_fflush_r+0x10>
 800108a:	2500      	movs	r5, #0
 800108c:	4628      	mov	r0, r5
 800108e:	bd38      	pop	{r3, r4, r5, pc}
 8001090:	b118      	cbz	r0, 800109a <_fflush_r+0x1a>
 8001092:	6983      	ldr	r3, [r0, #24]
 8001094:	b90b      	cbnz	r3, 800109a <_fflush_r+0x1a>
 8001096:	f7ff fa51 	bl	800053c <__sinit>
 800109a:	4b14      	ldr	r3, [pc, #80]	; (80010ec <_fflush_r+0x6c>)
 800109c:	429c      	cmp	r4, r3
 800109e:	d11b      	bne.n	80010d8 <_fflush_r+0x58>
 80010a0:	686c      	ldr	r4, [r5, #4]
 80010a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010a6:	2b00      	cmp	r3, #0
 80010a8:	d0ef      	beq.n	800108a <_fflush_r+0xa>
 80010aa:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80010ac:	07d0      	lsls	r0, r2, #31
 80010ae:	d404      	bmi.n	80010ba <_fflush_r+0x3a>
 80010b0:	0599      	lsls	r1, r3, #22
 80010b2:	d402      	bmi.n	80010ba <_fflush_r+0x3a>
 80010b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010b6:	f7ff fadf 	bl	8000678 <__retarget_lock_acquire_recursive>
 80010ba:	4628      	mov	r0, r5
 80010bc:	4621      	mov	r1, r4
 80010be:	f7ff ff59 	bl	8000f74 <__sflush_r>
 80010c2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80010c4:	07da      	lsls	r2, r3, #31
 80010c6:	4605      	mov	r5, r0
 80010c8:	d4e0      	bmi.n	800108c <_fflush_r+0xc>
 80010ca:	89a3      	ldrh	r3, [r4, #12]
 80010cc:	059b      	lsls	r3, r3, #22
 80010ce:	d4dd      	bmi.n	800108c <_fflush_r+0xc>
 80010d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010d2:	f7ff fad2 	bl	800067a <__retarget_lock_release_recursive>
 80010d6:	e7d9      	b.n	800108c <_fflush_r+0xc>
 80010d8:	4b05      	ldr	r3, [pc, #20]	; (80010f0 <_fflush_r+0x70>)
 80010da:	429c      	cmp	r4, r3
 80010dc:	d101      	bne.n	80010e2 <_fflush_r+0x62>
 80010de:	68ac      	ldr	r4, [r5, #8]
 80010e0:	e7df      	b.n	80010a2 <_fflush_r+0x22>
 80010e2:	4b04      	ldr	r3, [pc, #16]	; (80010f4 <_fflush_r+0x74>)
 80010e4:	429c      	cmp	r4, r3
 80010e6:	bf08      	it	eq
 80010e8:	68ec      	ldreq	r4, [r5, #12]
 80010ea:	e7da      	b.n	80010a2 <_fflush_r+0x22>
 80010ec:	080018a8 	.word	0x080018a8
 80010f0:	080018c8 	.word	0x080018c8
 80010f4:	08001888 	.word	0x08001888

080010f8 <_lseek_r>:
 80010f8:	b538      	push	{r3, r4, r5, lr}
 80010fa:	4d07      	ldr	r5, [pc, #28]	; (8001118 <_lseek_r+0x20>)
 80010fc:	4604      	mov	r4, r0
 80010fe:	4608      	mov	r0, r1
 8001100:	4611      	mov	r1, r2
 8001102:	2200      	movs	r2, #0
 8001104:	602a      	str	r2, [r5, #0]
 8001106:	461a      	mov	r2, r3
 8001108:	f000 f998 	bl	800143c <_lseek>
 800110c:	1c43      	adds	r3, r0, #1
 800110e:	d102      	bne.n	8001116 <_lseek_r+0x1e>
 8001110:	682b      	ldr	r3, [r5, #0]
 8001112:	b103      	cbz	r3, 8001116 <_lseek_r+0x1e>
 8001114:	6023      	str	r3, [r4, #0]
 8001116:	bd38      	pop	{r3, r4, r5, pc}
 8001118:	2000014c 	.word	0x2000014c

0800111c <__swhatbuf_r>:
 800111c:	b570      	push	{r4, r5, r6, lr}
 800111e:	460e      	mov	r6, r1
 8001120:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001124:	2900      	cmp	r1, #0
 8001126:	b096      	sub	sp, #88	; 0x58
 8001128:	4614      	mov	r4, r2
 800112a:	461d      	mov	r5, r3
 800112c:	da07      	bge.n	800113e <__swhatbuf_r+0x22>
 800112e:	2300      	movs	r3, #0
 8001130:	602b      	str	r3, [r5, #0]
 8001132:	89b3      	ldrh	r3, [r6, #12]
 8001134:	061a      	lsls	r2, r3, #24
 8001136:	d410      	bmi.n	800115a <__swhatbuf_r+0x3e>
 8001138:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800113c:	e00e      	b.n	800115c <__swhatbuf_r+0x40>
 800113e:	466a      	mov	r2, sp
 8001140:	f000 f8bc 	bl	80012bc <_fstat_r>
 8001144:	2800      	cmp	r0, #0
 8001146:	dbf2      	blt.n	800112e <__swhatbuf_r+0x12>
 8001148:	9a01      	ldr	r2, [sp, #4]
 800114a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800114e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001152:	425a      	negs	r2, r3
 8001154:	415a      	adcs	r2, r3
 8001156:	602a      	str	r2, [r5, #0]
 8001158:	e7ee      	b.n	8001138 <__swhatbuf_r+0x1c>
 800115a:	2340      	movs	r3, #64	; 0x40
 800115c:	2000      	movs	r0, #0
 800115e:	6023      	str	r3, [r4, #0]
 8001160:	b016      	add	sp, #88	; 0x58
 8001162:	bd70      	pop	{r4, r5, r6, pc}

08001164 <__smakebuf_r>:
 8001164:	898b      	ldrh	r3, [r1, #12]
 8001166:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001168:	079d      	lsls	r5, r3, #30
 800116a:	4606      	mov	r6, r0
 800116c:	460c      	mov	r4, r1
 800116e:	d507      	bpl.n	8001180 <__smakebuf_r+0x1c>
 8001170:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001174:	6023      	str	r3, [r4, #0]
 8001176:	6123      	str	r3, [r4, #16]
 8001178:	2301      	movs	r3, #1
 800117a:	6163      	str	r3, [r4, #20]
 800117c:	b002      	add	sp, #8
 800117e:	bd70      	pop	{r4, r5, r6, pc}
 8001180:	ab01      	add	r3, sp, #4
 8001182:	466a      	mov	r2, sp
 8001184:	f7ff ffca 	bl	800111c <__swhatbuf_r>
 8001188:	9900      	ldr	r1, [sp, #0]
 800118a:	4605      	mov	r5, r0
 800118c:	4630      	mov	r0, r6
 800118e:	f7ff fa75 	bl	800067c <_malloc_r>
 8001192:	b948      	cbnz	r0, 80011a8 <__smakebuf_r+0x44>
 8001194:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001198:	059a      	lsls	r2, r3, #22
 800119a:	d4ef      	bmi.n	800117c <__smakebuf_r+0x18>
 800119c:	f023 0303 	bic.w	r3, r3, #3
 80011a0:	f043 0302 	orr.w	r3, r3, #2
 80011a4:	81a3      	strh	r3, [r4, #12]
 80011a6:	e7e3      	b.n	8001170 <__smakebuf_r+0xc>
 80011a8:	4b0d      	ldr	r3, [pc, #52]	; (80011e0 <__smakebuf_r+0x7c>)
 80011aa:	62b3      	str	r3, [r6, #40]	; 0x28
 80011ac:	89a3      	ldrh	r3, [r4, #12]
 80011ae:	6020      	str	r0, [r4, #0]
 80011b0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80011b4:	81a3      	strh	r3, [r4, #12]
 80011b6:	9b00      	ldr	r3, [sp, #0]
 80011b8:	6163      	str	r3, [r4, #20]
 80011ba:	9b01      	ldr	r3, [sp, #4]
 80011bc:	6120      	str	r0, [r4, #16]
 80011be:	b15b      	cbz	r3, 80011d8 <__smakebuf_r+0x74>
 80011c0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80011c4:	4630      	mov	r0, r6
 80011c6:	f000 f88b 	bl	80012e0 <_isatty_r>
 80011ca:	b128      	cbz	r0, 80011d8 <__smakebuf_r+0x74>
 80011cc:	89a3      	ldrh	r3, [r4, #12]
 80011ce:	f023 0303 	bic.w	r3, r3, #3
 80011d2:	f043 0301 	orr.w	r3, r3, #1
 80011d6:	81a3      	strh	r3, [r4, #12]
 80011d8:	89a0      	ldrh	r0, [r4, #12]
 80011da:	4305      	orrs	r5, r0
 80011dc:	81a5      	strh	r5, [r4, #12]
 80011de:	e7cd      	b.n	800117c <__smakebuf_r+0x18>
 80011e0:	080004d5 	.word	0x080004d5

080011e4 <__malloc_lock>:
 80011e4:	4801      	ldr	r0, [pc, #4]	; (80011ec <__malloc_lock+0x8>)
 80011e6:	f7ff ba47 	b.w	8000678 <__retarget_lock_acquire_recursive>
 80011ea:	bf00      	nop
 80011ec:	20000144 	.word	0x20000144

080011f0 <__malloc_unlock>:
 80011f0:	4801      	ldr	r0, [pc, #4]	; (80011f8 <__malloc_unlock+0x8>)
 80011f2:	f7ff ba42 	b.w	800067a <__retarget_lock_release_recursive>
 80011f6:	bf00      	nop
 80011f8:	20000144 	.word	0x20000144

080011fc <_free_r>:
 80011fc:	b538      	push	{r3, r4, r5, lr}
 80011fe:	4605      	mov	r5, r0
 8001200:	2900      	cmp	r1, #0
 8001202:	d045      	beq.n	8001290 <_free_r+0x94>
 8001204:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001208:	1f0c      	subs	r4, r1, #4
 800120a:	2b00      	cmp	r3, #0
 800120c:	bfb8      	it	lt
 800120e:	18e4      	addlt	r4, r4, r3
 8001210:	f7ff ffe8 	bl	80011e4 <__malloc_lock>
 8001214:	4a1f      	ldr	r2, [pc, #124]	; (8001294 <_free_r+0x98>)
 8001216:	6813      	ldr	r3, [r2, #0]
 8001218:	4610      	mov	r0, r2
 800121a:	b933      	cbnz	r3, 800122a <_free_r+0x2e>
 800121c:	6063      	str	r3, [r4, #4]
 800121e:	6014      	str	r4, [r2, #0]
 8001220:	4628      	mov	r0, r5
 8001222:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001226:	f7ff bfe3 	b.w	80011f0 <__malloc_unlock>
 800122a:	42a3      	cmp	r3, r4
 800122c:	d90b      	bls.n	8001246 <_free_r+0x4a>
 800122e:	6821      	ldr	r1, [r4, #0]
 8001230:	1862      	adds	r2, r4, r1
 8001232:	4293      	cmp	r3, r2
 8001234:	bf04      	itt	eq
 8001236:	681a      	ldreq	r2, [r3, #0]
 8001238:	685b      	ldreq	r3, [r3, #4]
 800123a:	6063      	str	r3, [r4, #4]
 800123c:	bf04      	itt	eq
 800123e:	1852      	addeq	r2, r2, r1
 8001240:	6022      	streq	r2, [r4, #0]
 8001242:	6004      	str	r4, [r0, #0]
 8001244:	e7ec      	b.n	8001220 <_free_r+0x24>
 8001246:	461a      	mov	r2, r3
 8001248:	685b      	ldr	r3, [r3, #4]
 800124a:	b10b      	cbz	r3, 8001250 <_free_r+0x54>
 800124c:	42a3      	cmp	r3, r4
 800124e:	d9fa      	bls.n	8001246 <_free_r+0x4a>
 8001250:	6811      	ldr	r1, [r2, #0]
 8001252:	1850      	adds	r0, r2, r1
 8001254:	42a0      	cmp	r0, r4
 8001256:	d10b      	bne.n	8001270 <_free_r+0x74>
 8001258:	6820      	ldr	r0, [r4, #0]
 800125a:	4401      	add	r1, r0
 800125c:	1850      	adds	r0, r2, r1
 800125e:	4283      	cmp	r3, r0
 8001260:	6011      	str	r1, [r2, #0]
 8001262:	d1dd      	bne.n	8001220 <_free_r+0x24>
 8001264:	6818      	ldr	r0, [r3, #0]
 8001266:	685b      	ldr	r3, [r3, #4]
 8001268:	6053      	str	r3, [r2, #4]
 800126a:	4401      	add	r1, r0
 800126c:	6011      	str	r1, [r2, #0]
 800126e:	e7d7      	b.n	8001220 <_free_r+0x24>
 8001270:	d902      	bls.n	8001278 <_free_r+0x7c>
 8001272:	230c      	movs	r3, #12
 8001274:	602b      	str	r3, [r5, #0]
 8001276:	e7d3      	b.n	8001220 <_free_r+0x24>
 8001278:	6820      	ldr	r0, [r4, #0]
 800127a:	1821      	adds	r1, r4, r0
 800127c:	428b      	cmp	r3, r1
 800127e:	bf04      	itt	eq
 8001280:	6819      	ldreq	r1, [r3, #0]
 8001282:	685b      	ldreq	r3, [r3, #4]
 8001284:	6063      	str	r3, [r4, #4]
 8001286:	bf04      	itt	eq
 8001288:	1809      	addeq	r1, r1, r0
 800128a:	6021      	streq	r1, [r4, #0]
 800128c:	6054      	str	r4, [r2, #4]
 800128e:	e7c7      	b.n	8001220 <_free_r+0x24>
 8001290:	bd38      	pop	{r3, r4, r5, pc}
 8001292:	bf00      	nop
 8001294:	2000008c 	.word	0x2000008c

08001298 <_read_r>:
 8001298:	b538      	push	{r3, r4, r5, lr}
 800129a:	4d07      	ldr	r5, [pc, #28]	; (80012b8 <_read_r+0x20>)
 800129c:	4604      	mov	r4, r0
 800129e:	4608      	mov	r0, r1
 80012a0:	4611      	mov	r1, r2
 80012a2:	2200      	movs	r2, #0
 80012a4:	602a      	str	r2, [r5, #0]
 80012a6:	461a      	mov	r2, r3
 80012a8:	f000 f872 	bl	8001390 <_read>
 80012ac:	1c43      	adds	r3, r0, #1
 80012ae:	d102      	bne.n	80012b6 <_read_r+0x1e>
 80012b0:	682b      	ldr	r3, [r5, #0]
 80012b2:	b103      	cbz	r3, 80012b6 <_read_r+0x1e>
 80012b4:	6023      	str	r3, [r4, #0]
 80012b6:	bd38      	pop	{r3, r4, r5, pc}
 80012b8:	2000014c 	.word	0x2000014c

080012bc <_fstat_r>:
 80012bc:	b538      	push	{r3, r4, r5, lr}
 80012be:	4d07      	ldr	r5, [pc, #28]	; (80012dc <_fstat_r+0x20>)
 80012c0:	2300      	movs	r3, #0
 80012c2:	4604      	mov	r4, r0
 80012c4:	4608      	mov	r0, r1
 80012c6:	4611      	mov	r1, r2
 80012c8:	602b      	str	r3, [r5, #0]
 80012ca:	f000 f93e 	bl	800154a <_fstat>
 80012ce:	1c43      	adds	r3, r0, #1
 80012d0:	d102      	bne.n	80012d8 <_fstat_r+0x1c>
 80012d2:	682b      	ldr	r3, [r5, #0]
 80012d4:	b103      	cbz	r3, 80012d8 <_fstat_r+0x1c>
 80012d6:	6023      	str	r3, [r4, #0]
 80012d8:	bd38      	pop	{r3, r4, r5, pc}
 80012da:	bf00      	nop
 80012dc:	2000014c 	.word	0x2000014c

080012e0 <_isatty_r>:
 80012e0:	b538      	push	{r3, r4, r5, lr}
 80012e2:	4d06      	ldr	r5, [pc, #24]	; (80012fc <_isatty_r+0x1c>)
 80012e4:	2300      	movs	r3, #0
 80012e6:	4604      	mov	r4, r0
 80012e8:	4608      	mov	r0, r1
 80012ea:	602b      	str	r3, [r5, #0]
 80012ec:	f000 fa92 	bl	8001814 <_isatty>
 80012f0:	1c43      	adds	r3, r0, #1
 80012f2:	d102      	bne.n	80012fa <_isatty_r+0x1a>
 80012f4:	682b      	ldr	r3, [r5, #0]
 80012f6:	b103      	cbz	r3, 80012fa <_isatty_r+0x1a>
 80012f8:	6023      	str	r3, [r4, #0]
 80012fa:	bd38      	pop	{r3, r4, r5, pc}
 80012fc:	2000014c 	.word	0x2000014c

08001300 <findslot>:
 8001300:	4b0a      	ldr	r3, [pc, #40]	; (800132c <findslot+0x2c>)
 8001302:	b510      	push	{r4, lr}
 8001304:	4604      	mov	r4, r0
 8001306:	6818      	ldr	r0, [r3, #0]
 8001308:	b118      	cbz	r0, 8001312 <findslot+0x12>
 800130a:	6983      	ldr	r3, [r0, #24]
 800130c:	b90b      	cbnz	r3, 8001312 <findslot+0x12>
 800130e:	f7ff f915 	bl	800053c <__sinit>
 8001312:	2c13      	cmp	r4, #19
 8001314:	d807      	bhi.n	8001326 <findslot+0x26>
 8001316:	4806      	ldr	r0, [pc, #24]	; (8001330 <findslot+0x30>)
 8001318:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 800131c:	3201      	adds	r2, #1
 800131e:	d002      	beq.n	8001326 <findslot+0x26>
 8001320:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8001324:	bd10      	pop	{r4, pc}
 8001326:	2000      	movs	r0, #0
 8001328:	e7fc      	b.n	8001324 <findslot+0x24>
 800132a:	bf00      	nop
 800132c:	20000000 	.word	0x20000000
 8001330:	200000a0 	.word	0x200000a0

08001334 <checkerror>:
 8001334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001336:	1c43      	adds	r3, r0, #1
 8001338:	4604      	mov	r4, r0
 800133a:	d109      	bne.n	8001350 <checkerror+0x1c>
 800133c:	f7ff f85c 	bl	80003f8 <__errno>
 8001340:	2613      	movs	r6, #19
 8001342:	4605      	mov	r5, r0
 8001344:	2700      	movs	r7, #0
 8001346:	4630      	mov	r0, r6
 8001348:	4639      	mov	r1, r7
 800134a:	beab      	bkpt	0x00ab
 800134c:	4606      	mov	r6, r0
 800134e:	602e      	str	r6, [r5, #0]
 8001350:	4620      	mov	r0, r4
 8001352:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001354 <error>:
 8001354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001356:	4604      	mov	r4, r0
 8001358:	f7ff f84e 	bl	80003f8 <__errno>
 800135c:	2613      	movs	r6, #19
 800135e:	4605      	mov	r5, r0
 8001360:	2700      	movs	r7, #0
 8001362:	4630      	mov	r0, r6
 8001364:	4639      	mov	r1, r7
 8001366:	beab      	bkpt	0x00ab
 8001368:	4606      	mov	r6, r0
 800136a:	602e      	str	r6, [r5, #0]
 800136c:	4620      	mov	r0, r4
 800136e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001370 <_swiread>:
 8001370:	b530      	push	{r4, r5, lr}
 8001372:	b085      	sub	sp, #20
 8001374:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001378:	9203      	str	r2, [sp, #12]
 800137a:	2406      	movs	r4, #6
 800137c:	ad01      	add	r5, sp, #4
 800137e:	4620      	mov	r0, r4
 8001380:	4629      	mov	r1, r5
 8001382:	beab      	bkpt	0x00ab
 8001384:	4604      	mov	r4, r0
 8001386:	4620      	mov	r0, r4
 8001388:	f7ff ffd4 	bl	8001334 <checkerror>
 800138c:	b005      	add	sp, #20
 800138e:	bd30      	pop	{r4, r5, pc}

08001390 <_read>:
 8001390:	b570      	push	{r4, r5, r6, lr}
 8001392:	460e      	mov	r6, r1
 8001394:	4615      	mov	r5, r2
 8001396:	f7ff ffb3 	bl	8001300 <findslot>
 800139a:	4604      	mov	r4, r0
 800139c:	b930      	cbnz	r0, 80013ac <_read+0x1c>
 800139e:	f7ff f82b 	bl	80003f8 <__errno>
 80013a2:	2309      	movs	r3, #9
 80013a4:	6003      	str	r3, [r0, #0]
 80013a6:	f04f 30ff 	mov.w	r0, #4294967295
 80013aa:	bd70      	pop	{r4, r5, r6, pc}
 80013ac:	6800      	ldr	r0, [r0, #0]
 80013ae:	462a      	mov	r2, r5
 80013b0:	4631      	mov	r1, r6
 80013b2:	f7ff ffdd 	bl	8001370 <_swiread>
 80013b6:	1c43      	adds	r3, r0, #1
 80013b8:	bf1f      	itttt	ne
 80013ba:	6863      	ldrne	r3, [r4, #4]
 80013bc:	1a28      	subne	r0, r5, r0
 80013be:	181b      	addne	r3, r3, r0
 80013c0:	6063      	strne	r3, [r4, #4]
 80013c2:	e7f2      	b.n	80013aa <_read+0x1a>

080013c4 <_swilseek>:
 80013c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80013c6:	460c      	mov	r4, r1
 80013c8:	4616      	mov	r6, r2
 80013ca:	f7ff ff99 	bl	8001300 <findslot>
 80013ce:	4605      	mov	r5, r0
 80013d0:	b940      	cbnz	r0, 80013e4 <_swilseek+0x20>
 80013d2:	f7ff f811 	bl	80003f8 <__errno>
 80013d6:	2309      	movs	r3, #9
 80013d8:	6003      	str	r3, [r0, #0]
 80013da:	f04f 34ff 	mov.w	r4, #4294967295
 80013de:	4620      	mov	r0, r4
 80013e0:	b003      	add	sp, #12
 80013e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013e4:	2e02      	cmp	r6, #2
 80013e6:	d903      	bls.n	80013f0 <_swilseek+0x2c>
 80013e8:	f7ff f806 	bl	80003f8 <__errno>
 80013ec:	2316      	movs	r3, #22
 80013ee:	e7f3      	b.n	80013d8 <_swilseek+0x14>
 80013f0:	2e01      	cmp	r6, #1
 80013f2:	d112      	bne.n	800141a <_swilseek+0x56>
 80013f4:	6843      	ldr	r3, [r0, #4]
 80013f6:	18e4      	adds	r4, r4, r3
 80013f8:	d4f6      	bmi.n	80013e8 <_swilseek+0x24>
 80013fa:	682b      	ldr	r3, [r5, #0]
 80013fc:	260a      	movs	r6, #10
 80013fe:	e9cd 3400 	strd	r3, r4, [sp]
 8001402:	466f      	mov	r7, sp
 8001404:	4630      	mov	r0, r6
 8001406:	4639      	mov	r1, r7
 8001408:	beab      	bkpt	0x00ab
 800140a:	4606      	mov	r6, r0
 800140c:	4630      	mov	r0, r6
 800140e:	f7ff ff91 	bl	8001334 <checkerror>
 8001412:	2800      	cmp	r0, #0
 8001414:	dbe1      	blt.n	80013da <_swilseek+0x16>
 8001416:	606c      	str	r4, [r5, #4]
 8001418:	e7e1      	b.n	80013de <_swilseek+0x1a>
 800141a:	2e02      	cmp	r6, #2
 800141c:	d1ed      	bne.n	80013fa <_swilseek+0x36>
 800141e:	6803      	ldr	r3, [r0, #0]
 8001420:	9300      	str	r3, [sp, #0]
 8001422:	260c      	movs	r6, #12
 8001424:	466f      	mov	r7, sp
 8001426:	4630      	mov	r0, r6
 8001428:	4639      	mov	r1, r7
 800142a:	beab      	bkpt	0x00ab
 800142c:	4606      	mov	r6, r0
 800142e:	4630      	mov	r0, r6
 8001430:	f7ff ff80 	bl	8001334 <checkerror>
 8001434:	1c43      	adds	r3, r0, #1
 8001436:	d0d0      	beq.n	80013da <_swilseek+0x16>
 8001438:	4404      	add	r4, r0
 800143a:	e7de      	b.n	80013fa <_swilseek+0x36>

0800143c <_lseek>:
 800143c:	f7ff bfc2 	b.w	80013c4 <_swilseek>

08001440 <_swiwrite>:
 8001440:	b530      	push	{r4, r5, lr}
 8001442:	b085      	sub	sp, #20
 8001444:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8001448:	9203      	str	r2, [sp, #12]
 800144a:	2405      	movs	r4, #5
 800144c:	ad01      	add	r5, sp, #4
 800144e:	4620      	mov	r0, r4
 8001450:	4629      	mov	r1, r5
 8001452:	beab      	bkpt	0x00ab
 8001454:	4604      	mov	r4, r0
 8001456:	4620      	mov	r0, r4
 8001458:	f7ff ff6c 	bl	8001334 <checkerror>
 800145c:	b005      	add	sp, #20
 800145e:	bd30      	pop	{r4, r5, pc}

08001460 <_write>:
 8001460:	b570      	push	{r4, r5, r6, lr}
 8001462:	460e      	mov	r6, r1
 8001464:	4615      	mov	r5, r2
 8001466:	f7ff ff4b 	bl	8001300 <findslot>
 800146a:	4604      	mov	r4, r0
 800146c:	b930      	cbnz	r0, 800147c <_write+0x1c>
 800146e:	f7fe ffc3 	bl	80003f8 <__errno>
 8001472:	2309      	movs	r3, #9
 8001474:	6003      	str	r3, [r0, #0]
 8001476:	f04f 30ff 	mov.w	r0, #4294967295
 800147a:	bd70      	pop	{r4, r5, r6, pc}
 800147c:	6800      	ldr	r0, [r0, #0]
 800147e:	462a      	mov	r2, r5
 8001480:	4631      	mov	r1, r6
 8001482:	f7ff ffdd 	bl	8001440 <_swiwrite>
 8001486:	1e03      	subs	r3, r0, #0
 8001488:	dbf5      	blt.n	8001476 <_write+0x16>
 800148a:	6862      	ldr	r2, [r4, #4]
 800148c:	1ae8      	subs	r0, r5, r3
 800148e:	4402      	add	r2, r0
 8001490:	42ab      	cmp	r3, r5
 8001492:	6062      	str	r2, [r4, #4]
 8001494:	d1f1      	bne.n	800147a <_write+0x1a>
 8001496:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800149a:	2000      	movs	r0, #0
 800149c:	f7ff bf5a 	b.w	8001354 <error>

080014a0 <_swiclose>:
 80014a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80014a2:	2402      	movs	r4, #2
 80014a4:	9001      	str	r0, [sp, #4]
 80014a6:	ad01      	add	r5, sp, #4
 80014a8:	4620      	mov	r0, r4
 80014aa:	4629      	mov	r1, r5
 80014ac:	beab      	bkpt	0x00ab
 80014ae:	4604      	mov	r4, r0
 80014b0:	4620      	mov	r0, r4
 80014b2:	f7ff ff3f 	bl	8001334 <checkerror>
 80014b6:	b003      	add	sp, #12
 80014b8:	bd30      	pop	{r4, r5, pc}
	...

080014bc <_close>:
 80014bc:	b538      	push	{r3, r4, r5, lr}
 80014be:	4605      	mov	r5, r0
 80014c0:	f7ff ff1e 	bl	8001300 <findslot>
 80014c4:	4604      	mov	r4, r0
 80014c6:	b930      	cbnz	r0, 80014d6 <_close+0x1a>
 80014c8:	f7fe ff96 	bl	80003f8 <__errno>
 80014cc:	2309      	movs	r3, #9
 80014ce:	6003      	str	r3, [r0, #0]
 80014d0:	f04f 30ff 	mov.w	r0, #4294967295
 80014d4:	bd38      	pop	{r3, r4, r5, pc}
 80014d6:	3d01      	subs	r5, #1
 80014d8:	2d01      	cmp	r5, #1
 80014da:	d809      	bhi.n	80014f0 <_close+0x34>
 80014dc:	4b09      	ldr	r3, [pc, #36]	; (8001504 <_close+0x48>)
 80014de:	689a      	ldr	r2, [r3, #8]
 80014e0:	691b      	ldr	r3, [r3, #16]
 80014e2:	429a      	cmp	r2, r3
 80014e4:	d104      	bne.n	80014f0 <_close+0x34>
 80014e6:	f04f 33ff 	mov.w	r3, #4294967295
 80014ea:	6003      	str	r3, [r0, #0]
 80014ec:	2000      	movs	r0, #0
 80014ee:	e7f1      	b.n	80014d4 <_close+0x18>
 80014f0:	6820      	ldr	r0, [r4, #0]
 80014f2:	f7ff ffd5 	bl	80014a0 <_swiclose>
 80014f6:	2800      	cmp	r0, #0
 80014f8:	d1ec      	bne.n	80014d4 <_close+0x18>
 80014fa:	f04f 33ff 	mov.w	r3, #4294967295
 80014fe:	6023      	str	r3, [r4, #0]
 8001500:	e7e8      	b.n	80014d4 <_close+0x18>
 8001502:	bf00      	nop
 8001504:	200000a0 	.word	0x200000a0

08001508 <_swistat>:
 8001508:	b570      	push	{r4, r5, r6, lr}
 800150a:	460c      	mov	r4, r1
 800150c:	f7ff fef8 	bl	8001300 <findslot>
 8001510:	4605      	mov	r5, r0
 8001512:	b930      	cbnz	r0, 8001522 <_swistat+0x1a>
 8001514:	f7fe ff70 	bl	80003f8 <__errno>
 8001518:	2309      	movs	r3, #9
 800151a:	6003      	str	r3, [r0, #0]
 800151c:	f04f 30ff 	mov.w	r0, #4294967295
 8001520:	bd70      	pop	{r4, r5, r6, pc}
 8001522:	6863      	ldr	r3, [r4, #4]
 8001524:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001528:	6063      	str	r3, [r4, #4]
 800152a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800152e:	64a3      	str	r3, [r4, #72]	; 0x48
 8001530:	260c      	movs	r6, #12
 8001532:	4630      	mov	r0, r6
 8001534:	4629      	mov	r1, r5
 8001536:	beab      	bkpt	0x00ab
 8001538:	4605      	mov	r5, r0
 800153a:	4628      	mov	r0, r5
 800153c:	f7ff fefa 	bl	8001334 <checkerror>
 8001540:	1c43      	adds	r3, r0, #1
 8001542:	bf1c      	itt	ne
 8001544:	6120      	strne	r0, [r4, #16]
 8001546:	2000      	movne	r0, #0
 8001548:	e7ea      	b.n	8001520 <_swistat+0x18>

0800154a <_fstat>:
 800154a:	460b      	mov	r3, r1
 800154c:	b510      	push	{r4, lr}
 800154e:	2100      	movs	r1, #0
 8001550:	4604      	mov	r4, r0
 8001552:	2258      	movs	r2, #88	; 0x58
 8001554:	4618      	mov	r0, r3
 8001556:	f7fe ff79 	bl	800044c <memset>
 800155a:	4601      	mov	r1, r0
 800155c:	4620      	mov	r0, r4
 800155e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001562:	f7ff bfd1 	b.w	8001508 <_swistat>

08001566 <_stat>:
 8001566:	b538      	push	{r3, r4, r5, lr}
 8001568:	460d      	mov	r5, r1
 800156a:	4604      	mov	r4, r0
 800156c:	2258      	movs	r2, #88	; 0x58
 800156e:	2100      	movs	r1, #0
 8001570:	4628      	mov	r0, r5
 8001572:	f7fe ff6b 	bl	800044c <memset>
 8001576:	4620      	mov	r0, r4
 8001578:	2100      	movs	r1, #0
 800157a:	f000 f811 	bl	80015a0 <_swiopen>
 800157e:	1c43      	adds	r3, r0, #1
 8001580:	4604      	mov	r4, r0
 8001582:	d00b      	beq.n	800159c <_stat+0x36>
 8001584:	686b      	ldr	r3, [r5, #4]
 8001586:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 800158a:	606b      	str	r3, [r5, #4]
 800158c:	4629      	mov	r1, r5
 800158e:	f7ff ffbb 	bl	8001508 <_swistat>
 8001592:	4605      	mov	r5, r0
 8001594:	4620      	mov	r0, r4
 8001596:	f7ff ff91 	bl	80014bc <_close>
 800159a:	462c      	mov	r4, r5
 800159c:	4620      	mov	r0, r4
 800159e:	bd38      	pop	{r3, r4, r5, pc}

080015a0 <_swiopen>:
 80015a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80015a4:	4b2a      	ldr	r3, [pc, #168]	; (8001650 <_swiopen+0xb0>)
 80015a6:	b097      	sub	sp, #92	; 0x5c
 80015a8:	4681      	mov	r9, r0
 80015aa:	460f      	mov	r7, r1
 80015ac:	2500      	movs	r5, #0
 80015ae:	461e      	mov	r6, r3
 80015b0:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 80015b4:	1c61      	adds	r1, r4, #1
 80015b6:	d037      	beq.n	8001628 <_swiopen+0x88>
 80015b8:	3501      	adds	r5, #1
 80015ba:	2d14      	cmp	r5, #20
 80015bc:	d1f8      	bne.n	80015b0 <_swiopen+0x10>
 80015be:	f7fe ff1b 	bl	80003f8 <__errno>
 80015c2:	2318      	movs	r3, #24
 80015c4:	6003      	str	r3, [r0, #0]
 80015c6:	f04f 34ff 	mov.w	r4, #4294967295
 80015ca:	e03d      	b.n	8001648 <_swiopen+0xa8>
 80015cc:	f3c7 4400 	ubfx	r4, r7, #16, #1
 80015d0:	f240 6301 	movw	r3, #1537	; 0x601
 80015d4:	07ba      	lsls	r2, r7, #30
 80015d6:	bf48      	it	mi
 80015d8:	f044 0402 	orrmi.w	r4, r4, #2
 80015dc:	421f      	tst	r7, r3
 80015de:	bf18      	it	ne
 80015e0:	f044 0404 	orrne.w	r4, r4, #4
 80015e4:	073b      	lsls	r3, r7, #28
 80015e6:	bf48      	it	mi
 80015e8:	f024 0404 	bicmi.w	r4, r4, #4
 80015ec:	4648      	mov	r0, r9
 80015ee:	bf48      	it	mi
 80015f0:	f044 0408 	orrmi.w	r4, r4, #8
 80015f4:	f8cd 9000 	str.w	r9, [sp]
 80015f8:	f7fe fe4a 	bl	8000290 <strlen>
 80015fc:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8001600:	2401      	movs	r4, #1
 8001602:	4620      	mov	r0, r4
 8001604:	4641      	mov	r1, r8
 8001606:	beab      	bkpt	0x00ab
 8001608:	4604      	mov	r4, r0
 800160a:	2c00      	cmp	r4, #0
 800160c:	db07      	blt.n	800161e <_swiopen+0x7e>
 800160e:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 8001612:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 8001616:	2300      	movs	r3, #0
 8001618:	6073      	str	r3, [r6, #4]
 800161a:	462c      	mov	r4, r5
 800161c:	e014      	b.n	8001648 <_swiopen+0xa8>
 800161e:	4620      	mov	r0, r4
 8001620:	f7ff fe98 	bl	8001354 <error>
 8001624:	4604      	mov	r4, r0
 8001626:	e00f      	b.n	8001648 <_swiopen+0xa8>
 8001628:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 800162c:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8001630:	46e8      	mov	r8, sp
 8001632:	d1cb      	bne.n	80015cc <_swiopen+0x2c>
 8001634:	4641      	mov	r1, r8
 8001636:	4648      	mov	r0, r9
 8001638:	f7ff ff95 	bl	8001566 <_stat>
 800163c:	3001      	adds	r0, #1
 800163e:	d0c5      	beq.n	80015cc <_swiopen+0x2c>
 8001640:	f7fe feda 	bl	80003f8 <__errno>
 8001644:	2311      	movs	r3, #17
 8001646:	6003      	str	r3, [r0, #0]
 8001648:	4620      	mov	r0, r4
 800164a:	b017      	add	sp, #92	; 0x5c
 800164c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001650:	200000a0 	.word	0x200000a0

08001654 <_get_semihosting_exts>:
 8001654:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001658:	4606      	mov	r6, r0
 800165a:	460f      	mov	r7, r1
 800165c:	482a      	ldr	r0, [pc, #168]	; (8001708 <_get_semihosting_exts+0xb4>)
 800165e:	2100      	movs	r1, #0
 8001660:	4615      	mov	r5, r2
 8001662:	f7ff ff9d 	bl	80015a0 <_swiopen>
 8001666:	462a      	mov	r2, r5
 8001668:	4604      	mov	r4, r0
 800166a:	2100      	movs	r1, #0
 800166c:	4630      	mov	r0, r6
 800166e:	f7fe feed 	bl	800044c <memset>
 8001672:	1c63      	adds	r3, r4, #1
 8001674:	d016      	beq.n	80016a4 <_get_semihosting_exts+0x50>
 8001676:	4620      	mov	r0, r4
 8001678:	f7ff fe42 	bl	8001300 <findslot>
 800167c:	f04f 080c 	mov.w	r8, #12
 8001680:	4681      	mov	r9, r0
 8001682:	4640      	mov	r0, r8
 8001684:	4649      	mov	r1, r9
 8001686:	beab      	bkpt	0x00ab
 8001688:	4680      	mov	r8, r0
 800168a:	4640      	mov	r0, r8
 800168c:	f7ff fe52 	bl	8001334 <checkerror>
 8001690:	2803      	cmp	r0, #3
 8001692:	dd02      	ble.n	800169a <_get_semihosting_exts+0x46>
 8001694:	1ec3      	subs	r3, r0, #3
 8001696:	42ab      	cmp	r3, r5
 8001698:	dc08      	bgt.n	80016ac <_get_semihosting_exts+0x58>
 800169a:	4620      	mov	r0, r4
 800169c:	f7ff ff0e 	bl	80014bc <_close>
 80016a0:	f04f 34ff 	mov.w	r4, #4294967295
 80016a4:	4620      	mov	r0, r4
 80016a6:	b003      	add	sp, #12
 80016a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80016ac:	2204      	movs	r2, #4
 80016ae:	eb0d 0102 	add.w	r1, sp, r2
 80016b2:	4620      	mov	r0, r4
 80016b4:	f7ff fe6c 	bl	8001390 <_read>
 80016b8:	2803      	cmp	r0, #3
 80016ba:	ddee      	ble.n	800169a <_get_semihosting_exts+0x46>
 80016bc:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80016c0:	2b53      	cmp	r3, #83	; 0x53
 80016c2:	d1ea      	bne.n	800169a <_get_semihosting_exts+0x46>
 80016c4:	f89d 3005 	ldrb.w	r3, [sp, #5]
 80016c8:	2b48      	cmp	r3, #72	; 0x48
 80016ca:	d1e6      	bne.n	800169a <_get_semihosting_exts+0x46>
 80016cc:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80016d0:	2b46      	cmp	r3, #70	; 0x46
 80016d2:	d1e2      	bne.n	800169a <_get_semihosting_exts+0x46>
 80016d4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80016d8:	2b42      	cmp	r3, #66	; 0x42
 80016da:	d1de      	bne.n	800169a <_get_semihosting_exts+0x46>
 80016dc:	2201      	movs	r2, #1
 80016de:	4639      	mov	r1, r7
 80016e0:	4620      	mov	r0, r4
 80016e2:	f7ff fe6f 	bl	80013c4 <_swilseek>
 80016e6:	2800      	cmp	r0, #0
 80016e8:	dbd7      	blt.n	800169a <_get_semihosting_exts+0x46>
 80016ea:	462a      	mov	r2, r5
 80016ec:	4631      	mov	r1, r6
 80016ee:	4620      	mov	r0, r4
 80016f0:	f7ff fe4e 	bl	8001390 <_read>
 80016f4:	4605      	mov	r5, r0
 80016f6:	4620      	mov	r0, r4
 80016f8:	f7ff fee0 	bl	80014bc <_close>
 80016fc:	4628      	mov	r0, r5
 80016fe:	f7ff fe19 	bl	8001334 <checkerror>
 8001702:	4604      	mov	r4, r0
 8001704:	e7ce      	b.n	80016a4 <_get_semihosting_exts+0x50>
 8001706:	bf00      	nop
 8001708:	0800191b 	.word	0x0800191b

0800170c <initialise_semihosting_exts>:
 800170c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800170e:	4d0a      	ldr	r5, [pc, #40]	; (8001738 <initialise_semihosting_exts+0x2c>)
 8001710:	4c0a      	ldr	r4, [pc, #40]	; (800173c <initialise_semihosting_exts+0x30>)
 8001712:	2100      	movs	r1, #0
 8001714:	2201      	movs	r2, #1
 8001716:	a801      	add	r0, sp, #4
 8001718:	6029      	str	r1, [r5, #0]
 800171a:	6022      	str	r2, [r4, #0]
 800171c:	f7ff ff9a 	bl	8001654 <_get_semihosting_exts>
 8001720:	2800      	cmp	r0, #0
 8001722:	dd07      	ble.n	8001734 <initialise_semihosting_exts+0x28>
 8001724:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001728:	f003 0201 	and.w	r2, r3, #1
 800172c:	f003 0302 	and.w	r3, r3, #2
 8001730:	602a      	str	r2, [r5, #0]
 8001732:	6023      	str	r3, [r4, #0]
 8001734:	b003      	add	sp, #12
 8001736:	bd30      	pop	{r4, r5, pc}
 8001738:	20000064 	.word	0x20000064
 800173c:	20000068 	.word	0x20000068

08001740 <_has_ext_stdout_stderr>:
 8001740:	b510      	push	{r4, lr}
 8001742:	4c04      	ldr	r4, [pc, #16]	; (8001754 <_has_ext_stdout_stderr+0x14>)
 8001744:	6822      	ldr	r2, [r4, #0]
 8001746:	2a00      	cmp	r2, #0
 8001748:	da01      	bge.n	800174e <_has_ext_stdout_stderr+0xe>
 800174a:	f7ff ffdf 	bl	800170c <initialise_semihosting_exts>
 800174e:	6820      	ldr	r0, [r4, #0]
 8001750:	bd10      	pop	{r4, pc}
 8001752:	bf00      	nop
 8001754:	20000068 	.word	0x20000068

08001758 <initialise_monitor_handles>:
 8001758:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800175c:	b085      	sub	sp, #20
 800175e:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8001810 <initialise_monitor_handles+0xb8>
 8001762:	f8cd 9004 	str.w	r9, [sp, #4]
 8001766:	2303      	movs	r3, #3
 8001768:	2400      	movs	r4, #0
 800176a:	9303      	str	r3, [sp, #12]
 800176c:	f10d 0804 	add.w	r8, sp, #4
 8001770:	9402      	str	r4, [sp, #8]
 8001772:	2501      	movs	r5, #1
 8001774:	4628      	mov	r0, r5
 8001776:	4641      	mov	r1, r8
 8001778:	beab      	bkpt	0x00ab
 800177a:	4605      	mov	r5, r0
 800177c:	4e20      	ldr	r6, [pc, #128]	; (8001800 <initialise_monitor_handles+0xa8>)
 800177e:	4a21      	ldr	r2, [pc, #132]	; (8001804 <initialise_monitor_handles+0xac>)
 8001780:	6035      	str	r5, [r6, #0]
 8001782:	4623      	mov	r3, r4
 8001784:	f04f 31ff 	mov.w	r1, #4294967295
 8001788:	4614      	mov	r4, r2
 800178a:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 800178e:	3301      	adds	r3, #1
 8001790:	2b14      	cmp	r3, #20
 8001792:	d1fa      	bne.n	800178a <initialise_monitor_handles+0x32>
 8001794:	f7ff ffd4 	bl	8001740 <_has_ext_stdout_stderr>
 8001798:	4d1b      	ldr	r5, [pc, #108]	; (8001808 <initialise_monitor_handles+0xb0>)
 800179a:	b1d0      	cbz	r0, 80017d2 <initialise_monitor_handles+0x7a>
 800179c:	f04f 0a03 	mov.w	sl, #3
 80017a0:	2304      	movs	r3, #4
 80017a2:	f8cd 9004 	str.w	r9, [sp, #4]
 80017a6:	2701      	movs	r7, #1
 80017a8:	f8cd a00c 	str.w	sl, [sp, #12]
 80017ac:	9302      	str	r3, [sp, #8]
 80017ae:	4638      	mov	r0, r7
 80017b0:	4641      	mov	r1, r8
 80017b2:	beab      	bkpt	0x00ab
 80017b4:	4683      	mov	fp, r0
 80017b6:	4b15      	ldr	r3, [pc, #84]	; (800180c <initialise_monitor_handles+0xb4>)
 80017b8:	f8cd 9004 	str.w	r9, [sp, #4]
 80017bc:	f8c3 b000 	str.w	fp, [r3]
 80017c0:	2308      	movs	r3, #8
 80017c2:	f8cd a00c 	str.w	sl, [sp, #12]
 80017c6:	9302      	str	r3, [sp, #8]
 80017c8:	4638      	mov	r0, r7
 80017ca:	4641      	mov	r1, r8
 80017cc:	beab      	bkpt	0x00ab
 80017ce:	4607      	mov	r7, r0
 80017d0:	602f      	str	r7, [r5, #0]
 80017d2:	682b      	ldr	r3, [r5, #0]
 80017d4:	3301      	adds	r3, #1
 80017d6:	bf02      	ittt	eq
 80017d8:	4b0c      	ldreq	r3, [pc, #48]	; (800180c <initialise_monitor_handles+0xb4>)
 80017da:	681b      	ldreq	r3, [r3, #0]
 80017dc:	602b      	streq	r3, [r5, #0]
 80017de:	6833      	ldr	r3, [r6, #0]
 80017e0:	6023      	str	r3, [r4, #0]
 80017e2:	2600      	movs	r6, #0
 80017e4:	6066      	str	r6, [r4, #4]
 80017e6:	f7ff ffab 	bl	8001740 <_has_ext_stdout_stderr>
 80017ea:	b130      	cbz	r0, 80017fa <initialise_monitor_handles+0xa2>
 80017ec:	4b07      	ldr	r3, [pc, #28]	; (800180c <initialise_monitor_handles+0xb4>)
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	e9c4 3602 	strd	r3, r6, [r4, #8]
 80017f4:	682b      	ldr	r3, [r5, #0]
 80017f6:	e9c4 3604 	strd	r3, r6, [r4, #16]
 80017fa:	b005      	add	sp, #20
 80017fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001800:	20000098 	.word	0x20000098
 8001804:	200000a0 	.word	0x200000a0
 8001808:	20000094 	.word	0x20000094
 800180c:	2000009c 	.word	0x2000009c
 8001810:	08001931 	.word	0x08001931

08001814 <_isatty>:
 8001814:	b570      	push	{r4, r5, r6, lr}
 8001816:	f7ff fd73 	bl	8001300 <findslot>
 800181a:	2509      	movs	r5, #9
 800181c:	4604      	mov	r4, r0
 800181e:	b920      	cbnz	r0, 800182a <_isatty+0x16>
 8001820:	f7fe fdea 	bl	80003f8 <__errno>
 8001824:	6005      	str	r5, [r0, #0]
 8001826:	4620      	mov	r0, r4
 8001828:	bd70      	pop	{r4, r5, r6, pc}
 800182a:	4628      	mov	r0, r5
 800182c:	4621      	mov	r1, r4
 800182e:	beab      	bkpt	0x00ab
 8001830:	4604      	mov	r4, r0
 8001832:	2c01      	cmp	r4, #1
 8001834:	d0f7      	beq.n	8001826 <_isatty+0x12>
 8001836:	f7fe fddf 	bl	80003f8 <__errno>
 800183a:	2400      	movs	r4, #0
 800183c:	4605      	mov	r5, r0
 800183e:	2613      	movs	r6, #19
 8001840:	4630      	mov	r0, r6
 8001842:	4621      	mov	r1, r4
 8001844:	beab      	bkpt	0x00ab
 8001846:	4606      	mov	r6, r0
 8001848:	602e      	str	r6, [r5, #0]
 800184a:	e7ec      	b.n	8001826 <_isatty+0x12>

0800184c <_init>:
 800184c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800184e:	bf00      	nop
 8001850:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001852:	bc08      	pop	{r3}
 8001854:	469e      	mov	lr, r3
 8001856:	4770      	bx	lr

08001858 <_fini>:
 8001858:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800185a:	bf00      	nop
 800185c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800185e:	bc08      	pop	{r3}
 8001860:	469e      	mov	lr, r3
 8001862:	4770      	bx	lr
