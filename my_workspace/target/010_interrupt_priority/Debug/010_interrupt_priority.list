
010_interrupt_priority.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001184  080001ac  080001ac  000101ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ac  08001330  08001330  00011330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080013dc  080013dc  00020078  2**0
                  CONTENTS
  4 .ARM          00000000  080013dc  080013dc  00020078  2**0
                  CONTENTS
  5 .preinit_array 00000000  080013dc  080013dc  00020078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080013dc  080013dc  000113dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080013e0  080013e0  000113e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000078  20000000  080013e4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000e4  20000078  0800145c  00020078  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000015c  0800145c  0002015c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00020078  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001468  00000000  00000000  000200a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003d0  00000000  00000000  0002150a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000080  00000000  00000000  000218e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000058  00000000  00000000  00021960  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000022b9  00000000  00000000  000219b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b71  00000000  00000000  00023c71  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008477  00000000  00000000  000247e2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0002cc59  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b30  00000000  00000000  0002ccac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	; (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000078 	.word	0x20000078
 80001c8:	00000000 	.word	0x00000000
 80001cc:	08001318 	.word	0x08001318

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	; (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	; (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	; (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	2000007c 	.word	0x2000007c
 80001e8:	08001318 	.word	0x08001318

080001ec <strlen>:
 80001ec:	4603      	mov	r3, r0
 80001ee:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f2:	2a00      	cmp	r2, #0
 80001f4:	d1fb      	bne.n	80001ee <strlen+0x2>
 80001f6:	1a18      	subs	r0, r3, r0
 80001f8:	3801      	subs	r0, #1
 80001fa:	4770      	bx	lr

080001fc <main>:
/* Global pointers */
uint32_t    *pNVIC_IPRBase  = (uint32_t*) (0xE000E400) ;                        // NVIC IPR Base Address
uint32_t    *pNVIC_ISERBase = (uint32_t*) (0xE000E100) ;                        // NVIC ISER Base Address
uint32_t    *pNVIC_ISPRBase = (uint32_t*) (0XE000E200) ;                        // NVIC ISPR Base Address

int main(void) {
 80001fc:	b580      	push	{r7, lr}
 80001fe:	af00      	add	r7, sp, #0
    initialise_monitor_handles() ;                                          	// Debugger
 8000200:	f001 f810 	bl	8001224 <initialise_monitor_handles>

    // 1. Let's configure the priority for the peripherals
    configure_priority_for_irqs(IRQNO_TIMER2, 0x80) ;
 8000204:	2180      	movs	r1, #128	; 0x80
 8000206:	201c      	movs	r0, #28
 8000208:	f000 f858 	bl	80002bc <configure_priority_for_irqs>
#if 0
    configure_priority_for_irqs(IRQNO_I2C1, 0x80) ;
#else 
    configure_priority_for_irqs(IRQNO_I2C1, 0x70) ;                             // Interrupt Nesting
 800020c:	2170      	movs	r1, #112	; 0x70
 800020e:	201f      	movs	r0, #31
 8000210:	f000 f854 	bl	80002bc <configure_priority_for_irqs>
#endif
    // 2. Set the interrupt pending bit in the NVIC PR
    *pNVIC_IPRBase  |= (1 << IRQNO_TIMER2) ;
 8000214:	4b18      	ldr	r3, [pc, #96]	; (8000278 <main+0x7c>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	681a      	ldr	r2, [r3, #0]
 800021a:	4b17      	ldr	r3, [pc, #92]	; (8000278 <main+0x7c>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000222:	601a      	str	r2, [r3, #0]
    *pNVIC_IPRBase  |= (1 << IRQNO_I2C1) ;
 8000224:	4b14      	ldr	r3, [pc, #80]	; (8000278 <main+0x7c>)
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	681a      	ldr	r2, [r3, #0]
 800022a:	4b13      	ldr	r3, [pc, #76]	; (8000278 <main+0x7c>)
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8000232:	601a      	str	r2, [r3, #0]

    // 3. Enable the IrQs in NVIC ISER
    *pNVIC_ISERBase |= (1 << IRQNO_I2C1) ;
 8000234:	4b11      	ldr	r3, [pc, #68]	; (800027c <main+0x80>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	681a      	ldr	r2, [r3, #0]
 800023a:	4b10      	ldr	r3, [pc, #64]	; (800027c <main+0x80>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8000242:	601a      	str	r2, [r3, #0]
    *pNVIC_ISERBase |= (1 << IRQNO_TIMER2) ;
 8000244:	4b0d      	ldr	r3, [pc, #52]	; (800027c <main+0x80>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	681a      	ldr	r2, [r3, #0]
 800024a:	4b0c      	ldr	r3, [pc, #48]	; (800027c <main+0x80>)
 800024c:	681b      	ldr	r3, [r3, #0]
 800024e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000252:	601a      	str	r2, [r3, #0]

    // 4. Set the interrupt pending bit in the NVIC PR
    *pNVIC_ISPRBase |= (1 << IRQNO_TIMER2) ;
 8000254:	4b0a      	ldr	r3, [pc, #40]	; (8000280 <main+0x84>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	681a      	ldr	r2, [r3, #0]
 800025a:	4b09      	ldr	r3, [pc, #36]	; (8000280 <main+0x84>)
 800025c:	681b      	ldr	r3, [r3, #0]
 800025e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000262:	601a      	str	r2, [r3, #0]
    *pNVIC_ISPRBase |= (1 << IRQNO_I2C1) ;
 8000264:	4b06      	ldr	r3, [pc, #24]	; (8000280 <main+0x84>)
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	681a      	ldr	r2, [r3, #0]
 800026a:	4b05      	ldr	r3, [pc, #20]	; (8000280 <main+0x84>)
 800026c:	681b      	ldr	r3, [r3, #0]
 800026e:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8000272:	601a      	str	r2, [r3, #0]

    while (1) ;
 8000274:	e7fe      	b.n	8000274 <main+0x78>
 8000276:	bf00      	nop
 8000278:	20000000 	.word	0x20000000
 800027c:	20000004 	.word	0x20000004
 8000280:	20000008 	.word	0x20000008

08000284 <TIM2_IRQHandler>:
}

/* ISRs */

void TIM2_IRQHandler(void) {
 8000284:	b580      	push	{r7, lr}
 8000286:	af00      	add	r7, sp, #0
    printf("[TIM2_IRQHandler]\n") ;
 8000288:	4805      	ldr	r0, [pc, #20]	; (80002a0 <TIM2_IRQHandler+0x1c>)
 800028a:	f000 f949 	bl	8000520 <puts>
    *pNVIC_IPRBase |= (1 << IRQNO_I2C1) ;
 800028e:	4b05      	ldr	r3, [pc, #20]	; (80002a4 <TIM2_IRQHandler+0x20>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	681a      	ldr	r2, [r3, #0]
 8000294:	4b03      	ldr	r3, [pc, #12]	; (80002a4 <TIM2_IRQHandler+0x20>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 800029c:	601a      	str	r2, [r3, #0]
    while (1) ;
 800029e:	e7fe      	b.n	800029e <TIM2_IRQHandler+0x1a>
 80002a0:	08001330 	.word	0x08001330
 80002a4:	20000000 	.word	0x20000000

080002a8 <I2C1_EV_IRQHandler>:
}

void I2C1_EV_IRQHandler(void) {
 80002a8:	b580      	push	{r7, lr}
 80002aa:	af00      	add	r7, sp, #0
    printf("[I2C1_EV_IRQHandler]\n") ;
 80002ac:	4802      	ldr	r0, [pc, #8]	; (80002b8 <I2C1_EV_IRQHandler+0x10>)
 80002ae:	f000 f937 	bl	8000520 <puts>
}
 80002b2:	bf00      	nop
 80002b4:	bd80      	pop	{r7, pc}
 80002b6:	bf00      	nop
 80002b8:	08001344 	.word	0x08001344

080002bc <configure_priority_for_irqs>:

void configure_priority_for_irqs(uint8_t irq_no, uint8_t priority_value) {
 80002bc:	b480      	push	{r7}
 80002be:	b087      	sub	sp, #28
 80002c0:	af00      	add	r7, sp, #0
 80002c2:	4603      	mov	r3, r0
 80002c4:	460a      	mov	r2, r1
 80002c6:	71fb      	strb	r3, [r7, #7]
 80002c8:	4613      	mov	r3, r2
 80002ca:	71bb      	strb	r3, [r7, #6]
    // 1. Find out IPRx and its address
    uint8_t     IPRx    = irq_no / 4 ;
 80002cc:	79fb      	ldrb	r3, [r7, #7]
 80002ce:	089b      	lsrs	r3, r3, #2
 80002d0:	75fb      	strb	r3, [r7, #23]
    uint32_t    *IPR    = pNVIC_IPRBase + IPRx ;
 80002d2:	4b12      	ldr	r3, [pc, #72]	; (800031c <configure_priority_for_irqs+0x60>)
 80002d4:	681a      	ldr	r2, [r3, #0]
 80002d6:	7dfb      	ldrb	r3, [r7, #23]
 80002d8:	009b      	lsls	r3, r3, #2
 80002da:	4413      	add	r3, r2
 80002dc:	613b      	str	r3, [r7, #16]

    // 2. Find position in IPRx
    uint8_t pos = (irq_no % 4) * 8 ;
 80002de:	79fb      	ldrb	r3, [r7, #7]
 80002e0:	f003 0303 	and.w	r3, r3, #3
 80002e4:	b2db      	uxtb	r3, r3
 80002e6:	00db      	lsls	r3, r3, #3
 80002e8:	73fb      	strb	r3, [r7, #15]

    // 3. Configure the priority
    *IPR &= ~(0xFF << pos) ;                                                    // Clear priority field
 80002ea:	693b      	ldr	r3, [r7, #16]
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	7bfa      	ldrb	r2, [r7, #15]
 80002f0:	21ff      	movs	r1, #255	; 0xff
 80002f2:	fa01 f202 	lsl.w	r2, r1, r2
 80002f6:	43d2      	mvns	r2, r2
 80002f8:	401a      	ands	r2, r3
 80002fa:	693b      	ldr	r3, [r7, #16]
 80002fc:	601a      	str	r2, [r3, #0]
    *IPR |= (priority_value << pos) ;                                           // Program
 80002fe:	693b      	ldr	r3, [r7, #16]
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	79b9      	ldrb	r1, [r7, #6]
 8000304:	7bfa      	ldrb	r2, [r7, #15]
 8000306:	fa01 f202 	lsl.w	r2, r1, r2
 800030a:	431a      	orrs	r2, r3
 800030c:	693b      	ldr	r3, [r7, #16]
 800030e:	601a      	str	r2, [r3, #0]
}
 8000310:	bf00      	nop
 8000312:	371c      	adds	r7, #28
 8000314:	46bd      	mov	sp, r7
 8000316:	bc80      	pop	{r7}
 8000318:	4770      	bx	lr
 800031a:	bf00      	nop
 800031c:	20000000 	.word	0x20000000

08000320 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000320:	b580      	push	{r7, lr}
 8000322:	b086      	sub	sp, #24
 8000324:	af00      	add	r7, sp, #0
 8000326:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000328:	4a14      	ldr	r2, [pc, #80]	; (800037c <_sbrk+0x5c>)
 800032a:	4b15      	ldr	r3, [pc, #84]	; (8000380 <_sbrk+0x60>)
 800032c:	1ad3      	subs	r3, r2, r3
 800032e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000330:	697b      	ldr	r3, [r7, #20]
 8000332:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000334:	4b13      	ldr	r3, [pc, #76]	; (8000384 <_sbrk+0x64>)
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	2b00      	cmp	r3, #0
 800033a:	d102      	bne.n	8000342 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800033c:	4b11      	ldr	r3, [pc, #68]	; (8000384 <_sbrk+0x64>)
 800033e:	4a12      	ldr	r2, [pc, #72]	; (8000388 <_sbrk+0x68>)
 8000340:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000342:	4b10      	ldr	r3, [pc, #64]	; (8000384 <_sbrk+0x64>)
 8000344:	681a      	ldr	r2, [r3, #0]
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	4413      	add	r3, r2
 800034a:	693a      	ldr	r2, [r7, #16]
 800034c:	429a      	cmp	r2, r3
 800034e:	d207      	bcs.n	8000360 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000350:	f000 f846 	bl	80003e0 <__errno>
 8000354:	4603      	mov	r3, r0
 8000356:	220c      	movs	r2, #12
 8000358:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800035a:	f04f 33ff 	mov.w	r3, #4294967295
 800035e:	e009      	b.n	8000374 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000360:	4b08      	ldr	r3, [pc, #32]	; (8000384 <_sbrk+0x64>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000366:	4b07      	ldr	r3, [pc, #28]	; (8000384 <_sbrk+0x64>)
 8000368:	681a      	ldr	r2, [r3, #0]
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	4413      	add	r3, r2
 800036e:	4a05      	ldr	r2, [pc, #20]	; (8000384 <_sbrk+0x64>)
 8000370:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000372:	68fb      	ldr	r3, [r7, #12]
}
 8000374:	4618      	mov	r0, r3
 8000376:	3718      	adds	r7, #24
 8000378:	46bd      	mov	sp, r7
 800037a:	bd80      	pop	{r7, pc}
 800037c:	20030000 	.word	0x20030000
 8000380:	00000400 	.word	0x00000400
 8000384:	20000094 	.word	0x20000094
 8000388:	20000160 	.word	0x20000160

0800038c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800038c:	480d      	ldr	r0, [pc, #52]	; (80003c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800038e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000390:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000394:	480c      	ldr	r0, [pc, #48]	; (80003c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000396:	490d      	ldr	r1, [pc, #52]	; (80003cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000398:	4a0d      	ldr	r2, [pc, #52]	; (80003d0 <LoopForever+0xe>)
  movs r3, #0
 800039a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800039c:	e002      	b.n	80003a4 <LoopCopyDataInit>

0800039e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800039e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003a2:	3304      	adds	r3, #4

080003a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003a8:	d3f9      	bcc.n	800039e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003aa:	4a0a      	ldr	r2, [pc, #40]	; (80003d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003ac:	4c0a      	ldr	r4, [pc, #40]	; (80003d8 <LoopForever+0x16>)
  movs r3, #0
 80003ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003b0:	e001      	b.n	80003b6 <LoopFillZerobss>

080003b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003b4:	3204      	adds	r2, #4

080003b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003b8:	d3fb      	bcc.n	80003b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003ba:	f000 f817 	bl	80003ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003be:	f7ff ff1d 	bl	80001fc <main>

080003c2 <LoopForever>:

LoopForever:
    b LoopForever
 80003c2:	e7fe      	b.n	80003c2 <LoopForever>
  ldr   r0, =_estack
 80003c4:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80003c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003cc:	20000078 	.word	0x20000078
  ldr r2, =_sidata
 80003d0:	080013e4 	.word	0x080013e4
  ldr r2, =_sbss
 80003d4:	20000078 	.word	0x20000078
  ldr r4, =_ebss
 80003d8:	2000015c 	.word	0x2000015c

080003dc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003dc:	e7fe      	b.n	80003dc <ADC_IRQHandler>
	...

080003e0 <__errno>:
 80003e0:	4b01      	ldr	r3, [pc, #4]	; (80003e8 <__errno+0x8>)
 80003e2:	6818      	ldr	r0, [r3, #0]
 80003e4:	4770      	bx	lr
 80003e6:	bf00      	nop
 80003e8:	2000000c 	.word	0x2000000c

080003ec <__libc_init_array>:
 80003ec:	b570      	push	{r4, r5, r6, lr}
 80003ee:	4d0d      	ldr	r5, [pc, #52]	; (8000424 <__libc_init_array+0x38>)
 80003f0:	4c0d      	ldr	r4, [pc, #52]	; (8000428 <__libc_init_array+0x3c>)
 80003f2:	1b64      	subs	r4, r4, r5
 80003f4:	10a4      	asrs	r4, r4, #2
 80003f6:	2600      	movs	r6, #0
 80003f8:	42a6      	cmp	r6, r4
 80003fa:	d109      	bne.n	8000410 <__libc_init_array+0x24>
 80003fc:	4d0b      	ldr	r5, [pc, #44]	; (800042c <__libc_init_array+0x40>)
 80003fe:	4c0c      	ldr	r4, [pc, #48]	; (8000430 <__libc_init_array+0x44>)
 8000400:	f000 ff8a 	bl	8001318 <_init>
 8000404:	1b64      	subs	r4, r4, r5
 8000406:	10a4      	asrs	r4, r4, #2
 8000408:	2600      	movs	r6, #0
 800040a:	42a6      	cmp	r6, r4
 800040c:	d105      	bne.n	800041a <__libc_init_array+0x2e>
 800040e:	bd70      	pop	{r4, r5, r6, pc}
 8000410:	f855 3b04 	ldr.w	r3, [r5], #4
 8000414:	4798      	blx	r3
 8000416:	3601      	adds	r6, #1
 8000418:	e7ee      	b.n	80003f8 <__libc_init_array+0xc>
 800041a:	f855 3b04 	ldr.w	r3, [r5], #4
 800041e:	4798      	blx	r3
 8000420:	3601      	adds	r6, #1
 8000422:	e7f2      	b.n	800040a <__libc_init_array+0x1e>
 8000424:	080013dc 	.word	0x080013dc
 8000428:	080013dc 	.word	0x080013dc
 800042c:	080013dc 	.word	0x080013dc
 8000430:	080013e0 	.word	0x080013e0

08000434 <memset>:
 8000434:	4402      	add	r2, r0
 8000436:	4603      	mov	r3, r0
 8000438:	4293      	cmp	r3, r2
 800043a:	d100      	bne.n	800043e <memset+0xa>
 800043c:	4770      	bx	lr
 800043e:	f803 1b01 	strb.w	r1, [r3], #1
 8000442:	e7f9      	b.n	8000438 <memset+0x4>

08000444 <_puts_r>:
 8000444:	b570      	push	{r4, r5, r6, lr}
 8000446:	460e      	mov	r6, r1
 8000448:	4605      	mov	r5, r0
 800044a:	b118      	cbz	r0, 8000454 <_puts_r+0x10>
 800044c:	6983      	ldr	r3, [r0, #24]
 800044e:	b90b      	cbnz	r3, 8000454 <_puts_r+0x10>
 8000450:	f000 fa48 	bl	80008e4 <__sinit>
 8000454:	69ab      	ldr	r3, [r5, #24]
 8000456:	68ac      	ldr	r4, [r5, #8]
 8000458:	b913      	cbnz	r3, 8000460 <_puts_r+0x1c>
 800045a:	4628      	mov	r0, r5
 800045c:	f000 fa42 	bl	80008e4 <__sinit>
 8000460:	4b2c      	ldr	r3, [pc, #176]	; (8000514 <_puts_r+0xd0>)
 8000462:	429c      	cmp	r4, r3
 8000464:	d120      	bne.n	80004a8 <_puts_r+0x64>
 8000466:	686c      	ldr	r4, [r5, #4]
 8000468:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800046a:	07db      	lsls	r3, r3, #31
 800046c:	d405      	bmi.n	800047a <_puts_r+0x36>
 800046e:	89a3      	ldrh	r3, [r4, #12]
 8000470:	0598      	lsls	r0, r3, #22
 8000472:	d402      	bmi.n	800047a <_puts_r+0x36>
 8000474:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000476:	f000 fad3 	bl	8000a20 <__retarget_lock_acquire_recursive>
 800047a:	89a3      	ldrh	r3, [r4, #12]
 800047c:	0719      	lsls	r1, r3, #28
 800047e:	d51d      	bpl.n	80004bc <_puts_r+0x78>
 8000480:	6923      	ldr	r3, [r4, #16]
 8000482:	b1db      	cbz	r3, 80004bc <_puts_r+0x78>
 8000484:	3e01      	subs	r6, #1
 8000486:	68a3      	ldr	r3, [r4, #8]
 8000488:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800048c:	3b01      	subs	r3, #1
 800048e:	60a3      	str	r3, [r4, #8]
 8000490:	bb39      	cbnz	r1, 80004e2 <_puts_r+0x9e>
 8000492:	2b00      	cmp	r3, #0
 8000494:	da38      	bge.n	8000508 <_puts_r+0xc4>
 8000496:	4622      	mov	r2, r4
 8000498:	210a      	movs	r1, #10
 800049a:	4628      	mov	r0, r5
 800049c:	f000 f848 	bl	8000530 <__swbuf_r>
 80004a0:	3001      	adds	r0, #1
 80004a2:	d011      	beq.n	80004c8 <_puts_r+0x84>
 80004a4:	250a      	movs	r5, #10
 80004a6:	e011      	b.n	80004cc <_puts_r+0x88>
 80004a8:	4b1b      	ldr	r3, [pc, #108]	; (8000518 <_puts_r+0xd4>)
 80004aa:	429c      	cmp	r4, r3
 80004ac:	d101      	bne.n	80004b2 <_puts_r+0x6e>
 80004ae:	68ac      	ldr	r4, [r5, #8]
 80004b0:	e7da      	b.n	8000468 <_puts_r+0x24>
 80004b2:	4b1a      	ldr	r3, [pc, #104]	; (800051c <_puts_r+0xd8>)
 80004b4:	429c      	cmp	r4, r3
 80004b6:	bf08      	it	eq
 80004b8:	68ec      	ldreq	r4, [r5, #12]
 80004ba:	e7d5      	b.n	8000468 <_puts_r+0x24>
 80004bc:	4621      	mov	r1, r4
 80004be:	4628      	mov	r0, r5
 80004c0:	f000 f888 	bl	80005d4 <__swsetup_r>
 80004c4:	2800      	cmp	r0, #0
 80004c6:	d0dd      	beq.n	8000484 <_puts_r+0x40>
 80004c8:	f04f 35ff 	mov.w	r5, #4294967295
 80004cc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80004ce:	07da      	lsls	r2, r3, #31
 80004d0:	d405      	bmi.n	80004de <_puts_r+0x9a>
 80004d2:	89a3      	ldrh	r3, [r4, #12]
 80004d4:	059b      	lsls	r3, r3, #22
 80004d6:	d402      	bmi.n	80004de <_puts_r+0x9a>
 80004d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80004da:	f000 faa2 	bl	8000a22 <__retarget_lock_release_recursive>
 80004de:	4628      	mov	r0, r5
 80004e0:	bd70      	pop	{r4, r5, r6, pc}
 80004e2:	2b00      	cmp	r3, #0
 80004e4:	da04      	bge.n	80004f0 <_puts_r+0xac>
 80004e6:	69a2      	ldr	r2, [r4, #24]
 80004e8:	429a      	cmp	r2, r3
 80004ea:	dc06      	bgt.n	80004fa <_puts_r+0xb6>
 80004ec:	290a      	cmp	r1, #10
 80004ee:	d004      	beq.n	80004fa <_puts_r+0xb6>
 80004f0:	6823      	ldr	r3, [r4, #0]
 80004f2:	1c5a      	adds	r2, r3, #1
 80004f4:	6022      	str	r2, [r4, #0]
 80004f6:	7019      	strb	r1, [r3, #0]
 80004f8:	e7c5      	b.n	8000486 <_puts_r+0x42>
 80004fa:	4622      	mov	r2, r4
 80004fc:	4628      	mov	r0, r5
 80004fe:	f000 f817 	bl	8000530 <__swbuf_r>
 8000502:	3001      	adds	r0, #1
 8000504:	d1bf      	bne.n	8000486 <_puts_r+0x42>
 8000506:	e7df      	b.n	80004c8 <_puts_r+0x84>
 8000508:	6823      	ldr	r3, [r4, #0]
 800050a:	250a      	movs	r5, #10
 800050c:	1c5a      	adds	r2, r3, #1
 800050e:	6022      	str	r2, [r4, #0]
 8000510:	701d      	strb	r5, [r3, #0]
 8000512:	e7db      	b.n	80004cc <_puts_r+0x88>
 8000514:	08001380 	.word	0x08001380
 8000518:	080013a0 	.word	0x080013a0
 800051c:	08001360 	.word	0x08001360

08000520 <puts>:
 8000520:	4b02      	ldr	r3, [pc, #8]	; (800052c <puts+0xc>)
 8000522:	4601      	mov	r1, r0
 8000524:	6818      	ldr	r0, [r3, #0]
 8000526:	f7ff bf8d 	b.w	8000444 <_puts_r>
 800052a:	bf00      	nop
 800052c:	2000000c 	.word	0x2000000c

08000530 <__swbuf_r>:
 8000530:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000532:	460e      	mov	r6, r1
 8000534:	4614      	mov	r4, r2
 8000536:	4605      	mov	r5, r0
 8000538:	b118      	cbz	r0, 8000542 <__swbuf_r+0x12>
 800053a:	6983      	ldr	r3, [r0, #24]
 800053c:	b90b      	cbnz	r3, 8000542 <__swbuf_r+0x12>
 800053e:	f000 f9d1 	bl	80008e4 <__sinit>
 8000542:	4b21      	ldr	r3, [pc, #132]	; (80005c8 <__swbuf_r+0x98>)
 8000544:	429c      	cmp	r4, r3
 8000546:	d12b      	bne.n	80005a0 <__swbuf_r+0x70>
 8000548:	686c      	ldr	r4, [r5, #4]
 800054a:	69a3      	ldr	r3, [r4, #24]
 800054c:	60a3      	str	r3, [r4, #8]
 800054e:	89a3      	ldrh	r3, [r4, #12]
 8000550:	071a      	lsls	r2, r3, #28
 8000552:	d52f      	bpl.n	80005b4 <__swbuf_r+0x84>
 8000554:	6923      	ldr	r3, [r4, #16]
 8000556:	b36b      	cbz	r3, 80005b4 <__swbuf_r+0x84>
 8000558:	6923      	ldr	r3, [r4, #16]
 800055a:	6820      	ldr	r0, [r4, #0]
 800055c:	1ac0      	subs	r0, r0, r3
 800055e:	6963      	ldr	r3, [r4, #20]
 8000560:	b2f6      	uxtb	r6, r6
 8000562:	4283      	cmp	r3, r0
 8000564:	4637      	mov	r7, r6
 8000566:	dc04      	bgt.n	8000572 <__swbuf_r+0x42>
 8000568:	4621      	mov	r1, r4
 800056a:	4628      	mov	r0, r5
 800056c:	f000 f926 	bl	80007bc <_fflush_r>
 8000570:	bb30      	cbnz	r0, 80005c0 <__swbuf_r+0x90>
 8000572:	68a3      	ldr	r3, [r4, #8]
 8000574:	3b01      	subs	r3, #1
 8000576:	60a3      	str	r3, [r4, #8]
 8000578:	6823      	ldr	r3, [r4, #0]
 800057a:	1c5a      	adds	r2, r3, #1
 800057c:	6022      	str	r2, [r4, #0]
 800057e:	701e      	strb	r6, [r3, #0]
 8000580:	6963      	ldr	r3, [r4, #20]
 8000582:	3001      	adds	r0, #1
 8000584:	4283      	cmp	r3, r0
 8000586:	d004      	beq.n	8000592 <__swbuf_r+0x62>
 8000588:	89a3      	ldrh	r3, [r4, #12]
 800058a:	07db      	lsls	r3, r3, #31
 800058c:	d506      	bpl.n	800059c <__swbuf_r+0x6c>
 800058e:	2e0a      	cmp	r6, #10
 8000590:	d104      	bne.n	800059c <__swbuf_r+0x6c>
 8000592:	4621      	mov	r1, r4
 8000594:	4628      	mov	r0, r5
 8000596:	f000 f911 	bl	80007bc <_fflush_r>
 800059a:	b988      	cbnz	r0, 80005c0 <__swbuf_r+0x90>
 800059c:	4638      	mov	r0, r7
 800059e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80005a0:	4b0a      	ldr	r3, [pc, #40]	; (80005cc <__swbuf_r+0x9c>)
 80005a2:	429c      	cmp	r4, r3
 80005a4:	d101      	bne.n	80005aa <__swbuf_r+0x7a>
 80005a6:	68ac      	ldr	r4, [r5, #8]
 80005a8:	e7cf      	b.n	800054a <__swbuf_r+0x1a>
 80005aa:	4b09      	ldr	r3, [pc, #36]	; (80005d0 <__swbuf_r+0xa0>)
 80005ac:	429c      	cmp	r4, r3
 80005ae:	bf08      	it	eq
 80005b0:	68ec      	ldreq	r4, [r5, #12]
 80005b2:	e7ca      	b.n	800054a <__swbuf_r+0x1a>
 80005b4:	4621      	mov	r1, r4
 80005b6:	4628      	mov	r0, r5
 80005b8:	f000 f80c 	bl	80005d4 <__swsetup_r>
 80005bc:	2800      	cmp	r0, #0
 80005be:	d0cb      	beq.n	8000558 <__swbuf_r+0x28>
 80005c0:	f04f 37ff 	mov.w	r7, #4294967295
 80005c4:	e7ea      	b.n	800059c <__swbuf_r+0x6c>
 80005c6:	bf00      	nop
 80005c8:	08001380 	.word	0x08001380
 80005cc:	080013a0 	.word	0x080013a0
 80005d0:	08001360 	.word	0x08001360

080005d4 <__swsetup_r>:
 80005d4:	4b32      	ldr	r3, [pc, #200]	; (80006a0 <__swsetup_r+0xcc>)
 80005d6:	b570      	push	{r4, r5, r6, lr}
 80005d8:	681d      	ldr	r5, [r3, #0]
 80005da:	4606      	mov	r6, r0
 80005dc:	460c      	mov	r4, r1
 80005de:	b125      	cbz	r5, 80005ea <__swsetup_r+0x16>
 80005e0:	69ab      	ldr	r3, [r5, #24]
 80005e2:	b913      	cbnz	r3, 80005ea <__swsetup_r+0x16>
 80005e4:	4628      	mov	r0, r5
 80005e6:	f000 f97d 	bl	80008e4 <__sinit>
 80005ea:	4b2e      	ldr	r3, [pc, #184]	; (80006a4 <__swsetup_r+0xd0>)
 80005ec:	429c      	cmp	r4, r3
 80005ee:	d10f      	bne.n	8000610 <__swsetup_r+0x3c>
 80005f0:	686c      	ldr	r4, [r5, #4]
 80005f2:	89a3      	ldrh	r3, [r4, #12]
 80005f4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80005f8:	0719      	lsls	r1, r3, #28
 80005fa:	d42c      	bmi.n	8000656 <__swsetup_r+0x82>
 80005fc:	06dd      	lsls	r5, r3, #27
 80005fe:	d411      	bmi.n	8000624 <__swsetup_r+0x50>
 8000600:	2309      	movs	r3, #9
 8000602:	6033      	str	r3, [r6, #0]
 8000604:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000608:	81a3      	strh	r3, [r4, #12]
 800060a:	f04f 30ff 	mov.w	r0, #4294967295
 800060e:	e03e      	b.n	800068e <__swsetup_r+0xba>
 8000610:	4b25      	ldr	r3, [pc, #148]	; (80006a8 <__swsetup_r+0xd4>)
 8000612:	429c      	cmp	r4, r3
 8000614:	d101      	bne.n	800061a <__swsetup_r+0x46>
 8000616:	68ac      	ldr	r4, [r5, #8]
 8000618:	e7eb      	b.n	80005f2 <__swsetup_r+0x1e>
 800061a:	4b24      	ldr	r3, [pc, #144]	; (80006ac <__swsetup_r+0xd8>)
 800061c:	429c      	cmp	r4, r3
 800061e:	bf08      	it	eq
 8000620:	68ec      	ldreq	r4, [r5, #12]
 8000622:	e7e6      	b.n	80005f2 <__swsetup_r+0x1e>
 8000624:	0758      	lsls	r0, r3, #29
 8000626:	d512      	bpl.n	800064e <__swsetup_r+0x7a>
 8000628:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800062a:	b141      	cbz	r1, 800063e <__swsetup_r+0x6a>
 800062c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000630:	4299      	cmp	r1, r3
 8000632:	d002      	beq.n	800063a <__swsetup_r+0x66>
 8000634:	4630      	mov	r0, r6
 8000636:	f000 fa59 	bl	8000aec <_free_r>
 800063a:	2300      	movs	r3, #0
 800063c:	6363      	str	r3, [r4, #52]	; 0x34
 800063e:	89a3      	ldrh	r3, [r4, #12]
 8000640:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000644:	81a3      	strh	r3, [r4, #12]
 8000646:	2300      	movs	r3, #0
 8000648:	6063      	str	r3, [r4, #4]
 800064a:	6923      	ldr	r3, [r4, #16]
 800064c:	6023      	str	r3, [r4, #0]
 800064e:	89a3      	ldrh	r3, [r4, #12]
 8000650:	f043 0308 	orr.w	r3, r3, #8
 8000654:	81a3      	strh	r3, [r4, #12]
 8000656:	6923      	ldr	r3, [r4, #16]
 8000658:	b94b      	cbnz	r3, 800066e <__swsetup_r+0x9a>
 800065a:	89a3      	ldrh	r3, [r4, #12]
 800065c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000660:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000664:	d003      	beq.n	800066e <__swsetup_r+0x9a>
 8000666:	4621      	mov	r1, r4
 8000668:	4630      	mov	r0, r6
 800066a:	f000 f9ff 	bl	8000a6c <__smakebuf_r>
 800066e:	89a0      	ldrh	r0, [r4, #12]
 8000670:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000674:	f010 0301 	ands.w	r3, r0, #1
 8000678:	d00a      	beq.n	8000690 <__swsetup_r+0xbc>
 800067a:	2300      	movs	r3, #0
 800067c:	60a3      	str	r3, [r4, #8]
 800067e:	6963      	ldr	r3, [r4, #20]
 8000680:	425b      	negs	r3, r3
 8000682:	61a3      	str	r3, [r4, #24]
 8000684:	6923      	ldr	r3, [r4, #16]
 8000686:	b943      	cbnz	r3, 800069a <__swsetup_r+0xc6>
 8000688:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800068c:	d1ba      	bne.n	8000604 <__swsetup_r+0x30>
 800068e:	bd70      	pop	{r4, r5, r6, pc}
 8000690:	0781      	lsls	r1, r0, #30
 8000692:	bf58      	it	pl
 8000694:	6963      	ldrpl	r3, [r4, #20]
 8000696:	60a3      	str	r3, [r4, #8]
 8000698:	e7f4      	b.n	8000684 <__swsetup_r+0xb0>
 800069a:	2000      	movs	r0, #0
 800069c:	e7f7      	b.n	800068e <__swsetup_r+0xba>
 800069e:	bf00      	nop
 80006a0:	2000000c 	.word	0x2000000c
 80006a4:	08001380 	.word	0x08001380
 80006a8:	080013a0 	.word	0x080013a0
 80006ac:	08001360 	.word	0x08001360

080006b0 <__sflush_r>:
 80006b0:	898a      	ldrh	r2, [r1, #12]
 80006b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006b6:	4605      	mov	r5, r0
 80006b8:	0710      	lsls	r0, r2, #28
 80006ba:	460c      	mov	r4, r1
 80006bc:	d458      	bmi.n	8000770 <__sflush_r+0xc0>
 80006be:	684b      	ldr	r3, [r1, #4]
 80006c0:	2b00      	cmp	r3, #0
 80006c2:	dc05      	bgt.n	80006d0 <__sflush_r+0x20>
 80006c4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80006c6:	2b00      	cmp	r3, #0
 80006c8:	dc02      	bgt.n	80006d0 <__sflush_r+0x20>
 80006ca:	2000      	movs	r0, #0
 80006cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80006d0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006d2:	2e00      	cmp	r6, #0
 80006d4:	d0f9      	beq.n	80006ca <__sflush_r+0x1a>
 80006d6:	2300      	movs	r3, #0
 80006d8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80006dc:	682f      	ldr	r7, [r5, #0]
 80006de:	602b      	str	r3, [r5, #0]
 80006e0:	d032      	beq.n	8000748 <__sflush_r+0x98>
 80006e2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80006e4:	89a3      	ldrh	r3, [r4, #12]
 80006e6:	075a      	lsls	r2, r3, #29
 80006e8:	d505      	bpl.n	80006f6 <__sflush_r+0x46>
 80006ea:	6863      	ldr	r3, [r4, #4]
 80006ec:	1ac0      	subs	r0, r0, r3
 80006ee:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80006f0:	b10b      	cbz	r3, 80006f6 <__sflush_r+0x46>
 80006f2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80006f4:	1ac0      	subs	r0, r0, r3
 80006f6:	2300      	movs	r3, #0
 80006f8:	4602      	mov	r2, r0
 80006fa:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80006fc:	6a21      	ldr	r1, [r4, #32]
 80006fe:	4628      	mov	r0, r5
 8000700:	47b0      	blx	r6
 8000702:	1c43      	adds	r3, r0, #1
 8000704:	89a3      	ldrh	r3, [r4, #12]
 8000706:	d106      	bne.n	8000716 <__sflush_r+0x66>
 8000708:	6829      	ldr	r1, [r5, #0]
 800070a:	291d      	cmp	r1, #29
 800070c:	d82c      	bhi.n	8000768 <__sflush_r+0xb8>
 800070e:	4a2a      	ldr	r2, [pc, #168]	; (80007b8 <__sflush_r+0x108>)
 8000710:	40ca      	lsrs	r2, r1
 8000712:	07d6      	lsls	r6, r2, #31
 8000714:	d528      	bpl.n	8000768 <__sflush_r+0xb8>
 8000716:	2200      	movs	r2, #0
 8000718:	6062      	str	r2, [r4, #4]
 800071a:	04d9      	lsls	r1, r3, #19
 800071c:	6922      	ldr	r2, [r4, #16]
 800071e:	6022      	str	r2, [r4, #0]
 8000720:	d504      	bpl.n	800072c <__sflush_r+0x7c>
 8000722:	1c42      	adds	r2, r0, #1
 8000724:	d101      	bne.n	800072a <__sflush_r+0x7a>
 8000726:	682b      	ldr	r3, [r5, #0]
 8000728:	b903      	cbnz	r3, 800072c <__sflush_r+0x7c>
 800072a:	6560      	str	r0, [r4, #84]	; 0x54
 800072c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800072e:	602f      	str	r7, [r5, #0]
 8000730:	2900      	cmp	r1, #0
 8000732:	d0ca      	beq.n	80006ca <__sflush_r+0x1a>
 8000734:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000738:	4299      	cmp	r1, r3
 800073a:	d002      	beq.n	8000742 <__sflush_r+0x92>
 800073c:	4628      	mov	r0, r5
 800073e:	f000 f9d5 	bl	8000aec <_free_r>
 8000742:	2000      	movs	r0, #0
 8000744:	6360      	str	r0, [r4, #52]	; 0x34
 8000746:	e7c1      	b.n	80006cc <__sflush_r+0x1c>
 8000748:	6a21      	ldr	r1, [r4, #32]
 800074a:	2301      	movs	r3, #1
 800074c:	4628      	mov	r0, r5
 800074e:	47b0      	blx	r6
 8000750:	1c41      	adds	r1, r0, #1
 8000752:	d1c7      	bne.n	80006e4 <__sflush_r+0x34>
 8000754:	682b      	ldr	r3, [r5, #0]
 8000756:	2b00      	cmp	r3, #0
 8000758:	d0c4      	beq.n	80006e4 <__sflush_r+0x34>
 800075a:	2b1d      	cmp	r3, #29
 800075c:	d001      	beq.n	8000762 <__sflush_r+0xb2>
 800075e:	2b16      	cmp	r3, #22
 8000760:	d101      	bne.n	8000766 <__sflush_r+0xb6>
 8000762:	602f      	str	r7, [r5, #0]
 8000764:	e7b1      	b.n	80006ca <__sflush_r+0x1a>
 8000766:	89a3      	ldrh	r3, [r4, #12]
 8000768:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800076c:	81a3      	strh	r3, [r4, #12]
 800076e:	e7ad      	b.n	80006cc <__sflush_r+0x1c>
 8000770:	690f      	ldr	r7, [r1, #16]
 8000772:	2f00      	cmp	r7, #0
 8000774:	d0a9      	beq.n	80006ca <__sflush_r+0x1a>
 8000776:	0793      	lsls	r3, r2, #30
 8000778:	680e      	ldr	r6, [r1, #0]
 800077a:	bf08      	it	eq
 800077c:	694b      	ldreq	r3, [r1, #20]
 800077e:	600f      	str	r7, [r1, #0]
 8000780:	bf18      	it	ne
 8000782:	2300      	movne	r3, #0
 8000784:	eba6 0807 	sub.w	r8, r6, r7
 8000788:	608b      	str	r3, [r1, #8]
 800078a:	f1b8 0f00 	cmp.w	r8, #0
 800078e:	dd9c      	ble.n	80006ca <__sflush_r+0x1a>
 8000790:	6a21      	ldr	r1, [r4, #32]
 8000792:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000794:	4643      	mov	r3, r8
 8000796:	463a      	mov	r2, r7
 8000798:	4628      	mov	r0, r5
 800079a:	47b0      	blx	r6
 800079c:	2800      	cmp	r0, #0
 800079e:	dc06      	bgt.n	80007ae <__sflush_r+0xfe>
 80007a0:	89a3      	ldrh	r3, [r4, #12]
 80007a2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007a6:	81a3      	strh	r3, [r4, #12]
 80007a8:	f04f 30ff 	mov.w	r0, #4294967295
 80007ac:	e78e      	b.n	80006cc <__sflush_r+0x1c>
 80007ae:	4407      	add	r7, r0
 80007b0:	eba8 0800 	sub.w	r8, r8, r0
 80007b4:	e7e9      	b.n	800078a <__sflush_r+0xda>
 80007b6:	bf00      	nop
 80007b8:	20400001 	.word	0x20400001

080007bc <_fflush_r>:
 80007bc:	b538      	push	{r3, r4, r5, lr}
 80007be:	690b      	ldr	r3, [r1, #16]
 80007c0:	4605      	mov	r5, r0
 80007c2:	460c      	mov	r4, r1
 80007c4:	b913      	cbnz	r3, 80007cc <_fflush_r+0x10>
 80007c6:	2500      	movs	r5, #0
 80007c8:	4628      	mov	r0, r5
 80007ca:	bd38      	pop	{r3, r4, r5, pc}
 80007cc:	b118      	cbz	r0, 80007d6 <_fflush_r+0x1a>
 80007ce:	6983      	ldr	r3, [r0, #24]
 80007d0:	b90b      	cbnz	r3, 80007d6 <_fflush_r+0x1a>
 80007d2:	f000 f887 	bl	80008e4 <__sinit>
 80007d6:	4b14      	ldr	r3, [pc, #80]	; (8000828 <_fflush_r+0x6c>)
 80007d8:	429c      	cmp	r4, r3
 80007da:	d11b      	bne.n	8000814 <_fflush_r+0x58>
 80007dc:	686c      	ldr	r4, [r5, #4]
 80007de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007e2:	2b00      	cmp	r3, #0
 80007e4:	d0ef      	beq.n	80007c6 <_fflush_r+0xa>
 80007e6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80007e8:	07d0      	lsls	r0, r2, #31
 80007ea:	d404      	bmi.n	80007f6 <_fflush_r+0x3a>
 80007ec:	0599      	lsls	r1, r3, #22
 80007ee:	d402      	bmi.n	80007f6 <_fflush_r+0x3a>
 80007f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80007f2:	f000 f915 	bl	8000a20 <__retarget_lock_acquire_recursive>
 80007f6:	4628      	mov	r0, r5
 80007f8:	4621      	mov	r1, r4
 80007fa:	f7ff ff59 	bl	80006b0 <__sflush_r>
 80007fe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000800:	07da      	lsls	r2, r3, #31
 8000802:	4605      	mov	r5, r0
 8000804:	d4e0      	bmi.n	80007c8 <_fflush_r+0xc>
 8000806:	89a3      	ldrh	r3, [r4, #12]
 8000808:	059b      	lsls	r3, r3, #22
 800080a:	d4dd      	bmi.n	80007c8 <_fflush_r+0xc>
 800080c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800080e:	f000 f908 	bl	8000a22 <__retarget_lock_release_recursive>
 8000812:	e7d9      	b.n	80007c8 <_fflush_r+0xc>
 8000814:	4b05      	ldr	r3, [pc, #20]	; (800082c <_fflush_r+0x70>)
 8000816:	429c      	cmp	r4, r3
 8000818:	d101      	bne.n	800081e <_fflush_r+0x62>
 800081a:	68ac      	ldr	r4, [r5, #8]
 800081c:	e7df      	b.n	80007de <_fflush_r+0x22>
 800081e:	4b04      	ldr	r3, [pc, #16]	; (8000830 <_fflush_r+0x74>)
 8000820:	429c      	cmp	r4, r3
 8000822:	bf08      	it	eq
 8000824:	68ec      	ldreq	r4, [r5, #12]
 8000826:	e7da      	b.n	80007de <_fflush_r+0x22>
 8000828:	08001380 	.word	0x08001380
 800082c:	080013a0 	.word	0x080013a0
 8000830:	08001360 	.word	0x08001360

08000834 <std>:
 8000834:	2300      	movs	r3, #0
 8000836:	b510      	push	{r4, lr}
 8000838:	4604      	mov	r4, r0
 800083a:	e9c0 3300 	strd	r3, r3, [r0]
 800083e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000842:	6083      	str	r3, [r0, #8]
 8000844:	8181      	strh	r1, [r0, #12]
 8000846:	6643      	str	r3, [r0, #100]	; 0x64
 8000848:	81c2      	strh	r2, [r0, #14]
 800084a:	6183      	str	r3, [r0, #24]
 800084c:	4619      	mov	r1, r3
 800084e:	2208      	movs	r2, #8
 8000850:	305c      	adds	r0, #92	; 0x5c
 8000852:	f7ff fdef 	bl	8000434 <memset>
 8000856:	4b05      	ldr	r3, [pc, #20]	; (800086c <std+0x38>)
 8000858:	6263      	str	r3, [r4, #36]	; 0x24
 800085a:	4b05      	ldr	r3, [pc, #20]	; (8000870 <std+0x3c>)
 800085c:	62a3      	str	r3, [r4, #40]	; 0x28
 800085e:	4b05      	ldr	r3, [pc, #20]	; (8000874 <std+0x40>)
 8000860:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000862:	4b05      	ldr	r3, [pc, #20]	; (8000878 <std+0x44>)
 8000864:	6224      	str	r4, [r4, #32]
 8000866:	6323      	str	r3, [r4, #48]	; 0x30
 8000868:	bd10      	pop	{r4, pc}
 800086a:	bf00      	nop
 800086c:	08000c5d 	.word	0x08000c5d
 8000870:	08000c7f 	.word	0x08000c7f
 8000874:	08000cb7 	.word	0x08000cb7
 8000878:	08000cdb 	.word	0x08000cdb

0800087c <_cleanup_r>:
 800087c:	4901      	ldr	r1, [pc, #4]	; (8000884 <_cleanup_r+0x8>)
 800087e:	f000 b8af 	b.w	80009e0 <_fwalk_reent>
 8000882:	bf00      	nop
 8000884:	080007bd 	.word	0x080007bd

08000888 <__sfmoreglue>:
 8000888:	b570      	push	{r4, r5, r6, lr}
 800088a:	1e4a      	subs	r2, r1, #1
 800088c:	2568      	movs	r5, #104	; 0x68
 800088e:	4355      	muls	r5, r2
 8000890:	460e      	mov	r6, r1
 8000892:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000896:	f000 f977 	bl	8000b88 <_malloc_r>
 800089a:	4604      	mov	r4, r0
 800089c:	b140      	cbz	r0, 80008b0 <__sfmoreglue+0x28>
 800089e:	2100      	movs	r1, #0
 80008a0:	e9c0 1600 	strd	r1, r6, [r0]
 80008a4:	300c      	adds	r0, #12
 80008a6:	60a0      	str	r0, [r4, #8]
 80008a8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008ac:	f7ff fdc2 	bl	8000434 <memset>
 80008b0:	4620      	mov	r0, r4
 80008b2:	bd70      	pop	{r4, r5, r6, pc}

080008b4 <__sfp_lock_acquire>:
 80008b4:	4801      	ldr	r0, [pc, #4]	; (80008bc <__sfp_lock_acquire+0x8>)
 80008b6:	f000 b8b3 	b.w	8000a20 <__retarget_lock_acquire_recursive>
 80008ba:	bf00      	nop
 80008bc:	20000154 	.word	0x20000154

080008c0 <__sfp_lock_release>:
 80008c0:	4801      	ldr	r0, [pc, #4]	; (80008c8 <__sfp_lock_release+0x8>)
 80008c2:	f000 b8ae 	b.w	8000a22 <__retarget_lock_release_recursive>
 80008c6:	bf00      	nop
 80008c8:	20000154 	.word	0x20000154

080008cc <__sinit_lock_acquire>:
 80008cc:	4801      	ldr	r0, [pc, #4]	; (80008d4 <__sinit_lock_acquire+0x8>)
 80008ce:	f000 b8a7 	b.w	8000a20 <__retarget_lock_acquire_recursive>
 80008d2:	bf00      	nop
 80008d4:	2000014f 	.word	0x2000014f

080008d8 <__sinit_lock_release>:
 80008d8:	4801      	ldr	r0, [pc, #4]	; (80008e0 <__sinit_lock_release+0x8>)
 80008da:	f000 b8a2 	b.w	8000a22 <__retarget_lock_release_recursive>
 80008de:	bf00      	nop
 80008e0:	2000014f 	.word	0x2000014f

080008e4 <__sinit>:
 80008e4:	b510      	push	{r4, lr}
 80008e6:	4604      	mov	r4, r0
 80008e8:	f7ff fff0 	bl	80008cc <__sinit_lock_acquire>
 80008ec:	69a3      	ldr	r3, [r4, #24]
 80008ee:	b11b      	cbz	r3, 80008f8 <__sinit+0x14>
 80008f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008f4:	f7ff bff0 	b.w	80008d8 <__sinit_lock_release>
 80008f8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80008fc:	6523      	str	r3, [r4, #80]	; 0x50
 80008fe:	4b13      	ldr	r3, [pc, #76]	; (800094c <__sinit+0x68>)
 8000900:	4a13      	ldr	r2, [pc, #76]	; (8000950 <__sinit+0x6c>)
 8000902:	681b      	ldr	r3, [r3, #0]
 8000904:	62a2      	str	r2, [r4, #40]	; 0x28
 8000906:	42a3      	cmp	r3, r4
 8000908:	bf04      	itt	eq
 800090a:	2301      	moveq	r3, #1
 800090c:	61a3      	streq	r3, [r4, #24]
 800090e:	4620      	mov	r0, r4
 8000910:	f000 f820 	bl	8000954 <__sfp>
 8000914:	6060      	str	r0, [r4, #4]
 8000916:	4620      	mov	r0, r4
 8000918:	f000 f81c 	bl	8000954 <__sfp>
 800091c:	60a0      	str	r0, [r4, #8]
 800091e:	4620      	mov	r0, r4
 8000920:	f000 f818 	bl	8000954 <__sfp>
 8000924:	2200      	movs	r2, #0
 8000926:	60e0      	str	r0, [r4, #12]
 8000928:	2104      	movs	r1, #4
 800092a:	6860      	ldr	r0, [r4, #4]
 800092c:	f7ff ff82 	bl	8000834 <std>
 8000930:	68a0      	ldr	r0, [r4, #8]
 8000932:	2201      	movs	r2, #1
 8000934:	2109      	movs	r1, #9
 8000936:	f7ff ff7d 	bl	8000834 <std>
 800093a:	68e0      	ldr	r0, [r4, #12]
 800093c:	2202      	movs	r2, #2
 800093e:	2112      	movs	r1, #18
 8000940:	f7ff ff78 	bl	8000834 <std>
 8000944:	2301      	movs	r3, #1
 8000946:	61a3      	str	r3, [r4, #24]
 8000948:	e7d2      	b.n	80008f0 <__sinit+0xc>
 800094a:	bf00      	nop
 800094c:	0800135c 	.word	0x0800135c
 8000950:	0800087d 	.word	0x0800087d

08000954 <__sfp>:
 8000954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000956:	4607      	mov	r7, r0
 8000958:	f7ff ffac 	bl	80008b4 <__sfp_lock_acquire>
 800095c:	4b1e      	ldr	r3, [pc, #120]	; (80009d8 <__sfp+0x84>)
 800095e:	681e      	ldr	r6, [r3, #0]
 8000960:	69b3      	ldr	r3, [r6, #24]
 8000962:	b913      	cbnz	r3, 800096a <__sfp+0x16>
 8000964:	4630      	mov	r0, r6
 8000966:	f7ff ffbd 	bl	80008e4 <__sinit>
 800096a:	3648      	adds	r6, #72	; 0x48
 800096c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000970:	3b01      	subs	r3, #1
 8000972:	d503      	bpl.n	800097c <__sfp+0x28>
 8000974:	6833      	ldr	r3, [r6, #0]
 8000976:	b30b      	cbz	r3, 80009bc <__sfp+0x68>
 8000978:	6836      	ldr	r6, [r6, #0]
 800097a:	e7f7      	b.n	800096c <__sfp+0x18>
 800097c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000980:	b9d5      	cbnz	r5, 80009b8 <__sfp+0x64>
 8000982:	4b16      	ldr	r3, [pc, #88]	; (80009dc <__sfp+0x88>)
 8000984:	60e3      	str	r3, [r4, #12]
 8000986:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800098a:	6665      	str	r5, [r4, #100]	; 0x64
 800098c:	f000 f847 	bl	8000a1e <__retarget_lock_init_recursive>
 8000990:	f7ff ff96 	bl	80008c0 <__sfp_lock_release>
 8000994:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000998:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800099c:	6025      	str	r5, [r4, #0]
 800099e:	61a5      	str	r5, [r4, #24]
 80009a0:	2208      	movs	r2, #8
 80009a2:	4629      	mov	r1, r5
 80009a4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80009a8:	f7ff fd44 	bl	8000434 <memset>
 80009ac:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009b0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009b4:	4620      	mov	r0, r4
 80009b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009b8:	3468      	adds	r4, #104	; 0x68
 80009ba:	e7d9      	b.n	8000970 <__sfp+0x1c>
 80009bc:	2104      	movs	r1, #4
 80009be:	4638      	mov	r0, r7
 80009c0:	f7ff ff62 	bl	8000888 <__sfmoreglue>
 80009c4:	4604      	mov	r4, r0
 80009c6:	6030      	str	r0, [r6, #0]
 80009c8:	2800      	cmp	r0, #0
 80009ca:	d1d5      	bne.n	8000978 <__sfp+0x24>
 80009cc:	f7ff ff78 	bl	80008c0 <__sfp_lock_release>
 80009d0:	230c      	movs	r3, #12
 80009d2:	603b      	str	r3, [r7, #0]
 80009d4:	e7ee      	b.n	80009b4 <__sfp+0x60>
 80009d6:	bf00      	nop
 80009d8:	0800135c 	.word	0x0800135c
 80009dc:	ffff0001 	.word	0xffff0001

080009e0 <_fwalk_reent>:
 80009e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009e4:	4606      	mov	r6, r0
 80009e6:	4688      	mov	r8, r1
 80009e8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80009ec:	2700      	movs	r7, #0
 80009ee:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80009f2:	f1b9 0901 	subs.w	r9, r9, #1
 80009f6:	d505      	bpl.n	8000a04 <_fwalk_reent+0x24>
 80009f8:	6824      	ldr	r4, [r4, #0]
 80009fa:	2c00      	cmp	r4, #0
 80009fc:	d1f7      	bne.n	80009ee <_fwalk_reent+0xe>
 80009fe:	4638      	mov	r0, r7
 8000a00:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a04:	89ab      	ldrh	r3, [r5, #12]
 8000a06:	2b01      	cmp	r3, #1
 8000a08:	d907      	bls.n	8000a1a <_fwalk_reent+0x3a>
 8000a0a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a0e:	3301      	adds	r3, #1
 8000a10:	d003      	beq.n	8000a1a <_fwalk_reent+0x3a>
 8000a12:	4629      	mov	r1, r5
 8000a14:	4630      	mov	r0, r6
 8000a16:	47c0      	blx	r8
 8000a18:	4307      	orrs	r7, r0
 8000a1a:	3568      	adds	r5, #104	; 0x68
 8000a1c:	e7e9      	b.n	80009f2 <_fwalk_reent+0x12>

08000a1e <__retarget_lock_init_recursive>:
 8000a1e:	4770      	bx	lr

08000a20 <__retarget_lock_acquire_recursive>:
 8000a20:	4770      	bx	lr

08000a22 <__retarget_lock_release_recursive>:
 8000a22:	4770      	bx	lr

08000a24 <__swhatbuf_r>:
 8000a24:	b570      	push	{r4, r5, r6, lr}
 8000a26:	460e      	mov	r6, r1
 8000a28:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a2c:	2900      	cmp	r1, #0
 8000a2e:	b096      	sub	sp, #88	; 0x58
 8000a30:	4614      	mov	r4, r2
 8000a32:	461d      	mov	r5, r3
 8000a34:	da07      	bge.n	8000a46 <__swhatbuf_r+0x22>
 8000a36:	2300      	movs	r3, #0
 8000a38:	602b      	str	r3, [r5, #0]
 8000a3a:	89b3      	ldrh	r3, [r6, #12]
 8000a3c:	061a      	lsls	r2, r3, #24
 8000a3e:	d410      	bmi.n	8000a62 <__swhatbuf_r+0x3e>
 8000a40:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a44:	e00e      	b.n	8000a64 <__swhatbuf_r+0x40>
 8000a46:	466a      	mov	r2, sp
 8000a48:	f000 f96e 	bl	8000d28 <_fstat_r>
 8000a4c:	2800      	cmp	r0, #0
 8000a4e:	dbf2      	blt.n	8000a36 <__swhatbuf_r+0x12>
 8000a50:	9a01      	ldr	r2, [sp, #4]
 8000a52:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a56:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a5a:	425a      	negs	r2, r3
 8000a5c:	415a      	adcs	r2, r3
 8000a5e:	602a      	str	r2, [r5, #0]
 8000a60:	e7ee      	b.n	8000a40 <__swhatbuf_r+0x1c>
 8000a62:	2340      	movs	r3, #64	; 0x40
 8000a64:	2000      	movs	r0, #0
 8000a66:	6023      	str	r3, [r4, #0]
 8000a68:	b016      	add	sp, #88	; 0x58
 8000a6a:	bd70      	pop	{r4, r5, r6, pc}

08000a6c <__smakebuf_r>:
 8000a6c:	898b      	ldrh	r3, [r1, #12]
 8000a6e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000a70:	079d      	lsls	r5, r3, #30
 8000a72:	4606      	mov	r6, r0
 8000a74:	460c      	mov	r4, r1
 8000a76:	d507      	bpl.n	8000a88 <__smakebuf_r+0x1c>
 8000a78:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000a7c:	6023      	str	r3, [r4, #0]
 8000a7e:	6123      	str	r3, [r4, #16]
 8000a80:	2301      	movs	r3, #1
 8000a82:	6163      	str	r3, [r4, #20]
 8000a84:	b002      	add	sp, #8
 8000a86:	bd70      	pop	{r4, r5, r6, pc}
 8000a88:	ab01      	add	r3, sp, #4
 8000a8a:	466a      	mov	r2, sp
 8000a8c:	f7ff ffca 	bl	8000a24 <__swhatbuf_r>
 8000a90:	9900      	ldr	r1, [sp, #0]
 8000a92:	4605      	mov	r5, r0
 8000a94:	4630      	mov	r0, r6
 8000a96:	f000 f877 	bl	8000b88 <_malloc_r>
 8000a9a:	b948      	cbnz	r0, 8000ab0 <__smakebuf_r+0x44>
 8000a9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000aa0:	059a      	lsls	r2, r3, #22
 8000aa2:	d4ef      	bmi.n	8000a84 <__smakebuf_r+0x18>
 8000aa4:	f023 0303 	bic.w	r3, r3, #3
 8000aa8:	f043 0302 	orr.w	r3, r3, #2
 8000aac:	81a3      	strh	r3, [r4, #12]
 8000aae:	e7e3      	b.n	8000a78 <__smakebuf_r+0xc>
 8000ab0:	4b0d      	ldr	r3, [pc, #52]	; (8000ae8 <__smakebuf_r+0x7c>)
 8000ab2:	62b3      	str	r3, [r6, #40]	; 0x28
 8000ab4:	89a3      	ldrh	r3, [r4, #12]
 8000ab6:	6020      	str	r0, [r4, #0]
 8000ab8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000abc:	81a3      	strh	r3, [r4, #12]
 8000abe:	9b00      	ldr	r3, [sp, #0]
 8000ac0:	6163      	str	r3, [r4, #20]
 8000ac2:	9b01      	ldr	r3, [sp, #4]
 8000ac4:	6120      	str	r0, [r4, #16]
 8000ac6:	b15b      	cbz	r3, 8000ae0 <__smakebuf_r+0x74>
 8000ac8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000acc:	4630      	mov	r0, r6
 8000ace:	f000 f93d 	bl	8000d4c <_isatty_r>
 8000ad2:	b128      	cbz	r0, 8000ae0 <__smakebuf_r+0x74>
 8000ad4:	89a3      	ldrh	r3, [r4, #12]
 8000ad6:	f023 0303 	bic.w	r3, r3, #3
 8000ada:	f043 0301 	orr.w	r3, r3, #1
 8000ade:	81a3      	strh	r3, [r4, #12]
 8000ae0:	89a0      	ldrh	r0, [r4, #12]
 8000ae2:	4305      	orrs	r5, r0
 8000ae4:	81a5      	strh	r5, [r4, #12]
 8000ae6:	e7cd      	b.n	8000a84 <__smakebuf_r+0x18>
 8000ae8:	0800087d 	.word	0x0800087d

08000aec <_free_r>:
 8000aec:	b538      	push	{r3, r4, r5, lr}
 8000aee:	4605      	mov	r5, r0
 8000af0:	2900      	cmp	r1, #0
 8000af2:	d045      	beq.n	8000b80 <_free_r+0x94>
 8000af4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000af8:	1f0c      	subs	r4, r1, #4
 8000afa:	2b00      	cmp	r3, #0
 8000afc:	bfb8      	it	lt
 8000afe:	18e4      	addlt	r4, r4, r3
 8000b00:	f000 f946 	bl	8000d90 <__malloc_lock>
 8000b04:	4a1f      	ldr	r2, [pc, #124]	; (8000b84 <_free_r+0x98>)
 8000b06:	6813      	ldr	r3, [r2, #0]
 8000b08:	4610      	mov	r0, r2
 8000b0a:	b933      	cbnz	r3, 8000b1a <_free_r+0x2e>
 8000b0c:	6063      	str	r3, [r4, #4]
 8000b0e:	6014      	str	r4, [r2, #0]
 8000b10:	4628      	mov	r0, r5
 8000b12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b16:	f000 b941 	b.w	8000d9c <__malloc_unlock>
 8000b1a:	42a3      	cmp	r3, r4
 8000b1c:	d90b      	bls.n	8000b36 <_free_r+0x4a>
 8000b1e:	6821      	ldr	r1, [r4, #0]
 8000b20:	1862      	adds	r2, r4, r1
 8000b22:	4293      	cmp	r3, r2
 8000b24:	bf04      	itt	eq
 8000b26:	681a      	ldreq	r2, [r3, #0]
 8000b28:	685b      	ldreq	r3, [r3, #4]
 8000b2a:	6063      	str	r3, [r4, #4]
 8000b2c:	bf04      	itt	eq
 8000b2e:	1852      	addeq	r2, r2, r1
 8000b30:	6022      	streq	r2, [r4, #0]
 8000b32:	6004      	str	r4, [r0, #0]
 8000b34:	e7ec      	b.n	8000b10 <_free_r+0x24>
 8000b36:	461a      	mov	r2, r3
 8000b38:	685b      	ldr	r3, [r3, #4]
 8000b3a:	b10b      	cbz	r3, 8000b40 <_free_r+0x54>
 8000b3c:	42a3      	cmp	r3, r4
 8000b3e:	d9fa      	bls.n	8000b36 <_free_r+0x4a>
 8000b40:	6811      	ldr	r1, [r2, #0]
 8000b42:	1850      	adds	r0, r2, r1
 8000b44:	42a0      	cmp	r0, r4
 8000b46:	d10b      	bne.n	8000b60 <_free_r+0x74>
 8000b48:	6820      	ldr	r0, [r4, #0]
 8000b4a:	4401      	add	r1, r0
 8000b4c:	1850      	adds	r0, r2, r1
 8000b4e:	4283      	cmp	r3, r0
 8000b50:	6011      	str	r1, [r2, #0]
 8000b52:	d1dd      	bne.n	8000b10 <_free_r+0x24>
 8000b54:	6818      	ldr	r0, [r3, #0]
 8000b56:	685b      	ldr	r3, [r3, #4]
 8000b58:	6053      	str	r3, [r2, #4]
 8000b5a:	4401      	add	r1, r0
 8000b5c:	6011      	str	r1, [r2, #0]
 8000b5e:	e7d7      	b.n	8000b10 <_free_r+0x24>
 8000b60:	d902      	bls.n	8000b68 <_free_r+0x7c>
 8000b62:	230c      	movs	r3, #12
 8000b64:	602b      	str	r3, [r5, #0]
 8000b66:	e7d3      	b.n	8000b10 <_free_r+0x24>
 8000b68:	6820      	ldr	r0, [r4, #0]
 8000b6a:	1821      	adds	r1, r4, r0
 8000b6c:	428b      	cmp	r3, r1
 8000b6e:	bf04      	itt	eq
 8000b70:	6819      	ldreq	r1, [r3, #0]
 8000b72:	685b      	ldreq	r3, [r3, #4]
 8000b74:	6063      	str	r3, [r4, #4]
 8000b76:	bf04      	itt	eq
 8000b78:	1809      	addeq	r1, r1, r0
 8000b7a:	6021      	streq	r1, [r4, #0]
 8000b7c:	6054      	str	r4, [r2, #4]
 8000b7e:	e7c7      	b.n	8000b10 <_free_r+0x24>
 8000b80:	bd38      	pop	{r3, r4, r5, pc}
 8000b82:	bf00      	nop
 8000b84:	20000098 	.word	0x20000098

08000b88 <_malloc_r>:
 8000b88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b8a:	1ccd      	adds	r5, r1, #3
 8000b8c:	f025 0503 	bic.w	r5, r5, #3
 8000b90:	3508      	adds	r5, #8
 8000b92:	2d0c      	cmp	r5, #12
 8000b94:	bf38      	it	cc
 8000b96:	250c      	movcc	r5, #12
 8000b98:	2d00      	cmp	r5, #0
 8000b9a:	4606      	mov	r6, r0
 8000b9c:	db01      	blt.n	8000ba2 <_malloc_r+0x1a>
 8000b9e:	42a9      	cmp	r1, r5
 8000ba0:	d903      	bls.n	8000baa <_malloc_r+0x22>
 8000ba2:	230c      	movs	r3, #12
 8000ba4:	6033      	str	r3, [r6, #0]
 8000ba6:	2000      	movs	r0, #0
 8000ba8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000baa:	f000 f8f1 	bl	8000d90 <__malloc_lock>
 8000bae:	4921      	ldr	r1, [pc, #132]	; (8000c34 <_malloc_r+0xac>)
 8000bb0:	680a      	ldr	r2, [r1, #0]
 8000bb2:	4614      	mov	r4, r2
 8000bb4:	b99c      	cbnz	r4, 8000bde <_malloc_r+0x56>
 8000bb6:	4f20      	ldr	r7, [pc, #128]	; (8000c38 <_malloc_r+0xb0>)
 8000bb8:	683b      	ldr	r3, [r7, #0]
 8000bba:	b923      	cbnz	r3, 8000bc6 <_malloc_r+0x3e>
 8000bbc:	4621      	mov	r1, r4
 8000bbe:	4630      	mov	r0, r6
 8000bc0:	f000 f83c 	bl	8000c3c <_sbrk_r>
 8000bc4:	6038      	str	r0, [r7, #0]
 8000bc6:	4629      	mov	r1, r5
 8000bc8:	4630      	mov	r0, r6
 8000bca:	f000 f837 	bl	8000c3c <_sbrk_r>
 8000bce:	1c43      	adds	r3, r0, #1
 8000bd0:	d123      	bne.n	8000c1a <_malloc_r+0x92>
 8000bd2:	230c      	movs	r3, #12
 8000bd4:	6033      	str	r3, [r6, #0]
 8000bd6:	4630      	mov	r0, r6
 8000bd8:	f000 f8e0 	bl	8000d9c <__malloc_unlock>
 8000bdc:	e7e3      	b.n	8000ba6 <_malloc_r+0x1e>
 8000bde:	6823      	ldr	r3, [r4, #0]
 8000be0:	1b5b      	subs	r3, r3, r5
 8000be2:	d417      	bmi.n	8000c14 <_malloc_r+0x8c>
 8000be4:	2b0b      	cmp	r3, #11
 8000be6:	d903      	bls.n	8000bf0 <_malloc_r+0x68>
 8000be8:	6023      	str	r3, [r4, #0]
 8000bea:	441c      	add	r4, r3
 8000bec:	6025      	str	r5, [r4, #0]
 8000bee:	e004      	b.n	8000bfa <_malloc_r+0x72>
 8000bf0:	6863      	ldr	r3, [r4, #4]
 8000bf2:	42a2      	cmp	r2, r4
 8000bf4:	bf0c      	ite	eq
 8000bf6:	600b      	streq	r3, [r1, #0]
 8000bf8:	6053      	strne	r3, [r2, #4]
 8000bfa:	4630      	mov	r0, r6
 8000bfc:	f000 f8ce 	bl	8000d9c <__malloc_unlock>
 8000c00:	f104 000b 	add.w	r0, r4, #11
 8000c04:	1d23      	adds	r3, r4, #4
 8000c06:	f020 0007 	bic.w	r0, r0, #7
 8000c0a:	1ac2      	subs	r2, r0, r3
 8000c0c:	d0cc      	beq.n	8000ba8 <_malloc_r+0x20>
 8000c0e:	1a1b      	subs	r3, r3, r0
 8000c10:	50a3      	str	r3, [r4, r2]
 8000c12:	e7c9      	b.n	8000ba8 <_malloc_r+0x20>
 8000c14:	4622      	mov	r2, r4
 8000c16:	6864      	ldr	r4, [r4, #4]
 8000c18:	e7cc      	b.n	8000bb4 <_malloc_r+0x2c>
 8000c1a:	1cc4      	adds	r4, r0, #3
 8000c1c:	f024 0403 	bic.w	r4, r4, #3
 8000c20:	42a0      	cmp	r0, r4
 8000c22:	d0e3      	beq.n	8000bec <_malloc_r+0x64>
 8000c24:	1a21      	subs	r1, r4, r0
 8000c26:	4630      	mov	r0, r6
 8000c28:	f000 f808 	bl	8000c3c <_sbrk_r>
 8000c2c:	3001      	adds	r0, #1
 8000c2e:	d1dd      	bne.n	8000bec <_malloc_r+0x64>
 8000c30:	e7cf      	b.n	8000bd2 <_malloc_r+0x4a>
 8000c32:	bf00      	nop
 8000c34:	20000098 	.word	0x20000098
 8000c38:	2000009c 	.word	0x2000009c

08000c3c <_sbrk_r>:
 8000c3c:	b538      	push	{r3, r4, r5, lr}
 8000c3e:	4d06      	ldr	r5, [pc, #24]	; (8000c58 <_sbrk_r+0x1c>)
 8000c40:	2300      	movs	r3, #0
 8000c42:	4604      	mov	r4, r0
 8000c44:	4608      	mov	r0, r1
 8000c46:	602b      	str	r3, [r5, #0]
 8000c48:	f7ff fb6a 	bl	8000320 <_sbrk>
 8000c4c:	1c43      	adds	r3, r0, #1
 8000c4e:	d102      	bne.n	8000c56 <_sbrk_r+0x1a>
 8000c50:	682b      	ldr	r3, [r5, #0]
 8000c52:	b103      	cbz	r3, 8000c56 <_sbrk_r+0x1a>
 8000c54:	6023      	str	r3, [r4, #0]
 8000c56:	bd38      	pop	{r3, r4, r5, pc}
 8000c58:	20000158 	.word	0x20000158

08000c5c <__sread>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	460c      	mov	r4, r1
 8000c60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c64:	f000 f8a0 	bl	8000da8 <_read_r>
 8000c68:	2800      	cmp	r0, #0
 8000c6a:	bfab      	itete	ge
 8000c6c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c6e:	89a3      	ldrhlt	r3, [r4, #12]
 8000c70:	181b      	addge	r3, r3, r0
 8000c72:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c76:	bfac      	ite	ge
 8000c78:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c7a:	81a3      	strhlt	r3, [r4, #12]
 8000c7c:	bd10      	pop	{r4, pc}

08000c7e <__swrite>:
 8000c7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c82:	461f      	mov	r7, r3
 8000c84:	898b      	ldrh	r3, [r1, #12]
 8000c86:	05db      	lsls	r3, r3, #23
 8000c88:	4605      	mov	r5, r0
 8000c8a:	460c      	mov	r4, r1
 8000c8c:	4616      	mov	r6, r2
 8000c8e:	d505      	bpl.n	8000c9c <__swrite+0x1e>
 8000c90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c94:	2302      	movs	r3, #2
 8000c96:	2200      	movs	r2, #0
 8000c98:	f000 f868 	bl	8000d6c <_lseek_r>
 8000c9c:	89a3      	ldrh	r3, [r4, #12]
 8000c9e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ca2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000ca6:	81a3      	strh	r3, [r4, #12]
 8000ca8:	4632      	mov	r2, r6
 8000caa:	463b      	mov	r3, r7
 8000cac:	4628      	mov	r0, r5
 8000cae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000cb2:	f000 b817 	b.w	8000ce4 <_write_r>

08000cb6 <__sseek>:
 8000cb6:	b510      	push	{r4, lr}
 8000cb8:	460c      	mov	r4, r1
 8000cba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cbe:	f000 f855 	bl	8000d6c <_lseek_r>
 8000cc2:	1c43      	adds	r3, r0, #1
 8000cc4:	89a3      	ldrh	r3, [r4, #12]
 8000cc6:	bf15      	itete	ne
 8000cc8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000cca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000cce:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000cd2:	81a3      	strheq	r3, [r4, #12]
 8000cd4:	bf18      	it	ne
 8000cd6:	81a3      	strhne	r3, [r4, #12]
 8000cd8:	bd10      	pop	{r4, pc}

08000cda <__sclose>:
 8000cda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cde:	f000 b813 	b.w	8000d08 <_close_r>
	...

08000ce4 <_write_r>:
 8000ce4:	b538      	push	{r3, r4, r5, lr}
 8000ce6:	4d07      	ldr	r5, [pc, #28]	; (8000d04 <_write_r+0x20>)
 8000ce8:	4604      	mov	r4, r0
 8000cea:	4608      	mov	r0, r1
 8000cec:	4611      	mov	r1, r2
 8000cee:	2200      	movs	r2, #0
 8000cf0:	602a      	str	r2, [r5, #0]
 8000cf2:	461a      	mov	r2, r3
 8000cf4:	f000 f91a 	bl	8000f2c <_write>
 8000cf8:	1c43      	adds	r3, r0, #1
 8000cfa:	d102      	bne.n	8000d02 <_write_r+0x1e>
 8000cfc:	682b      	ldr	r3, [r5, #0]
 8000cfe:	b103      	cbz	r3, 8000d02 <_write_r+0x1e>
 8000d00:	6023      	str	r3, [r4, #0]
 8000d02:	bd38      	pop	{r3, r4, r5, pc}
 8000d04:	20000158 	.word	0x20000158

08000d08 <_close_r>:
 8000d08:	b538      	push	{r3, r4, r5, lr}
 8000d0a:	4d06      	ldr	r5, [pc, #24]	; (8000d24 <_close_r+0x1c>)
 8000d0c:	2300      	movs	r3, #0
 8000d0e:	4604      	mov	r4, r0
 8000d10:	4608      	mov	r0, r1
 8000d12:	602b      	str	r3, [r5, #0]
 8000d14:	f000 f938 	bl	8000f88 <_close>
 8000d18:	1c43      	adds	r3, r0, #1
 8000d1a:	d102      	bne.n	8000d22 <_close_r+0x1a>
 8000d1c:	682b      	ldr	r3, [r5, #0]
 8000d1e:	b103      	cbz	r3, 8000d22 <_close_r+0x1a>
 8000d20:	6023      	str	r3, [r4, #0]
 8000d22:	bd38      	pop	{r3, r4, r5, pc}
 8000d24:	20000158 	.word	0x20000158

08000d28 <_fstat_r>:
 8000d28:	b538      	push	{r3, r4, r5, lr}
 8000d2a:	4d07      	ldr	r5, [pc, #28]	; (8000d48 <_fstat_r+0x20>)
 8000d2c:	2300      	movs	r3, #0
 8000d2e:	4604      	mov	r4, r0
 8000d30:	4608      	mov	r0, r1
 8000d32:	4611      	mov	r1, r2
 8000d34:	602b      	str	r3, [r5, #0]
 8000d36:	f000 f96e 	bl	8001016 <_fstat>
 8000d3a:	1c43      	adds	r3, r0, #1
 8000d3c:	d102      	bne.n	8000d44 <_fstat_r+0x1c>
 8000d3e:	682b      	ldr	r3, [r5, #0]
 8000d40:	b103      	cbz	r3, 8000d44 <_fstat_r+0x1c>
 8000d42:	6023      	str	r3, [r4, #0]
 8000d44:	bd38      	pop	{r3, r4, r5, pc}
 8000d46:	bf00      	nop
 8000d48:	20000158 	.word	0x20000158

08000d4c <_isatty_r>:
 8000d4c:	b538      	push	{r3, r4, r5, lr}
 8000d4e:	4d06      	ldr	r5, [pc, #24]	; (8000d68 <_isatty_r+0x1c>)
 8000d50:	2300      	movs	r3, #0
 8000d52:	4604      	mov	r4, r0
 8000d54:	4608      	mov	r0, r1
 8000d56:	602b      	str	r3, [r5, #0]
 8000d58:	f000 fac2 	bl	80012e0 <_isatty>
 8000d5c:	1c43      	adds	r3, r0, #1
 8000d5e:	d102      	bne.n	8000d66 <_isatty_r+0x1a>
 8000d60:	682b      	ldr	r3, [r5, #0]
 8000d62:	b103      	cbz	r3, 8000d66 <_isatty_r+0x1a>
 8000d64:	6023      	str	r3, [r4, #0]
 8000d66:	bd38      	pop	{r3, r4, r5, pc}
 8000d68:	20000158 	.word	0x20000158

08000d6c <_lseek_r>:
 8000d6c:	b538      	push	{r3, r4, r5, lr}
 8000d6e:	4d07      	ldr	r5, [pc, #28]	; (8000d8c <_lseek_r+0x20>)
 8000d70:	4604      	mov	r4, r0
 8000d72:	4608      	mov	r0, r1
 8000d74:	4611      	mov	r1, r2
 8000d76:	2200      	movs	r2, #0
 8000d78:	602a      	str	r2, [r5, #0]
 8000d7a:	461a      	mov	r2, r3
 8000d7c:	f000 f8c4 	bl	8000f08 <_lseek>
 8000d80:	1c43      	adds	r3, r0, #1
 8000d82:	d102      	bne.n	8000d8a <_lseek_r+0x1e>
 8000d84:	682b      	ldr	r3, [r5, #0]
 8000d86:	b103      	cbz	r3, 8000d8a <_lseek_r+0x1e>
 8000d88:	6023      	str	r3, [r4, #0]
 8000d8a:	bd38      	pop	{r3, r4, r5, pc}
 8000d8c:	20000158 	.word	0x20000158

08000d90 <__malloc_lock>:
 8000d90:	4801      	ldr	r0, [pc, #4]	; (8000d98 <__malloc_lock+0x8>)
 8000d92:	f7ff be45 	b.w	8000a20 <__retarget_lock_acquire_recursive>
 8000d96:	bf00      	nop
 8000d98:	20000150 	.word	0x20000150

08000d9c <__malloc_unlock>:
 8000d9c:	4801      	ldr	r0, [pc, #4]	; (8000da4 <__malloc_unlock+0x8>)
 8000d9e:	f7ff be40 	b.w	8000a22 <__retarget_lock_release_recursive>
 8000da2:	bf00      	nop
 8000da4:	20000150 	.word	0x20000150

08000da8 <_read_r>:
 8000da8:	b538      	push	{r3, r4, r5, lr}
 8000daa:	4d07      	ldr	r5, [pc, #28]	; (8000dc8 <_read_r+0x20>)
 8000dac:	4604      	mov	r4, r0
 8000dae:	4608      	mov	r0, r1
 8000db0:	4611      	mov	r1, r2
 8000db2:	2200      	movs	r2, #0
 8000db4:	602a      	str	r2, [r5, #0]
 8000db6:	461a      	mov	r2, r3
 8000db8:	f000 f850 	bl	8000e5c <_read>
 8000dbc:	1c43      	adds	r3, r0, #1
 8000dbe:	d102      	bne.n	8000dc6 <_read_r+0x1e>
 8000dc0:	682b      	ldr	r3, [r5, #0]
 8000dc2:	b103      	cbz	r3, 8000dc6 <_read_r+0x1e>
 8000dc4:	6023      	str	r3, [r4, #0]
 8000dc6:	bd38      	pop	{r3, r4, r5, pc}
 8000dc8:	20000158 	.word	0x20000158

08000dcc <findslot>:
 8000dcc:	4b0a      	ldr	r3, [pc, #40]	; (8000df8 <findslot+0x2c>)
 8000dce:	b510      	push	{r4, lr}
 8000dd0:	4604      	mov	r4, r0
 8000dd2:	6818      	ldr	r0, [r3, #0]
 8000dd4:	b118      	cbz	r0, 8000dde <findslot+0x12>
 8000dd6:	6983      	ldr	r3, [r0, #24]
 8000dd8:	b90b      	cbnz	r3, 8000dde <findslot+0x12>
 8000dda:	f7ff fd83 	bl	80008e4 <__sinit>
 8000dde:	2c13      	cmp	r4, #19
 8000de0:	d807      	bhi.n	8000df2 <findslot+0x26>
 8000de2:	4806      	ldr	r0, [pc, #24]	; (8000dfc <findslot+0x30>)
 8000de4:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8000de8:	3201      	adds	r2, #1
 8000dea:	d002      	beq.n	8000df2 <findslot+0x26>
 8000dec:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8000df0:	bd10      	pop	{r4, pc}
 8000df2:	2000      	movs	r0, #0
 8000df4:	e7fc      	b.n	8000df0 <findslot+0x24>
 8000df6:	bf00      	nop
 8000df8:	2000000c 	.word	0x2000000c
 8000dfc:	200000ac 	.word	0x200000ac

08000e00 <checkerror>:
 8000e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e02:	1c43      	adds	r3, r0, #1
 8000e04:	4604      	mov	r4, r0
 8000e06:	d109      	bne.n	8000e1c <checkerror+0x1c>
 8000e08:	f7ff faea 	bl	80003e0 <__errno>
 8000e0c:	2613      	movs	r6, #19
 8000e0e:	4605      	mov	r5, r0
 8000e10:	2700      	movs	r7, #0
 8000e12:	4630      	mov	r0, r6
 8000e14:	4639      	mov	r1, r7
 8000e16:	beab      	bkpt	0x00ab
 8000e18:	4606      	mov	r6, r0
 8000e1a:	602e      	str	r6, [r5, #0]
 8000e1c:	4620      	mov	r0, r4
 8000e1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000e20 <error>:
 8000e20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e22:	4604      	mov	r4, r0
 8000e24:	f7ff fadc 	bl	80003e0 <__errno>
 8000e28:	2613      	movs	r6, #19
 8000e2a:	4605      	mov	r5, r0
 8000e2c:	2700      	movs	r7, #0
 8000e2e:	4630      	mov	r0, r6
 8000e30:	4639      	mov	r1, r7
 8000e32:	beab      	bkpt	0x00ab
 8000e34:	4606      	mov	r6, r0
 8000e36:	602e      	str	r6, [r5, #0]
 8000e38:	4620      	mov	r0, r4
 8000e3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000e3c <_swiread>:
 8000e3c:	b530      	push	{r4, r5, lr}
 8000e3e:	b085      	sub	sp, #20
 8000e40:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8000e44:	9203      	str	r2, [sp, #12]
 8000e46:	2406      	movs	r4, #6
 8000e48:	ad01      	add	r5, sp, #4
 8000e4a:	4620      	mov	r0, r4
 8000e4c:	4629      	mov	r1, r5
 8000e4e:	beab      	bkpt	0x00ab
 8000e50:	4604      	mov	r4, r0
 8000e52:	4620      	mov	r0, r4
 8000e54:	f7ff ffd4 	bl	8000e00 <checkerror>
 8000e58:	b005      	add	sp, #20
 8000e5a:	bd30      	pop	{r4, r5, pc}

08000e5c <_read>:
 8000e5c:	b570      	push	{r4, r5, r6, lr}
 8000e5e:	460e      	mov	r6, r1
 8000e60:	4615      	mov	r5, r2
 8000e62:	f7ff ffb3 	bl	8000dcc <findslot>
 8000e66:	4604      	mov	r4, r0
 8000e68:	b930      	cbnz	r0, 8000e78 <_read+0x1c>
 8000e6a:	f7ff fab9 	bl	80003e0 <__errno>
 8000e6e:	2309      	movs	r3, #9
 8000e70:	6003      	str	r3, [r0, #0]
 8000e72:	f04f 30ff 	mov.w	r0, #4294967295
 8000e76:	bd70      	pop	{r4, r5, r6, pc}
 8000e78:	6800      	ldr	r0, [r0, #0]
 8000e7a:	462a      	mov	r2, r5
 8000e7c:	4631      	mov	r1, r6
 8000e7e:	f7ff ffdd 	bl	8000e3c <_swiread>
 8000e82:	1c43      	adds	r3, r0, #1
 8000e84:	bf1f      	itttt	ne
 8000e86:	6863      	ldrne	r3, [r4, #4]
 8000e88:	1a28      	subne	r0, r5, r0
 8000e8a:	181b      	addne	r3, r3, r0
 8000e8c:	6063      	strne	r3, [r4, #4]
 8000e8e:	e7f2      	b.n	8000e76 <_read+0x1a>

08000e90 <_swilseek>:
 8000e90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000e92:	460c      	mov	r4, r1
 8000e94:	4616      	mov	r6, r2
 8000e96:	f7ff ff99 	bl	8000dcc <findslot>
 8000e9a:	4605      	mov	r5, r0
 8000e9c:	b940      	cbnz	r0, 8000eb0 <_swilseek+0x20>
 8000e9e:	f7ff fa9f 	bl	80003e0 <__errno>
 8000ea2:	2309      	movs	r3, #9
 8000ea4:	6003      	str	r3, [r0, #0]
 8000ea6:	f04f 34ff 	mov.w	r4, #4294967295
 8000eaa:	4620      	mov	r0, r4
 8000eac:	b003      	add	sp, #12
 8000eae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eb0:	2e02      	cmp	r6, #2
 8000eb2:	d903      	bls.n	8000ebc <_swilseek+0x2c>
 8000eb4:	f7ff fa94 	bl	80003e0 <__errno>
 8000eb8:	2316      	movs	r3, #22
 8000eba:	e7f3      	b.n	8000ea4 <_swilseek+0x14>
 8000ebc:	2e01      	cmp	r6, #1
 8000ebe:	d112      	bne.n	8000ee6 <_swilseek+0x56>
 8000ec0:	6843      	ldr	r3, [r0, #4]
 8000ec2:	18e4      	adds	r4, r4, r3
 8000ec4:	d4f6      	bmi.n	8000eb4 <_swilseek+0x24>
 8000ec6:	682b      	ldr	r3, [r5, #0]
 8000ec8:	260a      	movs	r6, #10
 8000eca:	e9cd 3400 	strd	r3, r4, [sp]
 8000ece:	466f      	mov	r7, sp
 8000ed0:	4630      	mov	r0, r6
 8000ed2:	4639      	mov	r1, r7
 8000ed4:	beab      	bkpt	0x00ab
 8000ed6:	4606      	mov	r6, r0
 8000ed8:	4630      	mov	r0, r6
 8000eda:	f7ff ff91 	bl	8000e00 <checkerror>
 8000ede:	2800      	cmp	r0, #0
 8000ee0:	dbe1      	blt.n	8000ea6 <_swilseek+0x16>
 8000ee2:	606c      	str	r4, [r5, #4]
 8000ee4:	e7e1      	b.n	8000eaa <_swilseek+0x1a>
 8000ee6:	2e02      	cmp	r6, #2
 8000ee8:	d1ed      	bne.n	8000ec6 <_swilseek+0x36>
 8000eea:	6803      	ldr	r3, [r0, #0]
 8000eec:	9300      	str	r3, [sp, #0]
 8000eee:	260c      	movs	r6, #12
 8000ef0:	466f      	mov	r7, sp
 8000ef2:	4630      	mov	r0, r6
 8000ef4:	4639      	mov	r1, r7
 8000ef6:	beab      	bkpt	0x00ab
 8000ef8:	4606      	mov	r6, r0
 8000efa:	4630      	mov	r0, r6
 8000efc:	f7ff ff80 	bl	8000e00 <checkerror>
 8000f00:	1c43      	adds	r3, r0, #1
 8000f02:	d0d0      	beq.n	8000ea6 <_swilseek+0x16>
 8000f04:	4404      	add	r4, r0
 8000f06:	e7de      	b.n	8000ec6 <_swilseek+0x36>

08000f08 <_lseek>:
 8000f08:	f7ff bfc2 	b.w	8000e90 <_swilseek>

08000f0c <_swiwrite>:
 8000f0c:	b530      	push	{r4, r5, lr}
 8000f0e:	b085      	sub	sp, #20
 8000f10:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8000f14:	9203      	str	r2, [sp, #12]
 8000f16:	2405      	movs	r4, #5
 8000f18:	ad01      	add	r5, sp, #4
 8000f1a:	4620      	mov	r0, r4
 8000f1c:	4629      	mov	r1, r5
 8000f1e:	beab      	bkpt	0x00ab
 8000f20:	4604      	mov	r4, r0
 8000f22:	4620      	mov	r0, r4
 8000f24:	f7ff ff6c 	bl	8000e00 <checkerror>
 8000f28:	b005      	add	sp, #20
 8000f2a:	bd30      	pop	{r4, r5, pc}

08000f2c <_write>:
 8000f2c:	b570      	push	{r4, r5, r6, lr}
 8000f2e:	460e      	mov	r6, r1
 8000f30:	4615      	mov	r5, r2
 8000f32:	f7ff ff4b 	bl	8000dcc <findslot>
 8000f36:	4604      	mov	r4, r0
 8000f38:	b930      	cbnz	r0, 8000f48 <_write+0x1c>
 8000f3a:	f7ff fa51 	bl	80003e0 <__errno>
 8000f3e:	2309      	movs	r3, #9
 8000f40:	6003      	str	r3, [r0, #0]
 8000f42:	f04f 30ff 	mov.w	r0, #4294967295
 8000f46:	bd70      	pop	{r4, r5, r6, pc}
 8000f48:	6800      	ldr	r0, [r0, #0]
 8000f4a:	462a      	mov	r2, r5
 8000f4c:	4631      	mov	r1, r6
 8000f4e:	f7ff ffdd 	bl	8000f0c <_swiwrite>
 8000f52:	1e03      	subs	r3, r0, #0
 8000f54:	dbf5      	blt.n	8000f42 <_write+0x16>
 8000f56:	6862      	ldr	r2, [r4, #4]
 8000f58:	1ae8      	subs	r0, r5, r3
 8000f5a:	4402      	add	r2, r0
 8000f5c:	42ab      	cmp	r3, r5
 8000f5e:	6062      	str	r2, [r4, #4]
 8000f60:	d1f1      	bne.n	8000f46 <_write+0x1a>
 8000f62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000f66:	2000      	movs	r0, #0
 8000f68:	f7ff bf5a 	b.w	8000e20 <error>

08000f6c <_swiclose>:
 8000f6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000f6e:	2402      	movs	r4, #2
 8000f70:	9001      	str	r0, [sp, #4]
 8000f72:	ad01      	add	r5, sp, #4
 8000f74:	4620      	mov	r0, r4
 8000f76:	4629      	mov	r1, r5
 8000f78:	beab      	bkpt	0x00ab
 8000f7a:	4604      	mov	r4, r0
 8000f7c:	4620      	mov	r0, r4
 8000f7e:	f7ff ff3f 	bl	8000e00 <checkerror>
 8000f82:	b003      	add	sp, #12
 8000f84:	bd30      	pop	{r4, r5, pc}
	...

08000f88 <_close>:
 8000f88:	b538      	push	{r3, r4, r5, lr}
 8000f8a:	4605      	mov	r5, r0
 8000f8c:	f7ff ff1e 	bl	8000dcc <findslot>
 8000f90:	4604      	mov	r4, r0
 8000f92:	b930      	cbnz	r0, 8000fa2 <_close+0x1a>
 8000f94:	f7ff fa24 	bl	80003e0 <__errno>
 8000f98:	2309      	movs	r3, #9
 8000f9a:	6003      	str	r3, [r0, #0]
 8000f9c:	f04f 30ff 	mov.w	r0, #4294967295
 8000fa0:	bd38      	pop	{r3, r4, r5, pc}
 8000fa2:	3d01      	subs	r5, #1
 8000fa4:	2d01      	cmp	r5, #1
 8000fa6:	d809      	bhi.n	8000fbc <_close+0x34>
 8000fa8:	4b09      	ldr	r3, [pc, #36]	; (8000fd0 <_close+0x48>)
 8000faa:	689a      	ldr	r2, [r3, #8]
 8000fac:	691b      	ldr	r3, [r3, #16]
 8000fae:	429a      	cmp	r2, r3
 8000fb0:	d104      	bne.n	8000fbc <_close+0x34>
 8000fb2:	f04f 33ff 	mov.w	r3, #4294967295
 8000fb6:	6003      	str	r3, [r0, #0]
 8000fb8:	2000      	movs	r0, #0
 8000fba:	e7f1      	b.n	8000fa0 <_close+0x18>
 8000fbc:	6820      	ldr	r0, [r4, #0]
 8000fbe:	f7ff ffd5 	bl	8000f6c <_swiclose>
 8000fc2:	2800      	cmp	r0, #0
 8000fc4:	d1ec      	bne.n	8000fa0 <_close+0x18>
 8000fc6:	f04f 33ff 	mov.w	r3, #4294967295
 8000fca:	6023      	str	r3, [r4, #0]
 8000fcc:	e7e8      	b.n	8000fa0 <_close+0x18>
 8000fce:	bf00      	nop
 8000fd0:	200000ac 	.word	0x200000ac

08000fd4 <_swistat>:
 8000fd4:	b570      	push	{r4, r5, r6, lr}
 8000fd6:	460c      	mov	r4, r1
 8000fd8:	f7ff fef8 	bl	8000dcc <findslot>
 8000fdc:	4605      	mov	r5, r0
 8000fde:	b930      	cbnz	r0, 8000fee <_swistat+0x1a>
 8000fe0:	f7ff f9fe 	bl	80003e0 <__errno>
 8000fe4:	2309      	movs	r3, #9
 8000fe6:	6003      	str	r3, [r0, #0]
 8000fe8:	f04f 30ff 	mov.w	r0, #4294967295
 8000fec:	bd70      	pop	{r4, r5, r6, pc}
 8000fee:	6863      	ldr	r3, [r4, #4]
 8000ff0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000ff4:	6063      	str	r3, [r4, #4]
 8000ff6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ffa:	64a3      	str	r3, [r4, #72]	; 0x48
 8000ffc:	260c      	movs	r6, #12
 8000ffe:	4630      	mov	r0, r6
 8001000:	4629      	mov	r1, r5
 8001002:	beab      	bkpt	0x00ab
 8001004:	4605      	mov	r5, r0
 8001006:	4628      	mov	r0, r5
 8001008:	f7ff fefa 	bl	8000e00 <checkerror>
 800100c:	1c43      	adds	r3, r0, #1
 800100e:	bf1c      	itt	ne
 8001010:	6120      	strne	r0, [r4, #16]
 8001012:	2000      	movne	r0, #0
 8001014:	e7ea      	b.n	8000fec <_swistat+0x18>

08001016 <_fstat>:
 8001016:	460b      	mov	r3, r1
 8001018:	b510      	push	{r4, lr}
 800101a:	2100      	movs	r1, #0
 800101c:	4604      	mov	r4, r0
 800101e:	2258      	movs	r2, #88	; 0x58
 8001020:	4618      	mov	r0, r3
 8001022:	f7ff fa07 	bl	8000434 <memset>
 8001026:	4601      	mov	r1, r0
 8001028:	4620      	mov	r0, r4
 800102a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800102e:	f7ff bfd1 	b.w	8000fd4 <_swistat>

08001032 <_stat>:
 8001032:	b538      	push	{r3, r4, r5, lr}
 8001034:	460d      	mov	r5, r1
 8001036:	4604      	mov	r4, r0
 8001038:	2258      	movs	r2, #88	; 0x58
 800103a:	2100      	movs	r1, #0
 800103c:	4628      	mov	r0, r5
 800103e:	f7ff f9f9 	bl	8000434 <memset>
 8001042:	4620      	mov	r0, r4
 8001044:	2100      	movs	r1, #0
 8001046:	f000 f811 	bl	800106c <_swiopen>
 800104a:	1c43      	adds	r3, r0, #1
 800104c:	4604      	mov	r4, r0
 800104e:	d00b      	beq.n	8001068 <_stat+0x36>
 8001050:	686b      	ldr	r3, [r5, #4]
 8001052:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8001056:	606b      	str	r3, [r5, #4]
 8001058:	4629      	mov	r1, r5
 800105a:	f7ff ffbb 	bl	8000fd4 <_swistat>
 800105e:	4605      	mov	r5, r0
 8001060:	4620      	mov	r0, r4
 8001062:	f7ff ff91 	bl	8000f88 <_close>
 8001066:	462c      	mov	r4, r5
 8001068:	4620      	mov	r0, r4
 800106a:	bd38      	pop	{r3, r4, r5, pc}

0800106c <_swiopen>:
 800106c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001070:	4b2a      	ldr	r3, [pc, #168]	; (800111c <_swiopen+0xb0>)
 8001072:	b097      	sub	sp, #92	; 0x5c
 8001074:	4681      	mov	r9, r0
 8001076:	460f      	mov	r7, r1
 8001078:	2500      	movs	r5, #0
 800107a:	461e      	mov	r6, r3
 800107c:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 8001080:	1c61      	adds	r1, r4, #1
 8001082:	d037      	beq.n	80010f4 <_swiopen+0x88>
 8001084:	3501      	adds	r5, #1
 8001086:	2d14      	cmp	r5, #20
 8001088:	d1f8      	bne.n	800107c <_swiopen+0x10>
 800108a:	f7ff f9a9 	bl	80003e0 <__errno>
 800108e:	2318      	movs	r3, #24
 8001090:	6003      	str	r3, [r0, #0]
 8001092:	f04f 34ff 	mov.w	r4, #4294967295
 8001096:	e03d      	b.n	8001114 <_swiopen+0xa8>
 8001098:	f3c7 4400 	ubfx	r4, r7, #16, #1
 800109c:	f240 6301 	movw	r3, #1537	; 0x601
 80010a0:	07ba      	lsls	r2, r7, #30
 80010a2:	bf48      	it	mi
 80010a4:	f044 0402 	orrmi.w	r4, r4, #2
 80010a8:	421f      	tst	r7, r3
 80010aa:	bf18      	it	ne
 80010ac:	f044 0404 	orrne.w	r4, r4, #4
 80010b0:	073b      	lsls	r3, r7, #28
 80010b2:	bf48      	it	mi
 80010b4:	f024 0404 	bicmi.w	r4, r4, #4
 80010b8:	4648      	mov	r0, r9
 80010ba:	bf48      	it	mi
 80010bc:	f044 0408 	orrmi.w	r4, r4, #8
 80010c0:	f8cd 9000 	str.w	r9, [sp]
 80010c4:	f7ff f892 	bl	80001ec <strlen>
 80010c8:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80010cc:	2401      	movs	r4, #1
 80010ce:	4620      	mov	r0, r4
 80010d0:	4641      	mov	r1, r8
 80010d2:	beab      	bkpt	0x00ab
 80010d4:	4604      	mov	r4, r0
 80010d6:	2c00      	cmp	r4, #0
 80010d8:	db07      	blt.n	80010ea <_swiopen+0x7e>
 80010da:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 80010de:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 80010e2:	2300      	movs	r3, #0
 80010e4:	6073      	str	r3, [r6, #4]
 80010e6:	462c      	mov	r4, r5
 80010e8:	e014      	b.n	8001114 <_swiopen+0xa8>
 80010ea:	4620      	mov	r0, r4
 80010ec:	f7ff fe98 	bl	8000e20 <error>
 80010f0:	4604      	mov	r4, r0
 80010f2:	e00f      	b.n	8001114 <_swiopen+0xa8>
 80010f4:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 80010f8:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 80010fc:	46e8      	mov	r8, sp
 80010fe:	d1cb      	bne.n	8001098 <_swiopen+0x2c>
 8001100:	4641      	mov	r1, r8
 8001102:	4648      	mov	r0, r9
 8001104:	f7ff ff95 	bl	8001032 <_stat>
 8001108:	3001      	adds	r0, #1
 800110a:	d0c5      	beq.n	8001098 <_swiopen+0x2c>
 800110c:	f7ff f968 	bl	80003e0 <__errno>
 8001110:	2311      	movs	r3, #17
 8001112:	6003      	str	r3, [r0, #0]
 8001114:	4620      	mov	r0, r4
 8001116:	b017      	add	sp, #92	; 0x5c
 8001118:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800111c:	200000ac 	.word	0x200000ac

08001120 <_get_semihosting_exts>:
 8001120:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8001124:	4606      	mov	r6, r0
 8001126:	460f      	mov	r7, r1
 8001128:	482a      	ldr	r0, [pc, #168]	; (80011d4 <_get_semihosting_exts+0xb4>)
 800112a:	2100      	movs	r1, #0
 800112c:	4615      	mov	r5, r2
 800112e:	f7ff ff9d 	bl	800106c <_swiopen>
 8001132:	462a      	mov	r2, r5
 8001134:	4604      	mov	r4, r0
 8001136:	2100      	movs	r1, #0
 8001138:	4630      	mov	r0, r6
 800113a:	f7ff f97b 	bl	8000434 <memset>
 800113e:	1c63      	adds	r3, r4, #1
 8001140:	d016      	beq.n	8001170 <_get_semihosting_exts+0x50>
 8001142:	4620      	mov	r0, r4
 8001144:	f7ff fe42 	bl	8000dcc <findslot>
 8001148:	f04f 080c 	mov.w	r8, #12
 800114c:	4681      	mov	r9, r0
 800114e:	4640      	mov	r0, r8
 8001150:	4649      	mov	r1, r9
 8001152:	beab      	bkpt	0x00ab
 8001154:	4680      	mov	r8, r0
 8001156:	4640      	mov	r0, r8
 8001158:	f7ff fe52 	bl	8000e00 <checkerror>
 800115c:	2803      	cmp	r0, #3
 800115e:	dd02      	ble.n	8001166 <_get_semihosting_exts+0x46>
 8001160:	1ec3      	subs	r3, r0, #3
 8001162:	42ab      	cmp	r3, r5
 8001164:	dc08      	bgt.n	8001178 <_get_semihosting_exts+0x58>
 8001166:	4620      	mov	r0, r4
 8001168:	f7ff ff0e 	bl	8000f88 <_close>
 800116c:	f04f 34ff 	mov.w	r4, #4294967295
 8001170:	4620      	mov	r0, r4
 8001172:	b003      	add	sp, #12
 8001174:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001178:	2204      	movs	r2, #4
 800117a:	eb0d 0102 	add.w	r1, sp, r2
 800117e:	4620      	mov	r0, r4
 8001180:	f7ff fe6c 	bl	8000e5c <_read>
 8001184:	2803      	cmp	r0, #3
 8001186:	ddee      	ble.n	8001166 <_get_semihosting_exts+0x46>
 8001188:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800118c:	2b53      	cmp	r3, #83	; 0x53
 800118e:	d1ea      	bne.n	8001166 <_get_semihosting_exts+0x46>
 8001190:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8001194:	2b48      	cmp	r3, #72	; 0x48
 8001196:	d1e6      	bne.n	8001166 <_get_semihosting_exts+0x46>
 8001198:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800119c:	2b46      	cmp	r3, #70	; 0x46
 800119e:	d1e2      	bne.n	8001166 <_get_semihosting_exts+0x46>
 80011a0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80011a4:	2b42      	cmp	r3, #66	; 0x42
 80011a6:	d1de      	bne.n	8001166 <_get_semihosting_exts+0x46>
 80011a8:	2201      	movs	r2, #1
 80011aa:	4639      	mov	r1, r7
 80011ac:	4620      	mov	r0, r4
 80011ae:	f7ff fe6f 	bl	8000e90 <_swilseek>
 80011b2:	2800      	cmp	r0, #0
 80011b4:	dbd7      	blt.n	8001166 <_get_semihosting_exts+0x46>
 80011b6:	462a      	mov	r2, r5
 80011b8:	4631      	mov	r1, r6
 80011ba:	4620      	mov	r0, r4
 80011bc:	f7ff fe4e 	bl	8000e5c <_read>
 80011c0:	4605      	mov	r5, r0
 80011c2:	4620      	mov	r0, r4
 80011c4:	f7ff fee0 	bl	8000f88 <_close>
 80011c8:	4628      	mov	r0, r5
 80011ca:	f7ff fe19 	bl	8000e00 <checkerror>
 80011ce:	4604      	mov	r4, r0
 80011d0:	e7ce      	b.n	8001170 <_get_semihosting_exts+0x50>
 80011d2:	bf00      	nop
 80011d4:	080013c0 	.word	0x080013c0

080011d8 <initialise_semihosting_exts>:
 80011d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80011da:	4d0a      	ldr	r5, [pc, #40]	; (8001204 <initialise_semihosting_exts+0x2c>)
 80011dc:	4c0a      	ldr	r4, [pc, #40]	; (8001208 <initialise_semihosting_exts+0x30>)
 80011de:	2100      	movs	r1, #0
 80011e0:	2201      	movs	r2, #1
 80011e2:	a801      	add	r0, sp, #4
 80011e4:	6029      	str	r1, [r5, #0]
 80011e6:	6022      	str	r2, [r4, #0]
 80011e8:	f7ff ff9a 	bl	8001120 <_get_semihosting_exts>
 80011ec:	2800      	cmp	r0, #0
 80011ee:	dd07      	ble.n	8001200 <initialise_semihosting_exts+0x28>
 80011f0:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80011f4:	f003 0201 	and.w	r2, r3, #1
 80011f8:	f003 0302 	and.w	r3, r3, #2
 80011fc:	602a      	str	r2, [r5, #0]
 80011fe:	6023      	str	r3, [r4, #0]
 8001200:	b003      	add	sp, #12
 8001202:	bd30      	pop	{r4, r5, pc}
 8001204:	20000070 	.word	0x20000070
 8001208:	20000074 	.word	0x20000074

0800120c <_has_ext_stdout_stderr>:
 800120c:	b510      	push	{r4, lr}
 800120e:	4c04      	ldr	r4, [pc, #16]	; (8001220 <_has_ext_stdout_stderr+0x14>)
 8001210:	6822      	ldr	r2, [r4, #0]
 8001212:	2a00      	cmp	r2, #0
 8001214:	da01      	bge.n	800121a <_has_ext_stdout_stderr+0xe>
 8001216:	f7ff ffdf 	bl	80011d8 <initialise_semihosting_exts>
 800121a:	6820      	ldr	r0, [r4, #0]
 800121c:	bd10      	pop	{r4, pc}
 800121e:	bf00      	nop
 8001220:	20000074 	.word	0x20000074

08001224 <initialise_monitor_handles>:
 8001224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001228:	b085      	sub	sp, #20
 800122a:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80012dc <initialise_monitor_handles+0xb8>
 800122e:	f8cd 9004 	str.w	r9, [sp, #4]
 8001232:	2303      	movs	r3, #3
 8001234:	2400      	movs	r4, #0
 8001236:	9303      	str	r3, [sp, #12]
 8001238:	f10d 0804 	add.w	r8, sp, #4
 800123c:	9402      	str	r4, [sp, #8]
 800123e:	2501      	movs	r5, #1
 8001240:	4628      	mov	r0, r5
 8001242:	4641      	mov	r1, r8
 8001244:	beab      	bkpt	0x00ab
 8001246:	4605      	mov	r5, r0
 8001248:	4e20      	ldr	r6, [pc, #128]	; (80012cc <initialise_monitor_handles+0xa8>)
 800124a:	4a21      	ldr	r2, [pc, #132]	; (80012d0 <initialise_monitor_handles+0xac>)
 800124c:	6035      	str	r5, [r6, #0]
 800124e:	4623      	mov	r3, r4
 8001250:	f04f 31ff 	mov.w	r1, #4294967295
 8001254:	4614      	mov	r4, r2
 8001256:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 800125a:	3301      	adds	r3, #1
 800125c:	2b14      	cmp	r3, #20
 800125e:	d1fa      	bne.n	8001256 <initialise_monitor_handles+0x32>
 8001260:	f7ff ffd4 	bl	800120c <_has_ext_stdout_stderr>
 8001264:	4d1b      	ldr	r5, [pc, #108]	; (80012d4 <initialise_monitor_handles+0xb0>)
 8001266:	b1d0      	cbz	r0, 800129e <initialise_monitor_handles+0x7a>
 8001268:	f04f 0a03 	mov.w	sl, #3
 800126c:	2304      	movs	r3, #4
 800126e:	f8cd 9004 	str.w	r9, [sp, #4]
 8001272:	2701      	movs	r7, #1
 8001274:	f8cd a00c 	str.w	sl, [sp, #12]
 8001278:	9302      	str	r3, [sp, #8]
 800127a:	4638      	mov	r0, r7
 800127c:	4641      	mov	r1, r8
 800127e:	beab      	bkpt	0x00ab
 8001280:	4683      	mov	fp, r0
 8001282:	4b15      	ldr	r3, [pc, #84]	; (80012d8 <initialise_monitor_handles+0xb4>)
 8001284:	f8cd 9004 	str.w	r9, [sp, #4]
 8001288:	f8c3 b000 	str.w	fp, [r3]
 800128c:	2308      	movs	r3, #8
 800128e:	f8cd a00c 	str.w	sl, [sp, #12]
 8001292:	9302      	str	r3, [sp, #8]
 8001294:	4638      	mov	r0, r7
 8001296:	4641      	mov	r1, r8
 8001298:	beab      	bkpt	0x00ab
 800129a:	4607      	mov	r7, r0
 800129c:	602f      	str	r7, [r5, #0]
 800129e:	682b      	ldr	r3, [r5, #0]
 80012a0:	3301      	adds	r3, #1
 80012a2:	bf02      	ittt	eq
 80012a4:	4b0c      	ldreq	r3, [pc, #48]	; (80012d8 <initialise_monitor_handles+0xb4>)
 80012a6:	681b      	ldreq	r3, [r3, #0]
 80012a8:	602b      	streq	r3, [r5, #0]
 80012aa:	6833      	ldr	r3, [r6, #0]
 80012ac:	6023      	str	r3, [r4, #0]
 80012ae:	2600      	movs	r6, #0
 80012b0:	6066      	str	r6, [r4, #4]
 80012b2:	f7ff ffab 	bl	800120c <_has_ext_stdout_stderr>
 80012b6:	b130      	cbz	r0, 80012c6 <initialise_monitor_handles+0xa2>
 80012b8:	4b07      	ldr	r3, [pc, #28]	; (80012d8 <initialise_monitor_handles+0xb4>)
 80012ba:	681b      	ldr	r3, [r3, #0]
 80012bc:	e9c4 3602 	strd	r3, r6, [r4, #8]
 80012c0:	682b      	ldr	r3, [r5, #0]
 80012c2:	e9c4 3604 	strd	r3, r6, [r4, #16]
 80012c6:	b005      	add	sp, #20
 80012c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80012cc:	200000a4 	.word	0x200000a4
 80012d0:	200000ac 	.word	0x200000ac
 80012d4:	200000a0 	.word	0x200000a0
 80012d8:	200000a8 	.word	0x200000a8
 80012dc:	080013d6 	.word	0x080013d6

080012e0 <_isatty>:
 80012e0:	b570      	push	{r4, r5, r6, lr}
 80012e2:	f7ff fd73 	bl	8000dcc <findslot>
 80012e6:	2509      	movs	r5, #9
 80012e8:	4604      	mov	r4, r0
 80012ea:	b920      	cbnz	r0, 80012f6 <_isatty+0x16>
 80012ec:	f7ff f878 	bl	80003e0 <__errno>
 80012f0:	6005      	str	r5, [r0, #0]
 80012f2:	4620      	mov	r0, r4
 80012f4:	bd70      	pop	{r4, r5, r6, pc}
 80012f6:	4628      	mov	r0, r5
 80012f8:	4621      	mov	r1, r4
 80012fa:	beab      	bkpt	0x00ab
 80012fc:	4604      	mov	r4, r0
 80012fe:	2c01      	cmp	r4, #1
 8001300:	d0f7      	beq.n	80012f2 <_isatty+0x12>
 8001302:	f7ff f86d 	bl	80003e0 <__errno>
 8001306:	2400      	movs	r4, #0
 8001308:	4605      	mov	r5, r0
 800130a:	2613      	movs	r6, #19
 800130c:	4630      	mov	r0, r6
 800130e:	4621      	mov	r1, r4
 8001310:	beab      	bkpt	0x00ab
 8001312:	4606      	mov	r6, r0
 8001314:	602e      	str	r6, [r5, #0]
 8001316:	e7ec      	b.n	80012f2 <_isatty+0x12>

08001318 <_init>:
 8001318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800131a:	bf00      	nop
 800131c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800131e:	bc08      	pop	{r3}
 8001320:	469e      	mov	lr, r3
 8001322:	4770      	bx	lr

08001324 <_fini>:
 8001324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001326:	bf00      	nop
 8001328:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800132a:	bc08      	pop	{r3}
 800132c:	469e      	mov	lr, r3
 800132e:	4770      	bx	lr
