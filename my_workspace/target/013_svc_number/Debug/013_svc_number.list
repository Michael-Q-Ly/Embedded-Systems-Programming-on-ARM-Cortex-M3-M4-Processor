
013_svc_number.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001814  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000234  080019c4  080019c4  000119c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001bf8  08001bf8  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  08001bf8  08001bf8  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001bf8  08001bf8  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001bf8  08001bf8  00011bf8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001bfc  08001bfc  00011bfc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  08001c00  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000e4  2000006c  08001c6c  0002006c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000150  08001c6c  00020150  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001418  00000000  00000000  00020096  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003ac  00000000  00000000  000214ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000078  00000000  00000000  00021860  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000050  00000000  00000000  000218d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000022a3  00000000  00000000  00021928  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b63  00000000  00000000  00023bcb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000841f  00000000  00000000  0002472e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0002cb4d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c88  00000000  00000000  0002cba0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000006c 	.word	0x2000006c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080019ac 	.word	0x080019ac

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000070 	.word	0x20000070
 80001ec:	080019ac 	.word	0x080019ac

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <main>:
extern void initialise_monitor_handles(void) ;									// Debugger
// 1. Create a function that operates in Thread mode using MSP
__attribute__ ( (naked) ) void SVC_Handler( void ) ;											// Look into startup file for this
void SVC_Handler_c(uint32_t *pBaseOfStackFrame) ;

int main(void) {
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b082      	sub	sp, #8
 80002a4:	af00      	add	r7, sp, #0
	initialise_monitor_handles() ;                                          	// Debugger
 80002a6:	f001 fb07 	bl	80018b8 <initialise_monitor_handles>
	//    SVC_Number = *( (next_ins_addr_after_svc) - 2 ).
	// 5. Return to Thread mode after adding 4 to the SVC number
	// 6. Print the value of the data returned

	// 2. Create an SVC exception to create a stack frame in stack memory
	__asm ( "SVC #0x5" ) ;								// Takes you to SVC_Handler assembly function
 80002aa:	df05      	svc	5

	uint32_t svc_number_altered ;
	__asm volatile ( "MOV %0, R0" : "=r"( svc_number_altered ) : : ) ;
 80002ac:	4603      	mov	r3, r0
 80002ae:	607b      	str	r3, [r7, #4]
	printf( "Altered SVC number in Thread Mode is: %ld\n", svc_number_altered ) ;
 80002b0:	6879      	ldr	r1, [r7, #4]
 80002b2:	4802      	ldr	r0, [pc, #8]	; (80002bc <main+0x1c>)
 80002b4:	f000 f90c 	bl	80004d0 <iprintf>

	/* Loop forever */
	for(;;);
 80002b8:	e7fe      	b.n	80002b8 <main+0x18>
 80002ba:	bf00      	nop
 80002bc:	080019c4 	.word	0x080019c4

080002c0 <SVC_Handler>:
}



__attribute__ ( (naked) ) void SVC_Handler( void ) {
	__asm ( "MRS r0, MSP" ) ;							// Store the MSP special reg into the R0 reg
 80002c0:	f3ef 8008 	mrs	r0, MSP
	__asm ( "B SVC_Handler_c" ) ;							// and branch to the SVC Handler C function
 80002c4:	f000 b802 	b.w	80002cc <SVC_Handler_c>
}
 80002c8:	bf00      	nop
	...

080002cc <SVC_Handler_c>:

void SVC_Handler_c(uint32_t *pBaseOfStackFrame) {
 80002cc:	b580      	push	{r7, lr}
 80002ce:	b084      	sub	sp, #16
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	6078      	str	r0, [r7, #4]
	printf( "In SVC Handler\n" ) ;
 80002d4:	482a      	ldr	r0, [pc, #168]	; (8000380 <SVC_Handler_c+0xb4>)
 80002d6:	f000 f981 	bl	80005dc <puts>

	// The SVC Handler function above uses R0 as the first argument of the new stack frame.
	// 3. Get the value of MSP and PC
	printf( "The value of R0 is:   %lx\n", pBaseOfStackFrame[0] ) ;
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	4619      	mov	r1, r3
 80002e0:	4828      	ldr	r0, [pc, #160]	; (8000384 <SVC_Handler_c+0xb8>)
 80002e2:	f000 f8f5 	bl	80004d0 <iprintf>
	printf( "The value of R1 is:   %lx\n", pBaseOfStackFrame[1] ) ;
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	3304      	adds	r3, #4
 80002ea:	681b      	ldr	r3, [r3, #0]
 80002ec:	4619      	mov	r1, r3
 80002ee:	4826      	ldr	r0, [pc, #152]	; (8000388 <SVC_Handler_c+0xbc>)
 80002f0:	f000 f8ee 	bl	80004d0 <iprintf>
	printf( "The value of R2 is:   %lx\n", pBaseOfStackFrame[2] ) ;
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	3308      	adds	r3, #8
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	4619      	mov	r1, r3
 80002fc:	4823      	ldr	r0, [pc, #140]	; (800038c <SVC_Handler_c+0xc0>)
 80002fe:	f000 f8e7 	bl	80004d0 <iprintf>
	printf( "The value of R3 is:   %lx\n", pBaseOfStackFrame[3] ) ;
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	330c      	adds	r3, #12
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	4619      	mov	r1, r3
 800030a:	4821      	ldr	r0, [pc, #132]	; (8000390 <SVC_Handler_c+0xc4>)
 800030c:	f000 f8e0 	bl	80004d0 <iprintf>
	printf( "The value of R12 is:  %lx\n", pBaseOfStackFrame[4] ) ;
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	3310      	adds	r3, #16
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	4619      	mov	r1, r3
 8000318:	481e      	ldr	r0, [pc, #120]	; (8000394 <SVC_Handler_c+0xc8>)
 800031a:	f000 f8d9 	bl	80004d0 <iprintf>
	printf( "The value of LR is:   %lx\n", pBaseOfStackFrame[5] ) ;
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	3314      	adds	r3, #20
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	4619      	mov	r1, r3
 8000326:	481c      	ldr	r0, [pc, #112]	; (8000398 <SVC_Handler_c+0xcc>)
 8000328:	f000 f8d2 	bl	80004d0 <iprintf>
	printf( "The value of PC is:   %lx\n", pBaseOfStackFrame[6] ) ;
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	3318      	adds	r3, #24
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	4619      	mov	r1, r3
 8000334:	4819      	ldr	r0, [pc, #100]	; (800039c <SVC_Handler_c+0xd0>)
 8000336:	f000 f8cb 	bl	80004d0 <iprintf>
	printf( "The value of xPSR is: %lx\n", pBaseOfStackFrame[7] ) ;
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	331c      	adds	r3, #28
 800033e:	681b      	ldr	r3, [r3, #0]
 8000340:	4619      	mov	r1, r3
 8000342:	4817      	ldr	r0, [pc, #92]	; (80003a0 <SVC_Handler_c+0xd4>)
 8000344:	f000 f8c4 	bl	80004d0 <iprintf>
	
	// 3.1 Add 6 to MSP to obtain PC
	uint8_t *pProgram_counter = ( uint8_t* )( pBaseOfStackFrame[6] ) ;		// Make these byte-addressable!
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	3318      	adds	r3, #24
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	60fb      	str	r3, [r7, #12]
	pProgram_counter -= 2 ;
 8000350:	68fb      	ldr	r3, [r7, #12]
 8000352:	3b02      	subs	r3, #2
 8000354:	60fb      	str	r3, [r7, #12]

	// 4. Extract the opcode
	uint8_t svc_number ;
	svc_number = *pProgram_counter ;
 8000356:	68fb      	ldr	r3, [r7, #12]
 8000358:	781b      	ldrb	r3, [r3, #0]
 800035a:	72fb      	strb	r3, [r7, #11]

	printf( "The SVC Number in Handler Mode is: %d\n", svc_number ) ;
 800035c:	7afb      	ldrb	r3, [r7, #11]
 800035e:	4619      	mov	r1, r3
 8000360:	4810      	ldr	r0, [pc, #64]	; (80003a4 <SVC_Handler_c+0xd8>)
 8000362:	f000 f8b5 	bl	80004d0 <iprintf>

	// 5. Return to Thread mode after adding 4 to the SVC number
	printf( "Adding 4 to the svc number and returning to Thread Mode:\n" ) ;
 8000366:	4810      	ldr	r0, [pc, #64]	; (80003a8 <SVC_Handler_c+0xdc>)
 8000368:	f000 f938 	bl	80005dc <puts>
	svc_number += 4 ;
 800036c:	7afb      	ldrb	r3, [r7, #11]
 800036e:	3304      	adds	r3, #4
 8000370:	72fb      	strb	r3, [r7, #11]
	pBaseOfStackFrame[0] = svc_number ;
 8000372:	7afa      	ldrb	r2, [r7, #11]
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	601a      	str	r2, [r3, #0]
}
 8000378:	bf00      	nop
 800037a:	3710      	adds	r7, #16
 800037c:	46bd      	mov	sp, r7
 800037e:	bd80      	pop	{r7, pc}
 8000380:	080019f0 	.word	0x080019f0
 8000384:	08001a00 	.word	0x08001a00
 8000388:	08001a1c 	.word	0x08001a1c
 800038c:	08001a38 	.word	0x08001a38
 8000390:	08001a54 	.word	0x08001a54
 8000394:	08001a70 	.word	0x08001a70
 8000398:	08001a8c 	.word	0x08001a8c
 800039c:	08001aa8 	.word	0x08001aa8
 80003a0:	08001ac4 	.word	0x08001ac4
 80003a4:	08001ae0 	.word	0x08001ae0
 80003a8:	08001b08 	.word	0x08001b08

080003ac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003ac:	b580      	push	{r7, lr}
 80003ae:	b086      	sub	sp, #24
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003b4:	4a14      	ldr	r2, [pc, #80]	; (8000408 <_sbrk+0x5c>)
 80003b6:	4b15      	ldr	r3, [pc, #84]	; (800040c <_sbrk+0x60>)
 80003b8:	1ad3      	subs	r3, r2, r3
 80003ba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003bc:	697b      	ldr	r3, [r7, #20]
 80003be:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003c0:	4b13      	ldr	r3, [pc, #76]	; (8000410 <_sbrk+0x64>)
 80003c2:	681b      	ldr	r3, [r3, #0]
 80003c4:	2b00      	cmp	r3, #0
 80003c6:	d102      	bne.n	80003ce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003c8:	4b11      	ldr	r3, [pc, #68]	; (8000410 <_sbrk+0x64>)
 80003ca:	4a12      	ldr	r2, [pc, #72]	; (8000414 <_sbrk+0x68>)
 80003cc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003ce:	4b10      	ldr	r3, [pc, #64]	; (8000410 <_sbrk+0x64>)
 80003d0:	681a      	ldr	r2, [r3, #0]
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	4413      	add	r3, r2
 80003d6:	693a      	ldr	r2, [r7, #16]
 80003d8:	429a      	cmp	r2, r3
 80003da:	d207      	bcs.n	80003ec <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003dc:	f000 f846 	bl	800046c <__errno>
 80003e0:	4603      	mov	r3, r0
 80003e2:	220c      	movs	r2, #12
 80003e4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003e6:	f04f 33ff 	mov.w	r3, #4294967295
 80003ea:	e009      	b.n	8000400 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003ec:	4b08      	ldr	r3, [pc, #32]	; (8000410 <_sbrk+0x64>)
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003f2:	4b07      	ldr	r3, [pc, #28]	; (8000410 <_sbrk+0x64>)
 80003f4:	681a      	ldr	r2, [r3, #0]
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	4413      	add	r3, r2
 80003fa:	4a05      	ldr	r2, [pc, #20]	; (8000410 <_sbrk+0x64>)
 80003fc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003fe:	68fb      	ldr	r3, [r7, #12]
}
 8000400:	4618      	mov	r0, r3
 8000402:	3718      	adds	r7, #24
 8000404:	46bd      	mov	sp, r7
 8000406:	bd80      	pop	{r7, pc}
 8000408:	20030000 	.word	0x20030000
 800040c:	00000400 	.word	0x00000400
 8000410:	20000088 	.word	0x20000088
 8000414:	20000150 	.word	0x20000150

08000418 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000418:	480d      	ldr	r0, [pc, #52]	; (8000450 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800041a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800041c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000420:	480c      	ldr	r0, [pc, #48]	; (8000454 <LoopForever+0x6>)
  ldr r1, =_edata
 8000422:	490d      	ldr	r1, [pc, #52]	; (8000458 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000424:	4a0d      	ldr	r2, [pc, #52]	; (800045c <LoopForever+0xe>)
  movs r3, #0
 8000426:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000428:	e002      	b.n	8000430 <LoopCopyDataInit>

0800042a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800042a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800042c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800042e:	3304      	adds	r3, #4

08000430 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000430:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000432:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000434:	d3f9      	bcc.n	800042a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000436:	4a0a      	ldr	r2, [pc, #40]	; (8000460 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000438:	4c0a      	ldr	r4, [pc, #40]	; (8000464 <LoopForever+0x16>)
  movs r3, #0
 800043a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800043c:	e001      	b.n	8000442 <LoopFillZerobss>

0800043e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800043e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000440:	3204      	adds	r2, #4

08000442 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000442:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000444:	d3fb      	bcc.n	800043e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000446:	f000 f817 	bl	8000478 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800044a:	f7ff ff29 	bl	80002a0 <main>

0800044e <LoopForever>:

LoopForever:
    b LoopForever
 800044e:	e7fe      	b.n	800044e <LoopForever>
  ldr   r0, =_estack
 8000450:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000454:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000458:	2000006c 	.word	0x2000006c
  ldr r2, =_sidata
 800045c:	08001c00 	.word	0x08001c00
  ldr r2, =_sbss
 8000460:	2000006c 	.word	0x2000006c
  ldr r4, =_ebss
 8000464:	20000150 	.word	0x20000150

08000468 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000468:	e7fe      	b.n	8000468 <ADC_IRQHandler>
	...

0800046c <__errno>:
 800046c:	4b01      	ldr	r3, [pc, #4]	; (8000474 <__errno+0x8>)
 800046e:	6818      	ldr	r0, [r3, #0]
 8000470:	4770      	bx	lr
 8000472:	bf00      	nop
 8000474:	20000000 	.word	0x20000000

08000478 <__libc_init_array>:
 8000478:	b570      	push	{r4, r5, r6, lr}
 800047a:	4d0d      	ldr	r5, [pc, #52]	; (80004b0 <__libc_init_array+0x38>)
 800047c:	4c0d      	ldr	r4, [pc, #52]	; (80004b4 <__libc_init_array+0x3c>)
 800047e:	1b64      	subs	r4, r4, r5
 8000480:	10a4      	asrs	r4, r4, #2
 8000482:	2600      	movs	r6, #0
 8000484:	42a6      	cmp	r6, r4
 8000486:	d109      	bne.n	800049c <__libc_init_array+0x24>
 8000488:	4d0b      	ldr	r5, [pc, #44]	; (80004b8 <__libc_init_array+0x40>)
 800048a:	4c0c      	ldr	r4, [pc, #48]	; (80004bc <__libc_init_array+0x44>)
 800048c:	f001 fa8e 	bl	80019ac <_init>
 8000490:	1b64      	subs	r4, r4, r5
 8000492:	10a4      	asrs	r4, r4, #2
 8000494:	2600      	movs	r6, #0
 8000496:	42a6      	cmp	r6, r4
 8000498:	d105      	bne.n	80004a6 <__libc_init_array+0x2e>
 800049a:	bd70      	pop	{r4, r5, r6, pc}
 800049c:	f855 3b04 	ldr.w	r3, [r5], #4
 80004a0:	4798      	blx	r3
 80004a2:	3601      	adds	r6, #1
 80004a4:	e7ee      	b.n	8000484 <__libc_init_array+0xc>
 80004a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80004aa:	4798      	blx	r3
 80004ac:	3601      	adds	r6, #1
 80004ae:	e7f2      	b.n	8000496 <__libc_init_array+0x1e>
 80004b0:	08001bf8 	.word	0x08001bf8
 80004b4:	08001bf8 	.word	0x08001bf8
 80004b8:	08001bf8 	.word	0x08001bf8
 80004bc:	08001bfc 	.word	0x08001bfc

080004c0 <memset>:
 80004c0:	4402      	add	r2, r0
 80004c2:	4603      	mov	r3, r0
 80004c4:	4293      	cmp	r3, r2
 80004c6:	d100      	bne.n	80004ca <memset+0xa>
 80004c8:	4770      	bx	lr
 80004ca:	f803 1b01 	strb.w	r1, [r3], #1
 80004ce:	e7f9      	b.n	80004c4 <memset+0x4>

080004d0 <iprintf>:
 80004d0:	b40f      	push	{r0, r1, r2, r3}
 80004d2:	4b0a      	ldr	r3, [pc, #40]	; (80004fc <iprintf+0x2c>)
 80004d4:	b513      	push	{r0, r1, r4, lr}
 80004d6:	681c      	ldr	r4, [r3, #0]
 80004d8:	b124      	cbz	r4, 80004e4 <iprintf+0x14>
 80004da:	69a3      	ldr	r3, [r4, #24]
 80004dc:	b913      	cbnz	r3, 80004e4 <iprintf+0x14>
 80004de:	4620      	mov	r0, r4
 80004e0:	f000 fa5e 	bl	80009a0 <__sinit>
 80004e4:	ab05      	add	r3, sp, #20
 80004e6:	9a04      	ldr	r2, [sp, #16]
 80004e8:	68a1      	ldr	r1, [r4, #8]
 80004ea:	9301      	str	r3, [sp, #4]
 80004ec:	4620      	mov	r0, r4
 80004ee:	f000 fc2b 	bl	8000d48 <_vfiprintf_r>
 80004f2:	b002      	add	sp, #8
 80004f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004f8:	b004      	add	sp, #16
 80004fa:	4770      	bx	lr
 80004fc:	20000000 	.word	0x20000000

08000500 <_puts_r>:
 8000500:	b570      	push	{r4, r5, r6, lr}
 8000502:	460e      	mov	r6, r1
 8000504:	4605      	mov	r5, r0
 8000506:	b118      	cbz	r0, 8000510 <_puts_r+0x10>
 8000508:	6983      	ldr	r3, [r0, #24]
 800050a:	b90b      	cbnz	r3, 8000510 <_puts_r+0x10>
 800050c:	f000 fa48 	bl	80009a0 <__sinit>
 8000510:	69ab      	ldr	r3, [r5, #24]
 8000512:	68ac      	ldr	r4, [r5, #8]
 8000514:	b913      	cbnz	r3, 800051c <_puts_r+0x1c>
 8000516:	4628      	mov	r0, r5
 8000518:	f000 fa42 	bl	80009a0 <__sinit>
 800051c:	4b2c      	ldr	r3, [pc, #176]	; (80005d0 <_puts_r+0xd0>)
 800051e:	429c      	cmp	r4, r3
 8000520:	d120      	bne.n	8000564 <_puts_r+0x64>
 8000522:	686c      	ldr	r4, [r5, #4]
 8000524:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000526:	07db      	lsls	r3, r3, #31
 8000528:	d405      	bmi.n	8000536 <_puts_r+0x36>
 800052a:	89a3      	ldrh	r3, [r4, #12]
 800052c:	0598      	lsls	r0, r3, #22
 800052e:	d402      	bmi.n	8000536 <_puts_r+0x36>
 8000530:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000532:	f000 fad3 	bl	8000adc <__retarget_lock_acquire_recursive>
 8000536:	89a3      	ldrh	r3, [r4, #12]
 8000538:	0719      	lsls	r1, r3, #28
 800053a:	d51d      	bpl.n	8000578 <_puts_r+0x78>
 800053c:	6923      	ldr	r3, [r4, #16]
 800053e:	b1db      	cbz	r3, 8000578 <_puts_r+0x78>
 8000540:	3e01      	subs	r6, #1
 8000542:	68a3      	ldr	r3, [r4, #8]
 8000544:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000548:	3b01      	subs	r3, #1
 800054a:	60a3      	str	r3, [r4, #8]
 800054c:	bb39      	cbnz	r1, 800059e <_puts_r+0x9e>
 800054e:	2b00      	cmp	r3, #0
 8000550:	da38      	bge.n	80005c4 <_puts_r+0xc4>
 8000552:	4622      	mov	r2, r4
 8000554:	210a      	movs	r1, #10
 8000556:	4628      	mov	r0, r5
 8000558:	f000 f848 	bl	80005ec <__swbuf_r>
 800055c:	3001      	adds	r0, #1
 800055e:	d011      	beq.n	8000584 <_puts_r+0x84>
 8000560:	250a      	movs	r5, #10
 8000562:	e011      	b.n	8000588 <_puts_r+0x88>
 8000564:	4b1b      	ldr	r3, [pc, #108]	; (80005d4 <_puts_r+0xd4>)
 8000566:	429c      	cmp	r4, r3
 8000568:	d101      	bne.n	800056e <_puts_r+0x6e>
 800056a:	68ac      	ldr	r4, [r5, #8]
 800056c:	e7da      	b.n	8000524 <_puts_r+0x24>
 800056e:	4b1a      	ldr	r3, [pc, #104]	; (80005d8 <_puts_r+0xd8>)
 8000570:	429c      	cmp	r4, r3
 8000572:	bf08      	it	eq
 8000574:	68ec      	ldreq	r4, [r5, #12]
 8000576:	e7d5      	b.n	8000524 <_puts_r+0x24>
 8000578:	4621      	mov	r1, r4
 800057a:	4628      	mov	r0, r5
 800057c:	f000 f888 	bl	8000690 <__swsetup_r>
 8000580:	2800      	cmp	r0, #0
 8000582:	d0dd      	beq.n	8000540 <_puts_r+0x40>
 8000584:	f04f 35ff 	mov.w	r5, #4294967295
 8000588:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800058a:	07da      	lsls	r2, r3, #31
 800058c:	d405      	bmi.n	800059a <_puts_r+0x9a>
 800058e:	89a3      	ldrh	r3, [r4, #12]
 8000590:	059b      	lsls	r3, r3, #22
 8000592:	d402      	bmi.n	800059a <_puts_r+0x9a>
 8000594:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000596:	f000 faa2 	bl	8000ade <__retarget_lock_release_recursive>
 800059a:	4628      	mov	r0, r5
 800059c:	bd70      	pop	{r4, r5, r6, pc}
 800059e:	2b00      	cmp	r3, #0
 80005a0:	da04      	bge.n	80005ac <_puts_r+0xac>
 80005a2:	69a2      	ldr	r2, [r4, #24]
 80005a4:	429a      	cmp	r2, r3
 80005a6:	dc06      	bgt.n	80005b6 <_puts_r+0xb6>
 80005a8:	290a      	cmp	r1, #10
 80005aa:	d004      	beq.n	80005b6 <_puts_r+0xb6>
 80005ac:	6823      	ldr	r3, [r4, #0]
 80005ae:	1c5a      	adds	r2, r3, #1
 80005b0:	6022      	str	r2, [r4, #0]
 80005b2:	7019      	strb	r1, [r3, #0]
 80005b4:	e7c5      	b.n	8000542 <_puts_r+0x42>
 80005b6:	4622      	mov	r2, r4
 80005b8:	4628      	mov	r0, r5
 80005ba:	f000 f817 	bl	80005ec <__swbuf_r>
 80005be:	3001      	adds	r0, #1
 80005c0:	d1bf      	bne.n	8000542 <_puts_r+0x42>
 80005c2:	e7df      	b.n	8000584 <_puts_r+0x84>
 80005c4:	6823      	ldr	r3, [r4, #0]
 80005c6:	250a      	movs	r5, #10
 80005c8:	1c5a      	adds	r2, r3, #1
 80005ca:	6022      	str	r2, [r4, #0]
 80005cc:	701d      	strb	r5, [r3, #0]
 80005ce:	e7db      	b.n	8000588 <_puts_r+0x88>
 80005d0:	08001b68 	.word	0x08001b68
 80005d4:	08001b88 	.word	0x08001b88
 80005d8:	08001b48 	.word	0x08001b48

080005dc <puts>:
 80005dc:	4b02      	ldr	r3, [pc, #8]	; (80005e8 <puts+0xc>)
 80005de:	4601      	mov	r1, r0
 80005e0:	6818      	ldr	r0, [r3, #0]
 80005e2:	f7ff bf8d 	b.w	8000500 <_puts_r>
 80005e6:	bf00      	nop
 80005e8:	20000000 	.word	0x20000000

080005ec <__swbuf_r>:
 80005ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ee:	460e      	mov	r6, r1
 80005f0:	4614      	mov	r4, r2
 80005f2:	4605      	mov	r5, r0
 80005f4:	b118      	cbz	r0, 80005fe <__swbuf_r+0x12>
 80005f6:	6983      	ldr	r3, [r0, #24]
 80005f8:	b90b      	cbnz	r3, 80005fe <__swbuf_r+0x12>
 80005fa:	f000 f9d1 	bl	80009a0 <__sinit>
 80005fe:	4b21      	ldr	r3, [pc, #132]	; (8000684 <__swbuf_r+0x98>)
 8000600:	429c      	cmp	r4, r3
 8000602:	d12b      	bne.n	800065c <__swbuf_r+0x70>
 8000604:	686c      	ldr	r4, [r5, #4]
 8000606:	69a3      	ldr	r3, [r4, #24]
 8000608:	60a3      	str	r3, [r4, #8]
 800060a:	89a3      	ldrh	r3, [r4, #12]
 800060c:	071a      	lsls	r2, r3, #28
 800060e:	d52f      	bpl.n	8000670 <__swbuf_r+0x84>
 8000610:	6923      	ldr	r3, [r4, #16]
 8000612:	b36b      	cbz	r3, 8000670 <__swbuf_r+0x84>
 8000614:	6923      	ldr	r3, [r4, #16]
 8000616:	6820      	ldr	r0, [r4, #0]
 8000618:	1ac0      	subs	r0, r0, r3
 800061a:	6963      	ldr	r3, [r4, #20]
 800061c:	b2f6      	uxtb	r6, r6
 800061e:	4283      	cmp	r3, r0
 8000620:	4637      	mov	r7, r6
 8000622:	dc04      	bgt.n	800062e <__swbuf_r+0x42>
 8000624:	4621      	mov	r1, r4
 8000626:	4628      	mov	r0, r5
 8000628:	f000 f926 	bl	8000878 <_fflush_r>
 800062c:	bb30      	cbnz	r0, 800067c <__swbuf_r+0x90>
 800062e:	68a3      	ldr	r3, [r4, #8]
 8000630:	3b01      	subs	r3, #1
 8000632:	60a3      	str	r3, [r4, #8]
 8000634:	6823      	ldr	r3, [r4, #0]
 8000636:	1c5a      	adds	r2, r3, #1
 8000638:	6022      	str	r2, [r4, #0]
 800063a:	701e      	strb	r6, [r3, #0]
 800063c:	6963      	ldr	r3, [r4, #20]
 800063e:	3001      	adds	r0, #1
 8000640:	4283      	cmp	r3, r0
 8000642:	d004      	beq.n	800064e <__swbuf_r+0x62>
 8000644:	89a3      	ldrh	r3, [r4, #12]
 8000646:	07db      	lsls	r3, r3, #31
 8000648:	d506      	bpl.n	8000658 <__swbuf_r+0x6c>
 800064a:	2e0a      	cmp	r6, #10
 800064c:	d104      	bne.n	8000658 <__swbuf_r+0x6c>
 800064e:	4621      	mov	r1, r4
 8000650:	4628      	mov	r0, r5
 8000652:	f000 f911 	bl	8000878 <_fflush_r>
 8000656:	b988      	cbnz	r0, 800067c <__swbuf_r+0x90>
 8000658:	4638      	mov	r0, r7
 800065a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800065c:	4b0a      	ldr	r3, [pc, #40]	; (8000688 <__swbuf_r+0x9c>)
 800065e:	429c      	cmp	r4, r3
 8000660:	d101      	bne.n	8000666 <__swbuf_r+0x7a>
 8000662:	68ac      	ldr	r4, [r5, #8]
 8000664:	e7cf      	b.n	8000606 <__swbuf_r+0x1a>
 8000666:	4b09      	ldr	r3, [pc, #36]	; (800068c <__swbuf_r+0xa0>)
 8000668:	429c      	cmp	r4, r3
 800066a:	bf08      	it	eq
 800066c:	68ec      	ldreq	r4, [r5, #12]
 800066e:	e7ca      	b.n	8000606 <__swbuf_r+0x1a>
 8000670:	4621      	mov	r1, r4
 8000672:	4628      	mov	r0, r5
 8000674:	f000 f80c 	bl	8000690 <__swsetup_r>
 8000678:	2800      	cmp	r0, #0
 800067a:	d0cb      	beq.n	8000614 <__swbuf_r+0x28>
 800067c:	f04f 37ff 	mov.w	r7, #4294967295
 8000680:	e7ea      	b.n	8000658 <__swbuf_r+0x6c>
 8000682:	bf00      	nop
 8000684:	08001b68 	.word	0x08001b68
 8000688:	08001b88 	.word	0x08001b88
 800068c:	08001b48 	.word	0x08001b48

08000690 <__swsetup_r>:
 8000690:	4b32      	ldr	r3, [pc, #200]	; (800075c <__swsetup_r+0xcc>)
 8000692:	b570      	push	{r4, r5, r6, lr}
 8000694:	681d      	ldr	r5, [r3, #0]
 8000696:	4606      	mov	r6, r0
 8000698:	460c      	mov	r4, r1
 800069a:	b125      	cbz	r5, 80006a6 <__swsetup_r+0x16>
 800069c:	69ab      	ldr	r3, [r5, #24]
 800069e:	b913      	cbnz	r3, 80006a6 <__swsetup_r+0x16>
 80006a0:	4628      	mov	r0, r5
 80006a2:	f000 f97d 	bl	80009a0 <__sinit>
 80006a6:	4b2e      	ldr	r3, [pc, #184]	; (8000760 <__swsetup_r+0xd0>)
 80006a8:	429c      	cmp	r4, r3
 80006aa:	d10f      	bne.n	80006cc <__swsetup_r+0x3c>
 80006ac:	686c      	ldr	r4, [r5, #4]
 80006ae:	89a3      	ldrh	r3, [r4, #12]
 80006b0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006b4:	0719      	lsls	r1, r3, #28
 80006b6:	d42c      	bmi.n	8000712 <__swsetup_r+0x82>
 80006b8:	06dd      	lsls	r5, r3, #27
 80006ba:	d411      	bmi.n	80006e0 <__swsetup_r+0x50>
 80006bc:	2309      	movs	r3, #9
 80006be:	6033      	str	r3, [r6, #0]
 80006c0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80006c4:	81a3      	strh	r3, [r4, #12]
 80006c6:	f04f 30ff 	mov.w	r0, #4294967295
 80006ca:	e03e      	b.n	800074a <__swsetup_r+0xba>
 80006cc:	4b25      	ldr	r3, [pc, #148]	; (8000764 <__swsetup_r+0xd4>)
 80006ce:	429c      	cmp	r4, r3
 80006d0:	d101      	bne.n	80006d6 <__swsetup_r+0x46>
 80006d2:	68ac      	ldr	r4, [r5, #8]
 80006d4:	e7eb      	b.n	80006ae <__swsetup_r+0x1e>
 80006d6:	4b24      	ldr	r3, [pc, #144]	; (8000768 <__swsetup_r+0xd8>)
 80006d8:	429c      	cmp	r4, r3
 80006da:	bf08      	it	eq
 80006dc:	68ec      	ldreq	r4, [r5, #12]
 80006de:	e7e6      	b.n	80006ae <__swsetup_r+0x1e>
 80006e0:	0758      	lsls	r0, r3, #29
 80006e2:	d512      	bpl.n	800070a <__swsetup_r+0x7a>
 80006e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80006e6:	b141      	cbz	r1, 80006fa <__swsetup_r+0x6a>
 80006e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006ec:	4299      	cmp	r1, r3
 80006ee:	d002      	beq.n	80006f6 <__swsetup_r+0x66>
 80006f0:	4630      	mov	r0, r6
 80006f2:	f000 fa59 	bl	8000ba8 <_free_r>
 80006f6:	2300      	movs	r3, #0
 80006f8:	6363      	str	r3, [r4, #52]	; 0x34
 80006fa:	89a3      	ldrh	r3, [r4, #12]
 80006fc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000700:	81a3      	strh	r3, [r4, #12]
 8000702:	2300      	movs	r3, #0
 8000704:	6063      	str	r3, [r4, #4]
 8000706:	6923      	ldr	r3, [r4, #16]
 8000708:	6023      	str	r3, [r4, #0]
 800070a:	89a3      	ldrh	r3, [r4, #12]
 800070c:	f043 0308 	orr.w	r3, r3, #8
 8000710:	81a3      	strh	r3, [r4, #12]
 8000712:	6923      	ldr	r3, [r4, #16]
 8000714:	b94b      	cbnz	r3, 800072a <__swsetup_r+0x9a>
 8000716:	89a3      	ldrh	r3, [r4, #12]
 8000718:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800071c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000720:	d003      	beq.n	800072a <__swsetup_r+0x9a>
 8000722:	4621      	mov	r1, r4
 8000724:	4630      	mov	r0, r6
 8000726:	f000 f9ff 	bl	8000b28 <__smakebuf_r>
 800072a:	89a0      	ldrh	r0, [r4, #12]
 800072c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000730:	f010 0301 	ands.w	r3, r0, #1
 8000734:	d00a      	beq.n	800074c <__swsetup_r+0xbc>
 8000736:	2300      	movs	r3, #0
 8000738:	60a3      	str	r3, [r4, #8]
 800073a:	6963      	ldr	r3, [r4, #20]
 800073c:	425b      	negs	r3, r3
 800073e:	61a3      	str	r3, [r4, #24]
 8000740:	6923      	ldr	r3, [r4, #16]
 8000742:	b943      	cbnz	r3, 8000756 <__swsetup_r+0xc6>
 8000744:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000748:	d1ba      	bne.n	80006c0 <__swsetup_r+0x30>
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	0781      	lsls	r1, r0, #30
 800074e:	bf58      	it	pl
 8000750:	6963      	ldrpl	r3, [r4, #20]
 8000752:	60a3      	str	r3, [r4, #8]
 8000754:	e7f4      	b.n	8000740 <__swsetup_r+0xb0>
 8000756:	2000      	movs	r0, #0
 8000758:	e7f7      	b.n	800074a <__swsetup_r+0xba>
 800075a:	bf00      	nop
 800075c:	20000000 	.word	0x20000000
 8000760:	08001b68 	.word	0x08001b68
 8000764:	08001b88 	.word	0x08001b88
 8000768:	08001b48 	.word	0x08001b48

0800076c <__sflush_r>:
 800076c:	898a      	ldrh	r2, [r1, #12]
 800076e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000772:	4605      	mov	r5, r0
 8000774:	0710      	lsls	r0, r2, #28
 8000776:	460c      	mov	r4, r1
 8000778:	d458      	bmi.n	800082c <__sflush_r+0xc0>
 800077a:	684b      	ldr	r3, [r1, #4]
 800077c:	2b00      	cmp	r3, #0
 800077e:	dc05      	bgt.n	800078c <__sflush_r+0x20>
 8000780:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000782:	2b00      	cmp	r3, #0
 8000784:	dc02      	bgt.n	800078c <__sflush_r+0x20>
 8000786:	2000      	movs	r0, #0
 8000788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800078c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800078e:	2e00      	cmp	r6, #0
 8000790:	d0f9      	beq.n	8000786 <__sflush_r+0x1a>
 8000792:	2300      	movs	r3, #0
 8000794:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000798:	682f      	ldr	r7, [r5, #0]
 800079a:	602b      	str	r3, [r5, #0]
 800079c:	d032      	beq.n	8000804 <__sflush_r+0x98>
 800079e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80007a0:	89a3      	ldrh	r3, [r4, #12]
 80007a2:	075a      	lsls	r2, r3, #29
 80007a4:	d505      	bpl.n	80007b2 <__sflush_r+0x46>
 80007a6:	6863      	ldr	r3, [r4, #4]
 80007a8:	1ac0      	subs	r0, r0, r3
 80007aa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80007ac:	b10b      	cbz	r3, 80007b2 <__sflush_r+0x46>
 80007ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80007b0:	1ac0      	subs	r0, r0, r3
 80007b2:	2300      	movs	r3, #0
 80007b4:	4602      	mov	r2, r0
 80007b6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007b8:	6a21      	ldr	r1, [r4, #32]
 80007ba:	4628      	mov	r0, r5
 80007bc:	47b0      	blx	r6
 80007be:	1c43      	adds	r3, r0, #1
 80007c0:	89a3      	ldrh	r3, [r4, #12]
 80007c2:	d106      	bne.n	80007d2 <__sflush_r+0x66>
 80007c4:	6829      	ldr	r1, [r5, #0]
 80007c6:	291d      	cmp	r1, #29
 80007c8:	d82c      	bhi.n	8000824 <__sflush_r+0xb8>
 80007ca:	4a2a      	ldr	r2, [pc, #168]	; (8000874 <__sflush_r+0x108>)
 80007cc:	40ca      	lsrs	r2, r1
 80007ce:	07d6      	lsls	r6, r2, #31
 80007d0:	d528      	bpl.n	8000824 <__sflush_r+0xb8>
 80007d2:	2200      	movs	r2, #0
 80007d4:	6062      	str	r2, [r4, #4]
 80007d6:	04d9      	lsls	r1, r3, #19
 80007d8:	6922      	ldr	r2, [r4, #16]
 80007da:	6022      	str	r2, [r4, #0]
 80007dc:	d504      	bpl.n	80007e8 <__sflush_r+0x7c>
 80007de:	1c42      	adds	r2, r0, #1
 80007e0:	d101      	bne.n	80007e6 <__sflush_r+0x7a>
 80007e2:	682b      	ldr	r3, [r5, #0]
 80007e4:	b903      	cbnz	r3, 80007e8 <__sflush_r+0x7c>
 80007e6:	6560      	str	r0, [r4, #84]	; 0x54
 80007e8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007ea:	602f      	str	r7, [r5, #0]
 80007ec:	2900      	cmp	r1, #0
 80007ee:	d0ca      	beq.n	8000786 <__sflush_r+0x1a>
 80007f0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007f4:	4299      	cmp	r1, r3
 80007f6:	d002      	beq.n	80007fe <__sflush_r+0x92>
 80007f8:	4628      	mov	r0, r5
 80007fa:	f000 f9d5 	bl	8000ba8 <_free_r>
 80007fe:	2000      	movs	r0, #0
 8000800:	6360      	str	r0, [r4, #52]	; 0x34
 8000802:	e7c1      	b.n	8000788 <__sflush_r+0x1c>
 8000804:	6a21      	ldr	r1, [r4, #32]
 8000806:	2301      	movs	r3, #1
 8000808:	4628      	mov	r0, r5
 800080a:	47b0      	blx	r6
 800080c:	1c41      	adds	r1, r0, #1
 800080e:	d1c7      	bne.n	80007a0 <__sflush_r+0x34>
 8000810:	682b      	ldr	r3, [r5, #0]
 8000812:	2b00      	cmp	r3, #0
 8000814:	d0c4      	beq.n	80007a0 <__sflush_r+0x34>
 8000816:	2b1d      	cmp	r3, #29
 8000818:	d001      	beq.n	800081e <__sflush_r+0xb2>
 800081a:	2b16      	cmp	r3, #22
 800081c:	d101      	bne.n	8000822 <__sflush_r+0xb6>
 800081e:	602f      	str	r7, [r5, #0]
 8000820:	e7b1      	b.n	8000786 <__sflush_r+0x1a>
 8000822:	89a3      	ldrh	r3, [r4, #12]
 8000824:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000828:	81a3      	strh	r3, [r4, #12]
 800082a:	e7ad      	b.n	8000788 <__sflush_r+0x1c>
 800082c:	690f      	ldr	r7, [r1, #16]
 800082e:	2f00      	cmp	r7, #0
 8000830:	d0a9      	beq.n	8000786 <__sflush_r+0x1a>
 8000832:	0793      	lsls	r3, r2, #30
 8000834:	680e      	ldr	r6, [r1, #0]
 8000836:	bf08      	it	eq
 8000838:	694b      	ldreq	r3, [r1, #20]
 800083a:	600f      	str	r7, [r1, #0]
 800083c:	bf18      	it	ne
 800083e:	2300      	movne	r3, #0
 8000840:	eba6 0807 	sub.w	r8, r6, r7
 8000844:	608b      	str	r3, [r1, #8]
 8000846:	f1b8 0f00 	cmp.w	r8, #0
 800084a:	dd9c      	ble.n	8000786 <__sflush_r+0x1a>
 800084c:	6a21      	ldr	r1, [r4, #32]
 800084e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000850:	4643      	mov	r3, r8
 8000852:	463a      	mov	r2, r7
 8000854:	4628      	mov	r0, r5
 8000856:	47b0      	blx	r6
 8000858:	2800      	cmp	r0, #0
 800085a:	dc06      	bgt.n	800086a <__sflush_r+0xfe>
 800085c:	89a3      	ldrh	r3, [r4, #12]
 800085e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000862:	81a3      	strh	r3, [r4, #12]
 8000864:	f04f 30ff 	mov.w	r0, #4294967295
 8000868:	e78e      	b.n	8000788 <__sflush_r+0x1c>
 800086a:	4407      	add	r7, r0
 800086c:	eba8 0800 	sub.w	r8, r8, r0
 8000870:	e7e9      	b.n	8000846 <__sflush_r+0xda>
 8000872:	bf00      	nop
 8000874:	20400001 	.word	0x20400001

08000878 <_fflush_r>:
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	690b      	ldr	r3, [r1, #16]
 800087c:	4605      	mov	r5, r0
 800087e:	460c      	mov	r4, r1
 8000880:	b913      	cbnz	r3, 8000888 <_fflush_r+0x10>
 8000882:	2500      	movs	r5, #0
 8000884:	4628      	mov	r0, r5
 8000886:	bd38      	pop	{r3, r4, r5, pc}
 8000888:	b118      	cbz	r0, 8000892 <_fflush_r+0x1a>
 800088a:	6983      	ldr	r3, [r0, #24]
 800088c:	b90b      	cbnz	r3, 8000892 <_fflush_r+0x1a>
 800088e:	f000 f887 	bl	80009a0 <__sinit>
 8000892:	4b14      	ldr	r3, [pc, #80]	; (80008e4 <_fflush_r+0x6c>)
 8000894:	429c      	cmp	r4, r3
 8000896:	d11b      	bne.n	80008d0 <_fflush_r+0x58>
 8000898:	686c      	ldr	r4, [r5, #4]
 800089a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800089e:	2b00      	cmp	r3, #0
 80008a0:	d0ef      	beq.n	8000882 <_fflush_r+0xa>
 80008a2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80008a4:	07d0      	lsls	r0, r2, #31
 80008a6:	d404      	bmi.n	80008b2 <_fflush_r+0x3a>
 80008a8:	0599      	lsls	r1, r3, #22
 80008aa:	d402      	bmi.n	80008b2 <_fflush_r+0x3a>
 80008ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008ae:	f000 f915 	bl	8000adc <__retarget_lock_acquire_recursive>
 80008b2:	4628      	mov	r0, r5
 80008b4:	4621      	mov	r1, r4
 80008b6:	f7ff ff59 	bl	800076c <__sflush_r>
 80008ba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008bc:	07da      	lsls	r2, r3, #31
 80008be:	4605      	mov	r5, r0
 80008c0:	d4e0      	bmi.n	8000884 <_fflush_r+0xc>
 80008c2:	89a3      	ldrh	r3, [r4, #12]
 80008c4:	059b      	lsls	r3, r3, #22
 80008c6:	d4dd      	bmi.n	8000884 <_fflush_r+0xc>
 80008c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008ca:	f000 f908 	bl	8000ade <__retarget_lock_release_recursive>
 80008ce:	e7d9      	b.n	8000884 <_fflush_r+0xc>
 80008d0:	4b05      	ldr	r3, [pc, #20]	; (80008e8 <_fflush_r+0x70>)
 80008d2:	429c      	cmp	r4, r3
 80008d4:	d101      	bne.n	80008da <_fflush_r+0x62>
 80008d6:	68ac      	ldr	r4, [r5, #8]
 80008d8:	e7df      	b.n	800089a <_fflush_r+0x22>
 80008da:	4b04      	ldr	r3, [pc, #16]	; (80008ec <_fflush_r+0x74>)
 80008dc:	429c      	cmp	r4, r3
 80008de:	bf08      	it	eq
 80008e0:	68ec      	ldreq	r4, [r5, #12]
 80008e2:	e7da      	b.n	800089a <_fflush_r+0x22>
 80008e4:	08001b68 	.word	0x08001b68
 80008e8:	08001b88 	.word	0x08001b88
 80008ec:	08001b48 	.word	0x08001b48

080008f0 <std>:
 80008f0:	2300      	movs	r3, #0
 80008f2:	b510      	push	{r4, lr}
 80008f4:	4604      	mov	r4, r0
 80008f6:	e9c0 3300 	strd	r3, r3, [r0]
 80008fa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80008fe:	6083      	str	r3, [r0, #8]
 8000900:	8181      	strh	r1, [r0, #12]
 8000902:	6643      	str	r3, [r0, #100]	; 0x64
 8000904:	81c2      	strh	r2, [r0, #14]
 8000906:	6183      	str	r3, [r0, #24]
 8000908:	4619      	mov	r1, r3
 800090a:	2208      	movs	r2, #8
 800090c:	305c      	adds	r0, #92	; 0x5c
 800090e:	f7ff fdd7 	bl	80004c0 <memset>
 8000912:	4b05      	ldr	r3, [pc, #20]	; (8000928 <std+0x38>)
 8000914:	6263      	str	r3, [r4, #36]	; 0x24
 8000916:	4b05      	ldr	r3, [pc, #20]	; (800092c <std+0x3c>)
 8000918:	62a3      	str	r3, [r4, #40]	; 0x28
 800091a:	4b05      	ldr	r3, [pc, #20]	; (8000930 <std+0x40>)
 800091c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800091e:	4b05      	ldr	r3, [pc, #20]	; (8000934 <std+0x44>)
 8000920:	6224      	str	r4, [r4, #32]
 8000922:	6323      	str	r3, [r4, #48]	; 0x30
 8000924:	bd10      	pop	{r4, pc}
 8000926:	bf00      	nop
 8000928:	080012f1 	.word	0x080012f1
 800092c:	08001313 	.word	0x08001313
 8000930:	0800134b 	.word	0x0800134b
 8000934:	0800136f 	.word	0x0800136f

08000938 <_cleanup_r>:
 8000938:	4901      	ldr	r1, [pc, #4]	; (8000940 <_cleanup_r+0x8>)
 800093a:	f000 b8af 	b.w	8000a9c <_fwalk_reent>
 800093e:	bf00      	nop
 8000940:	08000879 	.word	0x08000879

08000944 <__sfmoreglue>:
 8000944:	b570      	push	{r4, r5, r6, lr}
 8000946:	1e4a      	subs	r2, r1, #1
 8000948:	2568      	movs	r5, #104	; 0x68
 800094a:	4355      	muls	r5, r2
 800094c:	460e      	mov	r6, r1
 800094e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000952:	f000 f977 	bl	8000c44 <_malloc_r>
 8000956:	4604      	mov	r4, r0
 8000958:	b140      	cbz	r0, 800096c <__sfmoreglue+0x28>
 800095a:	2100      	movs	r1, #0
 800095c:	e9c0 1600 	strd	r1, r6, [r0]
 8000960:	300c      	adds	r0, #12
 8000962:	60a0      	str	r0, [r4, #8]
 8000964:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000968:	f7ff fdaa 	bl	80004c0 <memset>
 800096c:	4620      	mov	r0, r4
 800096e:	bd70      	pop	{r4, r5, r6, pc}

08000970 <__sfp_lock_acquire>:
 8000970:	4801      	ldr	r0, [pc, #4]	; (8000978 <__sfp_lock_acquire+0x8>)
 8000972:	f000 b8b3 	b.w	8000adc <__retarget_lock_acquire_recursive>
 8000976:	bf00      	nop
 8000978:	20000148 	.word	0x20000148

0800097c <__sfp_lock_release>:
 800097c:	4801      	ldr	r0, [pc, #4]	; (8000984 <__sfp_lock_release+0x8>)
 800097e:	f000 b8ae 	b.w	8000ade <__retarget_lock_release_recursive>
 8000982:	bf00      	nop
 8000984:	20000148 	.word	0x20000148

08000988 <__sinit_lock_acquire>:
 8000988:	4801      	ldr	r0, [pc, #4]	; (8000990 <__sinit_lock_acquire+0x8>)
 800098a:	f000 b8a7 	b.w	8000adc <__retarget_lock_acquire_recursive>
 800098e:	bf00      	nop
 8000990:	20000143 	.word	0x20000143

08000994 <__sinit_lock_release>:
 8000994:	4801      	ldr	r0, [pc, #4]	; (800099c <__sinit_lock_release+0x8>)
 8000996:	f000 b8a2 	b.w	8000ade <__retarget_lock_release_recursive>
 800099a:	bf00      	nop
 800099c:	20000143 	.word	0x20000143

080009a0 <__sinit>:
 80009a0:	b510      	push	{r4, lr}
 80009a2:	4604      	mov	r4, r0
 80009a4:	f7ff fff0 	bl	8000988 <__sinit_lock_acquire>
 80009a8:	69a3      	ldr	r3, [r4, #24]
 80009aa:	b11b      	cbz	r3, 80009b4 <__sinit+0x14>
 80009ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80009b0:	f7ff bff0 	b.w	8000994 <__sinit_lock_release>
 80009b4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80009b8:	6523      	str	r3, [r4, #80]	; 0x50
 80009ba:	4b13      	ldr	r3, [pc, #76]	; (8000a08 <__sinit+0x68>)
 80009bc:	4a13      	ldr	r2, [pc, #76]	; (8000a0c <__sinit+0x6c>)
 80009be:	681b      	ldr	r3, [r3, #0]
 80009c0:	62a2      	str	r2, [r4, #40]	; 0x28
 80009c2:	42a3      	cmp	r3, r4
 80009c4:	bf04      	itt	eq
 80009c6:	2301      	moveq	r3, #1
 80009c8:	61a3      	streq	r3, [r4, #24]
 80009ca:	4620      	mov	r0, r4
 80009cc:	f000 f820 	bl	8000a10 <__sfp>
 80009d0:	6060      	str	r0, [r4, #4]
 80009d2:	4620      	mov	r0, r4
 80009d4:	f000 f81c 	bl	8000a10 <__sfp>
 80009d8:	60a0      	str	r0, [r4, #8]
 80009da:	4620      	mov	r0, r4
 80009dc:	f000 f818 	bl	8000a10 <__sfp>
 80009e0:	2200      	movs	r2, #0
 80009e2:	60e0      	str	r0, [r4, #12]
 80009e4:	2104      	movs	r1, #4
 80009e6:	6860      	ldr	r0, [r4, #4]
 80009e8:	f7ff ff82 	bl	80008f0 <std>
 80009ec:	68a0      	ldr	r0, [r4, #8]
 80009ee:	2201      	movs	r2, #1
 80009f0:	2109      	movs	r1, #9
 80009f2:	f7ff ff7d 	bl	80008f0 <std>
 80009f6:	68e0      	ldr	r0, [r4, #12]
 80009f8:	2202      	movs	r2, #2
 80009fa:	2112      	movs	r1, #18
 80009fc:	f7ff ff78 	bl	80008f0 <std>
 8000a00:	2301      	movs	r3, #1
 8000a02:	61a3      	str	r3, [r4, #24]
 8000a04:	e7d2      	b.n	80009ac <__sinit+0xc>
 8000a06:	bf00      	nop
 8000a08:	08001b44 	.word	0x08001b44
 8000a0c:	08000939 	.word	0x08000939

08000a10 <__sfp>:
 8000a10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a12:	4607      	mov	r7, r0
 8000a14:	f7ff ffac 	bl	8000970 <__sfp_lock_acquire>
 8000a18:	4b1e      	ldr	r3, [pc, #120]	; (8000a94 <__sfp+0x84>)
 8000a1a:	681e      	ldr	r6, [r3, #0]
 8000a1c:	69b3      	ldr	r3, [r6, #24]
 8000a1e:	b913      	cbnz	r3, 8000a26 <__sfp+0x16>
 8000a20:	4630      	mov	r0, r6
 8000a22:	f7ff ffbd 	bl	80009a0 <__sinit>
 8000a26:	3648      	adds	r6, #72	; 0x48
 8000a28:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a2c:	3b01      	subs	r3, #1
 8000a2e:	d503      	bpl.n	8000a38 <__sfp+0x28>
 8000a30:	6833      	ldr	r3, [r6, #0]
 8000a32:	b30b      	cbz	r3, 8000a78 <__sfp+0x68>
 8000a34:	6836      	ldr	r6, [r6, #0]
 8000a36:	e7f7      	b.n	8000a28 <__sfp+0x18>
 8000a38:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a3c:	b9d5      	cbnz	r5, 8000a74 <__sfp+0x64>
 8000a3e:	4b16      	ldr	r3, [pc, #88]	; (8000a98 <__sfp+0x88>)
 8000a40:	60e3      	str	r3, [r4, #12]
 8000a42:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000a46:	6665      	str	r5, [r4, #100]	; 0x64
 8000a48:	f000 f847 	bl	8000ada <__retarget_lock_init_recursive>
 8000a4c:	f7ff ff96 	bl	800097c <__sfp_lock_release>
 8000a50:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000a54:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000a58:	6025      	str	r5, [r4, #0]
 8000a5a:	61a5      	str	r5, [r4, #24]
 8000a5c:	2208      	movs	r2, #8
 8000a5e:	4629      	mov	r1, r5
 8000a60:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a64:	f7ff fd2c 	bl	80004c0 <memset>
 8000a68:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a6c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a70:	4620      	mov	r0, r4
 8000a72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a74:	3468      	adds	r4, #104	; 0x68
 8000a76:	e7d9      	b.n	8000a2c <__sfp+0x1c>
 8000a78:	2104      	movs	r1, #4
 8000a7a:	4638      	mov	r0, r7
 8000a7c:	f7ff ff62 	bl	8000944 <__sfmoreglue>
 8000a80:	4604      	mov	r4, r0
 8000a82:	6030      	str	r0, [r6, #0]
 8000a84:	2800      	cmp	r0, #0
 8000a86:	d1d5      	bne.n	8000a34 <__sfp+0x24>
 8000a88:	f7ff ff78 	bl	800097c <__sfp_lock_release>
 8000a8c:	230c      	movs	r3, #12
 8000a8e:	603b      	str	r3, [r7, #0]
 8000a90:	e7ee      	b.n	8000a70 <__sfp+0x60>
 8000a92:	bf00      	nop
 8000a94:	08001b44 	.word	0x08001b44
 8000a98:	ffff0001 	.word	0xffff0001

08000a9c <_fwalk_reent>:
 8000a9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000aa0:	4606      	mov	r6, r0
 8000aa2:	4688      	mov	r8, r1
 8000aa4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000aa8:	2700      	movs	r7, #0
 8000aaa:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000aae:	f1b9 0901 	subs.w	r9, r9, #1
 8000ab2:	d505      	bpl.n	8000ac0 <_fwalk_reent+0x24>
 8000ab4:	6824      	ldr	r4, [r4, #0]
 8000ab6:	2c00      	cmp	r4, #0
 8000ab8:	d1f7      	bne.n	8000aaa <_fwalk_reent+0xe>
 8000aba:	4638      	mov	r0, r7
 8000abc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ac0:	89ab      	ldrh	r3, [r5, #12]
 8000ac2:	2b01      	cmp	r3, #1
 8000ac4:	d907      	bls.n	8000ad6 <_fwalk_reent+0x3a>
 8000ac6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000aca:	3301      	adds	r3, #1
 8000acc:	d003      	beq.n	8000ad6 <_fwalk_reent+0x3a>
 8000ace:	4629      	mov	r1, r5
 8000ad0:	4630      	mov	r0, r6
 8000ad2:	47c0      	blx	r8
 8000ad4:	4307      	orrs	r7, r0
 8000ad6:	3568      	adds	r5, #104	; 0x68
 8000ad8:	e7e9      	b.n	8000aae <_fwalk_reent+0x12>

08000ada <__retarget_lock_init_recursive>:
 8000ada:	4770      	bx	lr

08000adc <__retarget_lock_acquire_recursive>:
 8000adc:	4770      	bx	lr

08000ade <__retarget_lock_release_recursive>:
 8000ade:	4770      	bx	lr

08000ae0 <__swhatbuf_r>:
 8000ae0:	b570      	push	{r4, r5, r6, lr}
 8000ae2:	460e      	mov	r6, r1
 8000ae4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ae8:	2900      	cmp	r1, #0
 8000aea:	b096      	sub	sp, #88	; 0x58
 8000aec:	4614      	mov	r4, r2
 8000aee:	461d      	mov	r5, r3
 8000af0:	da07      	bge.n	8000b02 <__swhatbuf_r+0x22>
 8000af2:	2300      	movs	r3, #0
 8000af4:	602b      	str	r3, [r5, #0]
 8000af6:	89b3      	ldrh	r3, [r6, #12]
 8000af8:	061a      	lsls	r2, r3, #24
 8000afa:	d410      	bmi.n	8000b1e <__swhatbuf_r+0x3e>
 8000afc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b00:	e00e      	b.n	8000b20 <__swhatbuf_r+0x40>
 8000b02:	466a      	mov	r2, sp
 8000b04:	f000 fc5a 	bl	80013bc <_fstat_r>
 8000b08:	2800      	cmp	r0, #0
 8000b0a:	dbf2      	blt.n	8000af2 <__swhatbuf_r+0x12>
 8000b0c:	9a01      	ldr	r2, [sp, #4]
 8000b0e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b12:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b16:	425a      	negs	r2, r3
 8000b18:	415a      	adcs	r2, r3
 8000b1a:	602a      	str	r2, [r5, #0]
 8000b1c:	e7ee      	b.n	8000afc <__swhatbuf_r+0x1c>
 8000b1e:	2340      	movs	r3, #64	; 0x40
 8000b20:	2000      	movs	r0, #0
 8000b22:	6023      	str	r3, [r4, #0]
 8000b24:	b016      	add	sp, #88	; 0x58
 8000b26:	bd70      	pop	{r4, r5, r6, pc}

08000b28 <__smakebuf_r>:
 8000b28:	898b      	ldrh	r3, [r1, #12]
 8000b2a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b2c:	079d      	lsls	r5, r3, #30
 8000b2e:	4606      	mov	r6, r0
 8000b30:	460c      	mov	r4, r1
 8000b32:	d507      	bpl.n	8000b44 <__smakebuf_r+0x1c>
 8000b34:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b38:	6023      	str	r3, [r4, #0]
 8000b3a:	6123      	str	r3, [r4, #16]
 8000b3c:	2301      	movs	r3, #1
 8000b3e:	6163      	str	r3, [r4, #20]
 8000b40:	b002      	add	sp, #8
 8000b42:	bd70      	pop	{r4, r5, r6, pc}
 8000b44:	ab01      	add	r3, sp, #4
 8000b46:	466a      	mov	r2, sp
 8000b48:	f7ff ffca 	bl	8000ae0 <__swhatbuf_r>
 8000b4c:	9900      	ldr	r1, [sp, #0]
 8000b4e:	4605      	mov	r5, r0
 8000b50:	4630      	mov	r0, r6
 8000b52:	f000 f877 	bl	8000c44 <_malloc_r>
 8000b56:	b948      	cbnz	r0, 8000b6c <__smakebuf_r+0x44>
 8000b58:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b5c:	059a      	lsls	r2, r3, #22
 8000b5e:	d4ef      	bmi.n	8000b40 <__smakebuf_r+0x18>
 8000b60:	f023 0303 	bic.w	r3, r3, #3
 8000b64:	f043 0302 	orr.w	r3, r3, #2
 8000b68:	81a3      	strh	r3, [r4, #12]
 8000b6a:	e7e3      	b.n	8000b34 <__smakebuf_r+0xc>
 8000b6c:	4b0d      	ldr	r3, [pc, #52]	; (8000ba4 <__smakebuf_r+0x7c>)
 8000b6e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000b70:	89a3      	ldrh	r3, [r4, #12]
 8000b72:	6020      	str	r0, [r4, #0]
 8000b74:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b78:	81a3      	strh	r3, [r4, #12]
 8000b7a:	9b00      	ldr	r3, [sp, #0]
 8000b7c:	6163      	str	r3, [r4, #20]
 8000b7e:	9b01      	ldr	r3, [sp, #4]
 8000b80:	6120      	str	r0, [r4, #16]
 8000b82:	b15b      	cbz	r3, 8000b9c <__smakebuf_r+0x74>
 8000b84:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b88:	4630      	mov	r0, r6
 8000b8a:	f000 fc29 	bl	80013e0 <_isatty_r>
 8000b8e:	b128      	cbz	r0, 8000b9c <__smakebuf_r+0x74>
 8000b90:	89a3      	ldrh	r3, [r4, #12]
 8000b92:	f023 0303 	bic.w	r3, r3, #3
 8000b96:	f043 0301 	orr.w	r3, r3, #1
 8000b9a:	81a3      	strh	r3, [r4, #12]
 8000b9c:	89a0      	ldrh	r0, [r4, #12]
 8000b9e:	4305      	orrs	r5, r0
 8000ba0:	81a5      	strh	r5, [r4, #12]
 8000ba2:	e7cd      	b.n	8000b40 <__smakebuf_r+0x18>
 8000ba4:	08000939 	.word	0x08000939

08000ba8 <_free_r>:
 8000ba8:	b538      	push	{r3, r4, r5, lr}
 8000baa:	4605      	mov	r5, r0
 8000bac:	2900      	cmp	r1, #0
 8000bae:	d045      	beq.n	8000c3c <_free_r+0x94>
 8000bb0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bb4:	1f0c      	subs	r4, r1, #4
 8000bb6:	2b00      	cmp	r3, #0
 8000bb8:	bfb8      	it	lt
 8000bba:	18e4      	addlt	r4, r4, r3
 8000bbc:	f000 fc32 	bl	8001424 <__malloc_lock>
 8000bc0:	4a1f      	ldr	r2, [pc, #124]	; (8000c40 <_free_r+0x98>)
 8000bc2:	6813      	ldr	r3, [r2, #0]
 8000bc4:	4610      	mov	r0, r2
 8000bc6:	b933      	cbnz	r3, 8000bd6 <_free_r+0x2e>
 8000bc8:	6063      	str	r3, [r4, #4]
 8000bca:	6014      	str	r4, [r2, #0]
 8000bcc:	4628      	mov	r0, r5
 8000bce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000bd2:	f000 bc2d 	b.w	8001430 <__malloc_unlock>
 8000bd6:	42a3      	cmp	r3, r4
 8000bd8:	d90b      	bls.n	8000bf2 <_free_r+0x4a>
 8000bda:	6821      	ldr	r1, [r4, #0]
 8000bdc:	1862      	adds	r2, r4, r1
 8000bde:	4293      	cmp	r3, r2
 8000be0:	bf04      	itt	eq
 8000be2:	681a      	ldreq	r2, [r3, #0]
 8000be4:	685b      	ldreq	r3, [r3, #4]
 8000be6:	6063      	str	r3, [r4, #4]
 8000be8:	bf04      	itt	eq
 8000bea:	1852      	addeq	r2, r2, r1
 8000bec:	6022      	streq	r2, [r4, #0]
 8000bee:	6004      	str	r4, [r0, #0]
 8000bf0:	e7ec      	b.n	8000bcc <_free_r+0x24>
 8000bf2:	461a      	mov	r2, r3
 8000bf4:	685b      	ldr	r3, [r3, #4]
 8000bf6:	b10b      	cbz	r3, 8000bfc <_free_r+0x54>
 8000bf8:	42a3      	cmp	r3, r4
 8000bfa:	d9fa      	bls.n	8000bf2 <_free_r+0x4a>
 8000bfc:	6811      	ldr	r1, [r2, #0]
 8000bfe:	1850      	adds	r0, r2, r1
 8000c00:	42a0      	cmp	r0, r4
 8000c02:	d10b      	bne.n	8000c1c <_free_r+0x74>
 8000c04:	6820      	ldr	r0, [r4, #0]
 8000c06:	4401      	add	r1, r0
 8000c08:	1850      	adds	r0, r2, r1
 8000c0a:	4283      	cmp	r3, r0
 8000c0c:	6011      	str	r1, [r2, #0]
 8000c0e:	d1dd      	bne.n	8000bcc <_free_r+0x24>
 8000c10:	6818      	ldr	r0, [r3, #0]
 8000c12:	685b      	ldr	r3, [r3, #4]
 8000c14:	6053      	str	r3, [r2, #4]
 8000c16:	4401      	add	r1, r0
 8000c18:	6011      	str	r1, [r2, #0]
 8000c1a:	e7d7      	b.n	8000bcc <_free_r+0x24>
 8000c1c:	d902      	bls.n	8000c24 <_free_r+0x7c>
 8000c1e:	230c      	movs	r3, #12
 8000c20:	602b      	str	r3, [r5, #0]
 8000c22:	e7d3      	b.n	8000bcc <_free_r+0x24>
 8000c24:	6820      	ldr	r0, [r4, #0]
 8000c26:	1821      	adds	r1, r4, r0
 8000c28:	428b      	cmp	r3, r1
 8000c2a:	bf04      	itt	eq
 8000c2c:	6819      	ldreq	r1, [r3, #0]
 8000c2e:	685b      	ldreq	r3, [r3, #4]
 8000c30:	6063      	str	r3, [r4, #4]
 8000c32:	bf04      	itt	eq
 8000c34:	1809      	addeq	r1, r1, r0
 8000c36:	6021      	streq	r1, [r4, #0]
 8000c38:	6054      	str	r4, [r2, #4]
 8000c3a:	e7c7      	b.n	8000bcc <_free_r+0x24>
 8000c3c:	bd38      	pop	{r3, r4, r5, pc}
 8000c3e:	bf00      	nop
 8000c40:	2000008c 	.word	0x2000008c

08000c44 <_malloc_r>:
 8000c44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c46:	1ccd      	adds	r5, r1, #3
 8000c48:	f025 0503 	bic.w	r5, r5, #3
 8000c4c:	3508      	adds	r5, #8
 8000c4e:	2d0c      	cmp	r5, #12
 8000c50:	bf38      	it	cc
 8000c52:	250c      	movcc	r5, #12
 8000c54:	2d00      	cmp	r5, #0
 8000c56:	4606      	mov	r6, r0
 8000c58:	db01      	blt.n	8000c5e <_malloc_r+0x1a>
 8000c5a:	42a9      	cmp	r1, r5
 8000c5c:	d903      	bls.n	8000c66 <_malloc_r+0x22>
 8000c5e:	230c      	movs	r3, #12
 8000c60:	6033      	str	r3, [r6, #0]
 8000c62:	2000      	movs	r0, #0
 8000c64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000c66:	f000 fbdd 	bl	8001424 <__malloc_lock>
 8000c6a:	4921      	ldr	r1, [pc, #132]	; (8000cf0 <_malloc_r+0xac>)
 8000c6c:	680a      	ldr	r2, [r1, #0]
 8000c6e:	4614      	mov	r4, r2
 8000c70:	b99c      	cbnz	r4, 8000c9a <_malloc_r+0x56>
 8000c72:	4f20      	ldr	r7, [pc, #128]	; (8000cf4 <_malloc_r+0xb0>)
 8000c74:	683b      	ldr	r3, [r7, #0]
 8000c76:	b923      	cbnz	r3, 8000c82 <_malloc_r+0x3e>
 8000c78:	4621      	mov	r1, r4
 8000c7a:	4630      	mov	r0, r6
 8000c7c:	f000 fb28 	bl	80012d0 <_sbrk_r>
 8000c80:	6038      	str	r0, [r7, #0]
 8000c82:	4629      	mov	r1, r5
 8000c84:	4630      	mov	r0, r6
 8000c86:	f000 fb23 	bl	80012d0 <_sbrk_r>
 8000c8a:	1c43      	adds	r3, r0, #1
 8000c8c:	d123      	bne.n	8000cd6 <_malloc_r+0x92>
 8000c8e:	230c      	movs	r3, #12
 8000c90:	6033      	str	r3, [r6, #0]
 8000c92:	4630      	mov	r0, r6
 8000c94:	f000 fbcc 	bl	8001430 <__malloc_unlock>
 8000c98:	e7e3      	b.n	8000c62 <_malloc_r+0x1e>
 8000c9a:	6823      	ldr	r3, [r4, #0]
 8000c9c:	1b5b      	subs	r3, r3, r5
 8000c9e:	d417      	bmi.n	8000cd0 <_malloc_r+0x8c>
 8000ca0:	2b0b      	cmp	r3, #11
 8000ca2:	d903      	bls.n	8000cac <_malloc_r+0x68>
 8000ca4:	6023      	str	r3, [r4, #0]
 8000ca6:	441c      	add	r4, r3
 8000ca8:	6025      	str	r5, [r4, #0]
 8000caa:	e004      	b.n	8000cb6 <_malloc_r+0x72>
 8000cac:	6863      	ldr	r3, [r4, #4]
 8000cae:	42a2      	cmp	r2, r4
 8000cb0:	bf0c      	ite	eq
 8000cb2:	600b      	streq	r3, [r1, #0]
 8000cb4:	6053      	strne	r3, [r2, #4]
 8000cb6:	4630      	mov	r0, r6
 8000cb8:	f000 fbba 	bl	8001430 <__malloc_unlock>
 8000cbc:	f104 000b 	add.w	r0, r4, #11
 8000cc0:	1d23      	adds	r3, r4, #4
 8000cc2:	f020 0007 	bic.w	r0, r0, #7
 8000cc6:	1ac2      	subs	r2, r0, r3
 8000cc8:	d0cc      	beq.n	8000c64 <_malloc_r+0x20>
 8000cca:	1a1b      	subs	r3, r3, r0
 8000ccc:	50a3      	str	r3, [r4, r2]
 8000cce:	e7c9      	b.n	8000c64 <_malloc_r+0x20>
 8000cd0:	4622      	mov	r2, r4
 8000cd2:	6864      	ldr	r4, [r4, #4]
 8000cd4:	e7cc      	b.n	8000c70 <_malloc_r+0x2c>
 8000cd6:	1cc4      	adds	r4, r0, #3
 8000cd8:	f024 0403 	bic.w	r4, r4, #3
 8000cdc:	42a0      	cmp	r0, r4
 8000cde:	d0e3      	beq.n	8000ca8 <_malloc_r+0x64>
 8000ce0:	1a21      	subs	r1, r4, r0
 8000ce2:	4630      	mov	r0, r6
 8000ce4:	f000 faf4 	bl	80012d0 <_sbrk_r>
 8000ce8:	3001      	adds	r0, #1
 8000cea:	d1dd      	bne.n	8000ca8 <_malloc_r+0x64>
 8000cec:	e7cf      	b.n	8000c8e <_malloc_r+0x4a>
 8000cee:	bf00      	nop
 8000cf0:	2000008c 	.word	0x2000008c
 8000cf4:	20000090 	.word	0x20000090

08000cf8 <__sfputc_r>:
 8000cf8:	6893      	ldr	r3, [r2, #8]
 8000cfa:	3b01      	subs	r3, #1
 8000cfc:	2b00      	cmp	r3, #0
 8000cfe:	b410      	push	{r4}
 8000d00:	6093      	str	r3, [r2, #8]
 8000d02:	da07      	bge.n	8000d14 <__sfputc_r+0x1c>
 8000d04:	6994      	ldr	r4, [r2, #24]
 8000d06:	42a3      	cmp	r3, r4
 8000d08:	db01      	blt.n	8000d0e <__sfputc_r+0x16>
 8000d0a:	290a      	cmp	r1, #10
 8000d0c:	d102      	bne.n	8000d14 <__sfputc_r+0x1c>
 8000d0e:	bc10      	pop	{r4}
 8000d10:	f7ff bc6c 	b.w	80005ec <__swbuf_r>
 8000d14:	6813      	ldr	r3, [r2, #0]
 8000d16:	1c58      	adds	r0, r3, #1
 8000d18:	6010      	str	r0, [r2, #0]
 8000d1a:	7019      	strb	r1, [r3, #0]
 8000d1c:	4608      	mov	r0, r1
 8000d1e:	bc10      	pop	{r4}
 8000d20:	4770      	bx	lr

08000d22 <__sfputs_r>:
 8000d22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d24:	4606      	mov	r6, r0
 8000d26:	460f      	mov	r7, r1
 8000d28:	4614      	mov	r4, r2
 8000d2a:	18d5      	adds	r5, r2, r3
 8000d2c:	42ac      	cmp	r4, r5
 8000d2e:	d101      	bne.n	8000d34 <__sfputs_r+0x12>
 8000d30:	2000      	movs	r0, #0
 8000d32:	e007      	b.n	8000d44 <__sfputs_r+0x22>
 8000d34:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d38:	463a      	mov	r2, r7
 8000d3a:	4630      	mov	r0, r6
 8000d3c:	f7ff ffdc 	bl	8000cf8 <__sfputc_r>
 8000d40:	1c43      	adds	r3, r0, #1
 8000d42:	d1f3      	bne.n	8000d2c <__sfputs_r+0xa>
 8000d44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000d48 <_vfiprintf_r>:
 8000d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d4c:	460d      	mov	r5, r1
 8000d4e:	b09d      	sub	sp, #116	; 0x74
 8000d50:	4614      	mov	r4, r2
 8000d52:	4698      	mov	r8, r3
 8000d54:	4606      	mov	r6, r0
 8000d56:	b118      	cbz	r0, 8000d60 <_vfiprintf_r+0x18>
 8000d58:	6983      	ldr	r3, [r0, #24]
 8000d5a:	b90b      	cbnz	r3, 8000d60 <_vfiprintf_r+0x18>
 8000d5c:	f7ff fe20 	bl	80009a0 <__sinit>
 8000d60:	4b89      	ldr	r3, [pc, #548]	; (8000f88 <_vfiprintf_r+0x240>)
 8000d62:	429d      	cmp	r5, r3
 8000d64:	d11b      	bne.n	8000d9e <_vfiprintf_r+0x56>
 8000d66:	6875      	ldr	r5, [r6, #4]
 8000d68:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000d6a:	07d9      	lsls	r1, r3, #31
 8000d6c:	d405      	bmi.n	8000d7a <_vfiprintf_r+0x32>
 8000d6e:	89ab      	ldrh	r3, [r5, #12]
 8000d70:	059a      	lsls	r2, r3, #22
 8000d72:	d402      	bmi.n	8000d7a <_vfiprintf_r+0x32>
 8000d74:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d76:	f7ff feb1 	bl	8000adc <__retarget_lock_acquire_recursive>
 8000d7a:	89ab      	ldrh	r3, [r5, #12]
 8000d7c:	071b      	lsls	r3, r3, #28
 8000d7e:	d501      	bpl.n	8000d84 <_vfiprintf_r+0x3c>
 8000d80:	692b      	ldr	r3, [r5, #16]
 8000d82:	b9eb      	cbnz	r3, 8000dc0 <_vfiprintf_r+0x78>
 8000d84:	4629      	mov	r1, r5
 8000d86:	4630      	mov	r0, r6
 8000d88:	f7ff fc82 	bl	8000690 <__swsetup_r>
 8000d8c:	b1c0      	cbz	r0, 8000dc0 <_vfiprintf_r+0x78>
 8000d8e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000d90:	07dc      	lsls	r4, r3, #31
 8000d92:	d50e      	bpl.n	8000db2 <_vfiprintf_r+0x6a>
 8000d94:	f04f 30ff 	mov.w	r0, #4294967295
 8000d98:	b01d      	add	sp, #116	; 0x74
 8000d9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d9e:	4b7b      	ldr	r3, [pc, #492]	; (8000f8c <_vfiprintf_r+0x244>)
 8000da0:	429d      	cmp	r5, r3
 8000da2:	d101      	bne.n	8000da8 <_vfiprintf_r+0x60>
 8000da4:	68b5      	ldr	r5, [r6, #8]
 8000da6:	e7df      	b.n	8000d68 <_vfiprintf_r+0x20>
 8000da8:	4b79      	ldr	r3, [pc, #484]	; (8000f90 <_vfiprintf_r+0x248>)
 8000daa:	429d      	cmp	r5, r3
 8000dac:	bf08      	it	eq
 8000dae:	68f5      	ldreq	r5, [r6, #12]
 8000db0:	e7da      	b.n	8000d68 <_vfiprintf_r+0x20>
 8000db2:	89ab      	ldrh	r3, [r5, #12]
 8000db4:	0598      	lsls	r0, r3, #22
 8000db6:	d4ed      	bmi.n	8000d94 <_vfiprintf_r+0x4c>
 8000db8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000dba:	f7ff fe90 	bl	8000ade <__retarget_lock_release_recursive>
 8000dbe:	e7e9      	b.n	8000d94 <_vfiprintf_r+0x4c>
 8000dc0:	2300      	movs	r3, #0
 8000dc2:	9309      	str	r3, [sp, #36]	; 0x24
 8000dc4:	2320      	movs	r3, #32
 8000dc6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000dca:	f8cd 800c 	str.w	r8, [sp, #12]
 8000dce:	2330      	movs	r3, #48	; 0x30
 8000dd0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000f94 <_vfiprintf_r+0x24c>
 8000dd4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000dd8:	f04f 0901 	mov.w	r9, #1
 8000ddc:	4623      	mov	r3, r4
 8000dde:	469a      	mov	sl, r3
 8000de0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000de4:	b10a      	cbz	r2, 8000dea <_vfiprintf_r+0xa2>
 8000de6:	2a25      	cmp	r2, #37	; 0x25
 8000de8:	d1f9      	bne.n	8000dde <_vfiprintf_r+0x96>
 8000dea:	ebba 0b04 	subs.w	fp, sl, r4
 8000dee:	d00b      	beq.n	8000e08 <_vfiprintf_r+0xc0>
 8000df0:	465b      	mov	r3, fp
 8000df2:	4622      	mov	r2, r4
 8000df4:	4629      	mov	r1, r5
 8000df6:	4630      	mov	r0, r6
 8000df8:	f7ff ff93 	bl	8000d22 <__sfputs_r>
 8000dfc:	3001      	adds	r0, #1
 8000dfe:	f000 80aa 	beq.w	8000f56 <_vfiprintf_r+0x20e>
 8000e02:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000e04:	445a      	add	r2, fp
 8000e06:	9209      	str	r2, [sp, #36]	; 0x24
 8000e08:	f89a 3000 	ldrb.w	r3, [sl]
 8000e0c:	2b00      	cmp	r3, #0
 8000e0e:	f000 80a2 	beq.w	8000f56 <_vfiprintf_r+0x20e>
 8000e12:	2300      	movs	r3, #0
 8000e14:	f04f 32ff 	mov.w	r2, #4294967295
 8000e18:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000e1c:	f10a 0a01 	add.w	sl, sl, #1
 8000e20:	9304      	str	r3, [sp, #16]
 8000e22:	9307      	str	r3, [sp, #28]
 8000e24:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000e28:	931a      	str	r3, [sp, #104]	; 0x68
 8000e2a:	4654      	mov	r4, sl
 8000e2c:	2205      	movs	r2, #5
 8000e2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e32:	4858      	ldr	r0, [pc, #352]	; (8000f94 <_vfiprintf_r+0x24c>)
 8000e34:	f7ff f9dc 	bl	80001f0 <memchr>
 8000e38:	9a04      	ldr	r2, [sp, #16]
 8000e3a:	b9d8      	cbnz	r0, 8000e74 <_vfiprintf_r+0x12c>
 8000e3c:	06d1      	lsls	r1, r2, #27
 8000e3e:	bf44      	itt	mi
 8000e40:	2320      	movmi	r3, #32
 8000e42:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000e46:	0713      	lsls	r3, r2, #28
 8000e48:	bf44      	itt	mi
 8000e4a:	232b      	movmi	r3, #43	; 0x2b
 8000e4c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000e50:	f89a 3000 	ldrb.w	r3, [sl]
 8000e54:	2b2a      	cmp	r3, #42	; 0x2a
 8000e56:	d015      	beq.n	8000e84 <_vfiprintf_r+0x13c>
 8000e58:	9a07      	ldr	r2, [sp, #28]
 8000e5a:	4654      	mov	r4, sl
 8000e5c:	2000      	movs	r0, #0
 8000e5e:	f04f 0c0a 	mov.w	ip, #10
 8000e62:	4621      	mov	r1, r4
 8000e64:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000e68:	3b30      	subs	r3, #48	; 0x30
 8000e6a:	2b09      	cmp	r3, #9
 8000e6c:	d94e      	bls.n	8000f0c <_vfiprintf_r+0x1c4>
 8000e6e:	b1b0      	cbz	r0, 8000e9e <_vfiprintf_r+0x156>
 8000e70:	9207      	str	r2, [sp, #28]
 8000e72:	e014      	b.n	8000e9e <_vfiprintf_r+0x156>
 8000e74:	eba0 0308 	sub.w	r3, r0, r8
 8000e78:	fa09 f303 	lsl.w	r3, r9, r3
 8000e7c:	4313      	orrs	r3, r2
 8000e7e:	9304      	str	r3, [sp, #16]
 8000e80:	46a2      	mov	sl, r4
 8000e82:	e7d2      	b.n	8000e2a <_vfiprintf_r+0xe2>
 8000e84:	9b03      	ldr	r3, [sp, #12]
 8000e86:	1d19      	adds	r1, r3, #4
 8000e88:	681b      	ldr	r3, [r3, #0]
 8000e8a:	9103      	str	r1, [sp, #12]
 8000e8c:	2b00      	cmp	r3, #0
 8000e8e:	bfbb      	ittet	lt
 8000e90:	425b      	neglt	r3, r3
 8000e92:	f042 0202 	orrlt.w	r2, r2, #2
 8000e96:	9307      	strge	r3, [sp, #28]
 8000e98:	9307      	strlt	r3, [sp, #28]
 8000e9a:	bfb8      	it	lt
 8000e9c:	9204      	strlt	r2, [sp, #16]
 8000e9e:	7823      	ldrb	r3, [r4, #0]
 8000ea0:	2b2e      	cmp	r3, #46	; 0x2e
 8000ea2:	d10c      	bne.n	8000ebe <_vfiprintf_r+0x176>
 8000ea4:	7863      	ldrb	r3, [r4, #1]
 8000ea6:	2b2a      	cmp	r3, #42	; 0x2a
 8000ea8:	d135      	bne.n	8000f16 <_vfiprintf_r+0x1ce>
 8000eaa:	9b03      	ldr	r3, [sp, #12]
 8000eac:	1d1a      	adds	r2, r3, #4
 8000eae:	681b      	ldr	r3, [r3, #0]
 8000eb0:	9203      	str	r2, [sp, #12]
 8000eb2:	2b00      	cmp	r3, #0
 8000eb4:	bfb8      	it	lt
 8000eb6:	f04f 33ff 	movlt.w	r3, #4294967295
 8000eba:	3402      	adds	r4, #2
 8000ebc:	9305      	str	r3, [sp, #20]
 8000ebe:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000fa4 <_vfiprintf_r+0x25c>
 8000ec2:	7821      	ldrb	r1, [r4, #0]
 8000ec4:	2203      	movs	r2, #3
 8000ec6:	4650      	mov	r0, sl
 8000ec8:	f7ff f992 	bl	80001f0 <memchr>
 8000ecc:	b140      	cbz	r0, 8000ee0 <_vfiprintf_r+0x198>
 8000ece:	2340      	movs	r3, #64	; 0x40
 8000ed0:	eba0 000a 	sub.w	r0, r0, sl
 8000ed4:	fa03 f000 	lsl.w	r0, r3, r0
 8000ed8:	9b04      	ldr	r3, [sp, #16]
 8000eda:	4303      	orrs	r3, r0
 8000edc:	3401      	adds	r4, #1
 8000ede:	9304      	str	r3, [sp, #16]
 8000ee0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ee4:	482c      	ldr	r0, [pc, #176]	; (8000f98 <_vfiprintf_r+0x250>)
 8000ee6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000eea:	2206      	movs	r2, #6
 8000eec:	f7ff f980 	bl	80001f0 <memchr>
 8000ef0:	2800      	cmp	r0, #0
 8000ef2:	d03f      	beq.n	8000f74 <_vfiprintf_r+0x22c>
 8000ef4:	4b29      	ldr	r3, [pc, #164]	; (8000f9c <_vfiprintf_r+0x254>)
 8000ef6:	bb1b      	cbnz	r3, 8000f40 <_vfiprintf_r+0x1f8>
 8000ef8:	9b03      	ldr	r3, [sp, #12]
 8000efa:	3307      	adds	r3, #7
 8000efc:	f023 0307 	bic.w	r3, r3, #7
 8000f00:	3308      	adds	r3, #8
 8000f02:	9303      	str	r3, [sp, #12]
 8000f04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000f06:	443b      	add	r3, r7
 8000f08:	9309      	str	r3, [sp, #36]	; 0x24
 8000f0a:	e767      	b.n	8000ddc <_vfiprintf_r+0x94>
 8000f0c:	fb0c 3202 	mla	r2, ip, r2, r3
 8000f10:	460c      	mov	r4, r1
 8000f12:	2001      	movs	r0, #1
 8000f14:	e7a5      	b.n	8000e62 <_vfiprintf_r+0x11a>
 8000f16:	2300      	movs	r3, #0
 8000f18:	3401      	adds	r4, #1
 8000f1a:	9305      	str	r3, [sp, #20]
 8000f1c:	4619      	mov	r1, r3
 8000f1e:	f04f 0c0a 	mov.w	ip, #10
 8000f22:	4620      	mov	r0, r4
 8000f24:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000f28:	3a30      	subs	r2, #48	; 0x30
 8000f2a:	2a09      	cmp	r2, #9
 8000f2c:	d903      	bls.n	8000f36 <_vfiprintf_r+0x1ee>
 8000f2e:	2b00      	cmp	r3, #0
 8000f30:	d0c5      	beq.n	8000ebe <_vfiprintf_r+0x176>
 8000f32:	9105      	str	r1, [sp, #20]
 8000f34:	e7c3      	b.n	8000ebe <_vfiprintf_r+0x176>
 8000f36:	fb0c 2101 	mla	r1, ip, r1, r2
 8000f3a:	4604      	mov	r4, r0
 8000f3c:	2301      	movs	r3, #1
 8000f3e:	e7f0      	b.n	8000f22 <_vfiprintf_r+0x1da>
 8000f40:	ab03      	add	r3, sp, #12
 8000f42:	9300      	str	r3, [sp, #0]
 8000f44:	462a      	mov	r2, r5
 8000f46:	4b16      	ldr	r3, [pc, #88]	; (8000fa0 <_vfiprintf_r+0x258>)
 8000f48:	a904      	add	r1, sp, #16
 8000f4a:	4630      	mov	r0, r6
 8000f4c:	f3af 8000 	nop.w
 8000f50:	4607      	mov	r7, r0
 8000f52:	1c78      	adds	r0, r7, #1
 8000f54:	d1d6      	bne.n	8000f04 <_vfiprintf_r+0x1bc>
 8000f56:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f58:	07d9      	lsls	r1, r3, #31
 8000f5a:	d405      	bmi.n	8000f68 <_vfiprintf_r+0x220>
 8000f5c:	89ab      	ldrh	r3, [r5, #12]
 8000f5e:	059a      	lsls	r2, r3, #22
 8000f60:	d402      	bmi.n	8000f68 <_vfiprintf_r+0x220>
 8000f62:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f64:	f7ff fdbb 	bl	8000ade <__retarget_lock_release_recursive>
 8000f68:	89ab      	ldrh	r3, [r5, #12]
 8000f6a:	065b      	lsls	r3, r3, #25
 8000f6c:	f53f af12 	bmi.w	8000d94 <_vfiprintf_r+0x4c>
 8000f70:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000f72:	e711      	b.n	8000d98 <_vfiprintf_r+0x50>
 8000f74:	ab03      	add	r3, sp, #12
 8000f76:	9300      	str	r3, [sp, #0]
 8000f78:	462a      	mov	r2, r5
 8000f7a:	4b09      	ldr	r3, [pc, #36]	; (8000fa0 <_vfiprintf_r+0x258>)
 8000f7c:	a904      	add	r1, sp, #16
 8000f7e:	4630      	mov	r0, r6
 8000f80:	f000 f880 	bl	8001084 <_printf_i>
 8000f84:	e7e4      	b.n	8000f50 <_vfiprintf_r+0x208>
 8000f86:	bf00      	nop
 8000f88:	08001b68 	.word	0x08001b68
 8000f8c:	08001b88 	.word	0x08001b88
 8000f90:	08001b48 	.word	0x08001b48
 8000f94:	08001ba8 	.word	0x08001ba8
 8000f98:	08001bb2 	.word	0x08001bb2
 8000f9c:	00000000 	.word	0x00000000
 8000fa0:	08000d23 	.word	0x08000d23
 8000fa4:	08001bae 	.word	0x08001bae

08000fa8 <_printf_common>:
 8000fa8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000fac:	4616      	mov	r6, r2
 8000fae:	4699      	mov	r9, r3
 8000fb0:	688a      	ldr	r2, [r1, #8]
 8000fb2:	690b      	ldr	r3, [r1, #16]
 8000fb4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000fb8:	4293      	cmp	r3, r2
 8000fba:	bfb8      	it	lt
 8000fbc:	4613      	movlt	r3, r2
 8000fbe:	6033      	str	r3, [r6, #0]
 8000fc0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000fc4:	4607      	mov	r7, r0
 8000fc6:	460c      	mov	r4, r1
 8000fc8:	b10a      	cbz	r2, 8000fce <_printf_common+0x26>
 8000fca:	3301      	adds	r3, #1
 8000fcc:	6033      	str	r3, [r6, #0]
 8000fce:	6823      	ldr	r3, [r4, #0]
 8000fd0:	0699      	lsls	r1, r3, #26
 8000fd2:	bf42      	ittt	mi
 8000fd4:	6833      	ldrmi	r3, [r6, #0]
 8000fd6:	3302      	addmi	r3, #2
 8000fd8:	6033      	strmi	r3, [r6, #0]
 8000fda:	6825      	ldr	r5, [r4, #0]
 8000fdc:	f015 0506 	ands.w	r5, r5, #6
 8000fe0:	d106      	bne.n	8000ff0 <_printf_common+0x48>
 8000fe2:	f104 0a19 	add.w	sl, r4, #25
 8000fe6:	68e3      	ldr	r3, [r4, #12]
 8000fe8:	6832      	ldr	r2, [r6, #0]
 8000fea:	1a9b      	subs	r3, r3, r2
 8000fec:	42ab      	cmp	r3, r5
 8000fee:	dc26      	bgt.n	800103e <_printf_common+0x96>
 8000ff0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ff4:	1e13      	subs	r3, r2, #0
 8000ff6:	6822      	ldr	r2, [r4, #0]
 8000ff8:	bf18      	it	ne
 8000ffa:	2301      	movne	r3, #1
 8000ffc:	0692      	lsls	r2, r2, #26
 8000ffe:	d42b      	bmi.n	8001058 <_printf_common+0xb0>
 8001000:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001004:	4649      	mov	r1, r9
 8001006:	4638      	mov	r0, r7
 8001008:	47c0      	blx	r8
 800100a:	3001      	adds	r0, #1
 800100c:	d01e      	beq.n	800104c <_printf_common+0xa4>
 800100e:	6823      	ldr	r3, [r4, #0]
 8001010:	68e5      	ldr	r5, [r4, #12]
 8001012:	6832      	ldr	r2, [r6, #0]
 8001014:	f003 0306 	and.w	r3, r3, #6
 8001018:	2b04      	cmp	r3, #4
 800101a:	bf08      	it	eq
 800101c:	1aad      	subeq	r5, r5, r2
 800101e:	68a3      	ldr	r3, [r4, #8]
 8001020:	6922      	ldr	r2, [r4, #16]
 8001022:	bf0c      	ite	eq
 8001024:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001028:	2500      	movne	r5, #0
 800102a:	4293      	cmp	r3, r2
 800102c:	bfc4      	itt	gt
 800102e:	1a9b      	subgt	r3, r3, r2
 8001030:	18ed      	addgt	r5, r5, r3
 8001032:	2600      	movs	r6, #0
 8001034:	341a      	adds	r4, #26
 8001036:	42b5      	cmp	r5, r6
 8001038:	d11a      	bne.n	8001070 <_printf_common+0xc8>
 800103a:	2000      	movs	r0, #0
 800103c:	e008      	b.n	8001050 <_printf_common+0xa8>
 800103e:	2301      	movs	r3, #1
 8001040:	4652      	mov	r2, sl
 8001042:	4649      	mov	r1, r9
 8001044:	4638      	mov	r0, r7
 8001046:	47c0      	blx	r8
 8001048:	3001      	adds	r0, #1
 800104a:	d103      	bne.n	8001054 <_printf_common+0xac>
 800104c:	f04f 30ff 	mov.w	r0, #4294967295
 8001050:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001054:	3501      	adds	r5, #1
 8001056:	e7c6      	b.n	8000fe6 <_printf_common+0x3e>
 8001058:	18e1      	adds	r1, r4, r3
 800105a:	1c5a      	adds	r2, r3, #1
 800105c:	2030      	movs	r0, #48	; 0x30
 800105e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001062:	4422      	add	r2, r4
 8001064:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001068:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800106c:	3302      	adds	r3, #2
 800106e:	e7c7      	b.n	8001000 <_printf_common+0x58>
 8001070:	2301      	movs	r3, #1
 8001072:	4622      	mov	r2, r4
 8001074:	4649      	mov	r1, r9
 8001076:	4638      	mov	r0, r7
 8001078:	47c0      	blx	r8
 800107a:	3001      	adds	r0, #1
 800107c:	d0e6      	beq.n	800104c <_printf_common+0xa4>
 800107e:	3601      	adds	r6, #1
 8001080:	e7d9      	b.n	8001036 <_printf_common+0x8e>
	...

08001084 <_printf_i>:
 8001084:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001088:	460c      	mov	r4, r1
 800108a:	4691      	mov	r9, r2
 800108c:	7e27      	ldrb	r7, [r4, #24]
 800108e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8001090:	2f78      	cmp	r7, #120	; 0x78
 8001092:	4680      	mov	r8, r0
 8001094:	469a      	mov	sl, r3
 8001096:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800109a:	d807      	bhi.n	80010ac <_printf_i+0x28>
 800109c:	2f62      	cmp	r7, #98	; 0x62
 800109e:	d80a      	bhi.n	80010b6 <_printf_i+0x32>
 80010a0:	2f00      	cmp	r7, #0
 80010a2:	f000 80d8 	beq.w	8001256 <_printf_i+0x1d2>
 80010a6:	2f58      	cmp	r7, #88	; 0x58
 80010a8:	f000 80a3 	beq.w	80011f2 <_printf_i+0x16e>
 80010ac:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80010b0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80010b4:	e03a      	b.n	800112c <_printf_i+0xa8>
 80010b6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80010ba:	2b15      	cmp	r3, #21
 80010bc:	d8f6      	bhi.n	80010ac <_printf_i+0x28>
 80010be:	a001      	add	r0, pc, #4	; (adr r0, 80010c4 <_printf_i+0x40>)
 80010c0:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80010c4:	0800111d 	.word	0x0800111d
 80010c8:	08001131 	.word	0x08001131
 80010cc:	080010ad 	.word	0x080010ad
 80010d0:	080010ad 	.word	0x080010ad
 80010d4:	080010ad 	.word	0x080010ad
 80010d8:	080010ad 	.word	0x080010ad
 80010dc:	08001131 	.word	0x08001131
 80010e0:	080010ad 	.word	0x080010ad
 80010e4:	080010ad 	.word	0x080010ad
 80010e8:	080010ad 	.word	0x080010ad
 80010ec:	080010ad 	.word	0x080010ad
 80010f0:	0800123d 	.word	0x0800123d
 80010f4:	08001161 	.word	0x08001161
 80010f8:	0800121f 	.word	0x0800121f
 80010fc:	080010ad 	.word	0x080010ad
 8001100:	080010ad 	.word	0x080010ad
 8001104:	0800125f 	.word	0x0800125f
 8001108:	080010ad 	.word	0x080010ad
 800110c:	08001161 	.word	0x08001161
 8001110:	080010ad 	.word	0x080010ad
 8001114:	080010ad 	.word	0x080010ad
 8001118:	08001227 	.word	0x08001227
 800111c:	680b      	ldr	r3, [r1, #0]
 800111e:	1d1a      	adds	r2, r3, #4
 8001120:	681b      	ldr	r3, [r3, #0]
 8001122:	600a      	str	r2, [r1, #0]
 8001124:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8001128:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800112c:	2301      	movs	r3, #1
 800112e:	e0a3      	b.n	8001278 <_printf_i+0x1f4>
 8001130:	6825      	ldr	r5, [r4, #0]
 8001132:	6808      	ldr	r0, [r1, #0]
 8001134:	062e      	lsls	r6, r5, #24
 8001136:	f100 0304 	add.w	r3, r0, #4
 800113a:	d50a      	bpl.n	8001152 <_printf_i+0xce>
 800113c:	6805      	ldr	r5, [r0, #0]
 800113e:	600b      	str	r3, [r1, #0]
 8001140:	2d00      	cmp	r5, #0
 8001142:	da03      	bge.n	800114c <_printf_i+0xc8>
 8001144:	232d      	movs	r3, #45	; 0x2d
 8001146:	426d      	negs	r5, r5
 8001148:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800114c:	485e      	ldr	r0, [pc, #376]	; (80012c8 <_printf_i+0x244>)
 800114e:	230a      	movs	r3, #10
 8001150:	e019      	b.n	8001186 <_printf_i+0x102>
 8001152:	f015 0f40 	tst.w	r5, #64	; 0x40
 8001156:	6805      	ldr	r5, [r0, #0]
 8001158:	600b      	str	r3, [r1, #0]
 800115a:	bf18      	it	ne
 800115c:	b22d      	sxthne	r5, r5
 800115e:	e7ef      	b.n	8001140 <_printf_i+0xbc>
 8001160:	680b      	ldr	r3, [r1, #0]
 8001162:	6825      	ldr	r5, [r4, #0]
 8001164:	1d18      	adds	r0, r3, #4
 8001166:	6008      	str	r0, [r1, #0]
 8001168:	0628      	lsls	r0, r5, #24
 800116a:	d501      	bpl.n	8001170 <_printf_i+0xec>
 800116c:	681d      	ldr	r5, [r3, #0]
 800116e:	e002      	b.n	8001176 <_printf_i+0xf2>
 8001170:	0669      	lsls	r1, r5, #25
 8001172:	d5fb      	bpl.n	800116c <_printf_i+0xe8>
 8001174:	881d      	ldrh	r5, [r3, #0]
 8001176:	4854      	ldr	r0, [pc, #336]	; (80012c8 <_printf_i+0x244>)
 8001178:	2f6f      	cmp	r7, #111	; 0x6f
 800117a:	bf0c      	ite	eq
 800117c:	2308      	moveq	r3, #8
 800117e:	230a      	movne	r3, #10
 8001180:	2100      	movs	r1, #0
 8001182:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001186:	6866      	ldr	r6, [r4, #4]
 8001188:	60a6      	str	r6, [r4, #8]
 800118a:	2e00      	cmp	r6, #0
 800118c:	bfa2      	ittt	ge
 800118e:	6821      	ldrge	r1, [r4, #0]
 8001190:	f021 0104 	bicge.w	r1, r1, #4
 8001194:	6021      	strge	r1, [r4, #0]
 8001196:	b90d      	cbnz	r5, 800119c <_printf_i+0x118>
 8001198:	2e00      	cmp	r6, #0
 800119a:	d04d      	beq.n	8001238 <_printf_i+0x1b4>
 800119c:	4616      	mov	r6, r2
 800119e:	fbb5 f1f3 	udiv	r1, r5, r3
 80011a2:	fb03 5711 	mls	r7, r3, r1, r5
 80011a6:	5dc7      	ldrb	r7, [r0, r7]
 80011a8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80011ac:	462f      	mov	r7, r5
 80011ae:	42bb      	cmp	r3, r7
 80011b0:	460d      	mov	r5, r1
 80011b2:	d9f4      	bls.n	800119e <_printf_i+0x11a>
 80011b4:	2b08      	cmp	r3, #8
 80011b6:	d10b      	bne.n	80011d0 <_printf_i+0x14c>
 80011b8:	6823      	ldr	r3, [r4, #0]
 80011ba:	07df      	lsls	r7, r3, #31
 80011bc:	d508      	bpl.n	80011d0 <_printf_i+0x14c>
 80011be:	6923      	ldr	r3, [r4, #16]
 80011c0:	6861      	ldr	r1, [r4, #4]
 80011c2:	4299      	cmp	r1, r3
 80011c4:	bfde      	ittt	le
 80011c6:	2330      	movle	r3, #48	; 0x30
 80011c8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80011cc:	f106 36ff 	addle.w	r6, r6, #4294967295
 80011d0:	1b92      	subs	r2, r2, r6
 80011d2:	6122      	str	r2, [r4, #16]
 80011d4:	f8cd a000 	str.w	sl, [sp]
 80011d8:	464b      	mov	r3, r9
 80011da:	aa03      	add	r2, sp, #12
 80011dc:	4621      	mov	r1, r4
 80011de:	4640      	mov	r0, r8
 80011e0:	f7ff fee2 	bl	8000fa8 <_printf_common>
 80011e4:	3001      	adds	r0, #1
 80011e6:	d14c      	bne.n	8001282 <_printf_i+0x1fe>
 80011e8:	f04f 30ff 	mov.w	r0, #4294967295
 80011ec:	b004      	add	sp, #16
 80011ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80011f2:	4835      	ldr	r0, [pc, #212]	; (80012c8 <_printf_i+0x244>)
 80011f4:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80011f8:	6823      	ldr	r3, [r4, #0]
 80011fa:	680e      	ldr	r6, [r1, #0]
 80011fc:	061f      	lsls	r7, r3, #24
 80011fe:	f856 5b04 	ldr.w	r5, [r6], #4
 8001202:	600e      	str	r6, [r1, #0]
 8001204:	d514      	bpl.n	8001230 <_printf_i+0x1ac>
 8001206:	07d9      	lsls	r1, r3, #31
 8001208:	bf44      	itt	mi
 800120a:	f043 0320 	orrmi.w	r3, r3, #32
 800120e:	6023      	strmi	r3, [r4, #0]
 8001210:	b91d      	cbnz	r5, 800121a <_printf_i+0x196>
 8001212:	6823      	ldr	r3, [r4, #0]
 8001214:	f023 0320 	bic.w	r3, r3, #32
 8001218:	6023      	str	r3, [r4, #0]
 800121a:	2310      	movs	r3, #16
 800121c:	e7b0      	b.n	8001180 <_printf_i+0xfc>
 800121e:	6823      	ldr	r3, [r4, #0]
 8001220:	f043 0320 	orr.w	r3, r3, #32
 8001224:	6023      	str	r3, [r4, #0]
 8001226:	2378      	movs	r3, #120	; 0x78
 8001228:	4828      	ldr	r0, [pc, #160]	; (80012cc <_printf_i+0x248>)
 800122a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800122e:	e7e3      	b.n	80011f8 <_printf_i+0x174>
 8001230:	065e      	lsls	r6, r3, #25
 8001232:	bf48      	it	mi
 8001234:	b2ad      	uxthmi	r5, r5
 8001236:	e7e6      	b.n	8001206 <_printf_i+0x182>
 8001238:	4616      	mov	r6, r2
 800123a:	e7bb      	b.n	80011b4 <_printf_i+0x130>
 800123c:	680b      	ldr	r3, [r1, #0]
 800123e:	6826      	ldr	r6, [r4, #0]
 8001240:	6960      	ldr	r0, [r4, #20]
 8001242:	1d1d      	adds	r5, r3, #4
 8001244:	600d      	str	r5, [r1, #0]
 8001246:	0635      	lsls	r5, r6, #24
 8001248:	681b      	ldr	r3, [r3, #0]
 800124a:	d501      	bpl.n	8001250 <_printf_i+0x1cc>
 800124c:	6018      	str	r0, [r3, #0]
 800124e:	e002      	b.n	8001256 <_printf_i+0x1d2>
 8001250:	0671      	lsls	r1, r6, #25
 8001252:	d5fb      	bpl.n	800124c <_printf_i+0x1c8>
 8001254:	8018      	strh	r0, [r3, #0]
 8001256:	2300      	movs	r3, #0
 8001258:	6123      	str	r3, [r4, #16]
 800125a:	4616      	mov	r6, r2
 800125c:	e7ba      	b.n	80011d4 <_printf_i+0x150>
 800125e:	680b      	ldr	r3, [r1, #0]
 8001260:	1d1a      	adds	r2, r3, #4
 8001262:	600a      	str	r2, [r1, #0]
 8001264:	681e      	ldr	r6, [r3, #0]
 8001266:	6862      	ldr	r2, [r4, #4]
 8001268:	2100      	movs	r1, #0
 800126a:	4630      	mov	r0, r6
 800126c:	f7fe ffc0 	bl	80001f0 <memchr>
 8001270:	b108      	cbz	r0, 8001276 <_printf_i+0x1f2>
 8001272:	1b80      	subs	r0, r0, r6
 8001274:	6060      	str	r0, [r4, #4]
 8001276:	6863      	ldr	r3, [r4, #4]
 8001278:	6123      	str	r3, [r4, #16]
 800127a:	2300      	movs	r3, #0
 800127c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001280:	e7a8      	b.n	80011d4 <_printf_i+0x150>
 8001282:	6923      	ldr	r3, [r4, #16]
 8001284:	4632      	mov	r2, r6
 8001286:	4649      	mov	r1, r9
 8001288:	4640      	mov	r0, r8
 800128a:	47d0      	blx	sl
 800128c:	3001      	adds	r0, #1
 800128e:	d0ab      	beq.n	80011e8 <_printf_i+0x164>
 8001290:	6823      	ldr	r3, [r4, #0]
 8001292:	079b      	lsls	r3, r3, #30
 8001294:	d413      	bmi.n	80012be <_printf_i+0x23a>
 8001296:	68e0      	ldr	r0, [r4, #12]
 8001298:	9b03      	ldr	r3, [sp, #12]
 800129a:	4298      	cmp	r0, r3
 800129c:	bfb8      	it	lt
 800129e:	4618      	movlt	r0, r3
 80012a0:	e7a4      	b.n	80011ec <_printf_i+0x168>
 80012a2:	2301      	movs	r3, #1
 80012a4:	4632      	mov	r2, r6
 80012a6:	4649      	mov	r1, r9
 80012a8:	4640      	mov	r0, r8
 80012aa:	47d0      	blx	sl
 80012ac:	3001      	adds	r0, #1
 80012ae:	d09b      	beq.n	80011e8 <_printf_i+0x164>
 80012b0:	3501      	adds	r5, #1
 80012b2:	68e3      	ldr	r3, [r4, #12]
 80012b4:	9903      	ldr	r1, [sp, #12]
 80012b6:	1a5b      	subs	r3, r3, r1
 80012b8:	42ab      	cmp	r3, r5
 80012ba:	dcf2      	bgt.n	80012a2 <_printf_i+0x21e>
 80012bc:	e7eb      	b.n	8001296 <_printf_i+0x212>
 80012be:	2500      	movs	r5, #0
 80012c0:	f104 0619 	add.w	r6, r4, #25
 80012c4:	e7f5      	b.n	80012b2 <_printf_i+0x22e>
 80012c6:	bf00      	nop
 80012c8:	08001bb9 	.word	0x08001bb9
 80012cc:	08001bca 	.word	0x08001bca

080012d0 <_sbrk_r>:
 80012d0:	b538      	push	{r3, r4, r5, lr}
 80012d2:	4d06      	ldr	r5, [pc, #24]	; (80012ec <_sbrk_r+0x1c>)
 80012d4:	2300      	movs	r3, #0
 80012d6:	4604      	mov	r4, r0
 80012d8:	4608      	mov	r0, r1
 80012da:	602b      	str	r3, [r5, #0]
 80012dc:	f7ff f866 	bl	80003ac <_sbrk>
 80012e0:	1c43      	adds	r3, r0, #1
 80012e2:	d102      	bne.n	80012ea <_sbrk_r+0x1a>
 80012e4:	682b      	ldr	r3, [r5, #0]
 80012e6:	b103      	cbz	r3, 80012ea <_sbrk_r+0x1a>
 80012e8:	6023      	str	r3, [r4, #0]
 80012ea:	bd38      	pop	{r3, r4, r5, pc}
 80012ec:	2000014c 	.word	0x2000014c

080012f0 <__sread>:
 80012f0:	b510      	push	{r4, lr}
 80012f2:	460c      	mov	r4, r1
 80012f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012f8:	f000 f8a0 	bl	800143c <_read_r>
 80012fc:	2800      	cmp	r0, #0
 80012fe:	bfab      	itete	ge
 8001300:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001302:	89a3      	ldrhlt	r3, [r4, #12]
 8001304:	181b      	addge	r3, r3, r0
 8001306:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800130a:	bfac      	ite	ge
 800130c:	6563      	strge	r3, [r4, #84]	; 0x54
 800130e:	81a3      	strhlt	r3, [r4, #12]
 8001310:	bd10      	pop	{r4, pc}

08001312 <__swrite>:
 8001312:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001316:	461f      	mov	r7, r3
 8001318:	898b      	ldrh	r3, [r1, #12]
 800131a:	05db      	lsls	r3, r3, #23
 800131c:	4605      	mov	r5, r0
 800131e:	460c      	mov	r4, r1
 8001320:	4616      	mov	r6, r2
 8001322:	d505      	bpl.n	8001330 <__swrite+0x1e>
 8001324:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001328:	2302      	movs	r3, #2
 800132a:	2200      	movs	r2, #0
 800132c:	f000 f868 	bl	8001400 <_lseek_r>
 8001330:	89a3      	ldrh	r3, [r4, #12]
 8001332:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001336:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800133a:	81a3      	strh	r3, [r4, #12]
 800133c:	4632      	mov	r2, r6
 800133e:	463b      	mov	r3, r7
 8001340:	4628      	mov	r0, r5
 8001342:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001346:	f000 b817 	b.w	8001378 <_write_r>

0800134a <__sseek>:
 800134a:	b510      	push	{r4, lr}
 800134c:	460c      	mov	r4, r1
 800134e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001352:	f000 f855 	bl	8001400 <_lseek_r>
 8001356:	1c43      	adds	r3, r0, #1
 8001358:	89a3      	ldrh	r3, [r4, #12]
 800135a:	bf15      	itete	ne
 800135c:	6560      	strne	r0, [r4, #84]	; 0x54
 800135e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001362:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001366:	81a3      	strheq	r3, [r4, #12]
 8001368:	bf18      	it	ne
 800136a:	81a3      	strhne	r3, [r4, #12]
 800136c:	bd10      	pop	{r4, pc}

0800136e <__sclose>:
 800136e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001372:	f000 b813 	b.w	800139c <_close_r>
	...

08001378 <_write_r>:
 8001378:	b538      	push	{r3, r4, r5, lr}
 800137a:	4d07      	ldr	r5, [pc, #28]	; (8001398 <_write_r+0x20>)
 800137c:	4604      	mov	r4, r0
 800137e:	4608      	mov	r0, r1
 8001380:	4611      	mov	r1, r2
 8001382:	2200      	movs	r2, #0
 8001384:	602a      	str	r2, [r5, #0]
 8001386:	461a      	mov	r2, r3
 8001388:	f000 f91a 	bl	80015c0 <_write>
 800138c:	1c43      	adds	r3, r0, #1
 800138e:	d102      	bne.n	8001396 <_write_r+0x1e>
 8001390:	682b      	ldr	r3, [r5, #0]
 8001392:	b103      	cbz	r3, 8001396 <_write_r+0x1e>
 8001394:	6023      	str	r3, [r4, #0]
 8001396:	bd38      	pop	{r3, r4, r5, pc}
 8001398:	2000014c 	.word	0x2000014c

0800139c <_close_r>:
 800139c:	b538      	push	{r3, r4, r5, lr}
 800139e:	4d06      	ldr	r5, [pc, #24]	; (80013b8 <_close_r+0x1c>)
 80013a0:	2300      	movs	r3, #0
 80013a2:	4604      	mov	r4, r0
 80013a4:	4608      	mov	r0, r1
 80013a6:	602b      	str	r3, [r5, #0]
 80013a8:	f000 f938 	bl	800161c <_close>
 80013ac:	1c43      	adds	r3, r0, #1
 80013ae:	d102      	bne.n	80013b6 <_close_r+0x1a>
 80013b0:	682b      	ldr	r3, [r5, #0]
 80013b2:	b103      	cbz	r3, 80013b6 <_close_r+0x1a>
 80013b4:	6023      	str	r3, [r4, #0]
 80013b6:	bd38      	pop	{r3, r4, r5, pc}
 80013b8:	2000014c 	.word	0x2000014c

080013bc <_fstat_r>:
 80013bc:	b538      	push	{r3, r4, r5, lr}
 80013be:	4d07      	ldr	r5, [pc, #28]	; (80013dc <_fstat_r+0x20>)
 80013c0:	2300      	movs	r3, #0
 80013c2:	4604      	mov	r4, r0
 80013c4:	4608      	mov	r0, r1
 80013c6:	4611      	mov	r1, r2
 80013c8:	602b      	str	r3, [r5, #0]
 80013ca:	f000 f96e 	bl	80016aa <_fstat>
 80013ce:	1c43      	adds	r3, r0, #1
 80013d0:	d102      	bne.n	80013d8 <_fstat_r+0x1c>
 80013d2:	682b      	ldr	r3, [r5, #0]
 80013d4:	b103      	cbz	r3, 80013d8 <_fstat_r+0x1c>
 80013d6:	6023      	str	r3, [r4, #0]
 80013d8:	bd38      	pop	{r3, r4, r5, pc}
 80013da:	bf00      	nop
 80013dc:	2000014c 	.word	0x2000014c

080013e0 <_isatty_r>:
 80013e0:	b538      	push	{r3, r4, r5, lr}
 80013e2:	4d06      	ldr	r5, [pc, #24]	; (80013fc <_isatty_r+0x1c>)
 80013e4:	2300      	movs	r3, #0
 80013e6:	4604      	mov	r4, r0
 80013e8:	4608      	mov	r0, r1
 80013ea:	602b      	str	r3, [r5, #0]
 80013ec:	f000 fac2 	bl	8001974 <_isatty>
 80013f0:	1c43      	adds	r3, r0, #1
 80013f2:	d102      	bne.n	80013fa <_isatty_r+0x1a>
 80013f4:	682b      	ldr	r3, [r5, #0]
 80013f6:	b103      	cbz	r3, 80013fa <_isatty_r+0x1a>
 80013f8:	6023      	str	r3, [r4, #0]
 80013fa:	bd38      	pop	{r3, r4, r5, pc}
 80013fc:	2000014c 	.word	0x2000014c

08001400 <_lseek_r>:
 8001400:	b538      	push	{r3, r4, r5, lr}
 8001402:	4d07      	ldr	r5, [pc, #28]	; (8001420 <_lseek_r+0x20>)
 8001404:	4604      	mov	r4, r0
 8001406:	4608      	mov	r0, r1
 8001408:	4611      	mov	r1, r2
 800140a:	2200      	movs	r2, #0
 800140c:	602a      	str	r2, [r5, #0]
 800140e:	461a      	mov	r2, r3
 8001410:	f000 f8c4 	bl	800159c <_lseek>
 8001414:	1c43      	adds	r3, r0, #1
 8001416:	d102      	bne.n	800141e <_lseek_r+0x1e>
 8001418:	682b      	ldr	r3, [r5, #0]
 800141a:	b103      	cbz	r3, 800141e <_lseek_r+0x1e>
 800141c:	6023      	str	r3, [r4, #0]
 800141e:	bd38      	pop	{r3, r4, r5, pc}
 8001420:	2000014c 	.word	0x2000014c

08001424 <__malloc_lock>:
 8001424:	4801      	ldr	r0, [pc, #4]	; (800142c <__malloc_lock+0x8>)
 8001426:	f7ff bb59 	b.w	8000adc <__retarget_lock_acquire_recursive>
 800142a:	bf00      	nop
 800142c:	20000144 	.word	0x20000144

08001430 <__malloc_unlock>:
 8001430:	4801      	ldr	r0, [pc, #4]	; (8001438 <__malloc_unlock+0x8>)
 8001432:	f7ff bb54 	b.w	8000ade <__retarget_lock_release_recursive>
 8001436:	bf00      	nop
 8001438:	20000144 	.word	0x20000144

0800143c <_read_r>:
 800143c:	b538      	push	{r3, r4, r5, lr}
 800143e:	4d07      	ldr	r5, [pc, #28]	; (800145c <_read_r+0x20>)
 8001440:	4604      	mov	r4, r0
 8001442:	4608      	mov	r0, r1
 8001444:	4611      	mov	r1, r2
 8001446:	2200      	movs	r2, #0
 8001448:	602a      	str	r2, [r5, #0]
 800144a:	461a      	mov	r2, r3
 800144c:	f000 f850 	bl	80014f0 <_read>
 8001450:	1c43      	adds	r3, r0, #1
 8001452:	d102      	bne.n	800145a <_read_r+0x1e>
 8001454:	682b      	ldr	r3, [r5, #0]
 8001456:	b103      	cbz	r3, 800145a <_read_r+0x1e>
 8001458:	6023      	str	r3, [r4, #0]
 800145a:	bd38      	pop	{r3, r4, r5, pc}
 800145c:	2000014c 	.word	0x2000014c

08001460 <findslot>:
 8001460:	4b0a      	ldr	r3, [pc, #40]	; (800148c <findslot+0x2c>)
 8001462:	b510      	push	{r4, lr}
 8001464:	4604      	mov	r4, r0
 8001466:	6818      	ldr	r0, [r3, #0]
 8001468:	b118      	cbz	r0, 8001472 <findslot+0x12>
 800146a:	6983      	ldr	r3, [r0, #24]
 800146c:	b90b      	cbnz	r3, 8001472 <findslot+0x12>
 800146e:	f7ff fa97 	bl	80009a0 <__sinit>
 8001472:	2c13      	cmp	r4, #19
 8001474:	d807      	bhi.n	8001486 <findslot+0x26>
 8001476:	4806      	ldr	r0, [pc, #24]	; (8001490 <findslot+0x30>)
 8001478:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 800147c:	3201      	adds	r2, #1
 800147e:	d002      	beq.n	8001486 <findslot+0x26>
 8001480:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8001484:	bd10      	pop	{r4, pc}
 8001486:	2000      	movs	r0, #0
 8001488:	e7fc      	b.n	8001484 <findslot+0x24>
 800148a:	bf00      	nop
 800148c:	20000000 	.word	0x20000000
 8001490:	200000a0 	.word	0x200000a0

08001494 <checkerror>:
 8001494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001496:	1c43      	adds	r3, r0, #1
 8001498:	4604      	mov	r4, r0
 800149a:	d109      	bne.n	80014b0 <checkerror+0x1c>
 800149c:	f7fe ffe6 	bl	800046c <__errno>
 80014a0:	2613      	movs	r6, #19
 80014a2:	4605      	mov	r5, r0
 80014a4:	2700      	movs	r7, #0
 80014a6:	4630      	mov	r0, r6
 80014a8:	4639      	mov	r1, r7
 80014aa:	beab      	bkpt	0x00ab
 80014ac:	4606      	mov	r6, r0
 80014ae:	602e      	str	r6, [r5, #0]
 80014b0:	4620      	mov	r0, r4
 80014b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080014b4 <error>:
 80014b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014b6:	4604      	mov	r4, r0
 80014b8:	f7fe ffd8 	bl	800046c <__errno>
 80014bc:	2613      	movs	r6, #19
 80014be:	4605      	mov	r5, r0
 80014c0:	2700      	movs	r7, #0
 80014c2:	4630      	mov	r0, r6
 80014c4:	4639      	mov	r1, r7
 80014c6:	beab      	bkpt	0x00ab
 80014c8:	4606      	mov	r6, r0
 80014ca:	602e      	str	r6, [r5, #0]
 80014cc:	4620      	mov	r0, r4
 80014ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080014d0 <_swiread>:
 80014d0:	b530      	push	{r4, r5, lr}
 80014d2:	b085      	sub	sp, #20
 80014d4:	e9cd 0101 	strd	r0, r1, [sp, #4]
 80014d8:	9203      	str	r2, [sp, #12]
 80014da:	2406      	movs	r4, #6
 80014dc:	ad01      	add	r5, sp, #4
 80014de:	4620      	mov	r0, r4
 80014e0:	4629      	mov	r1, r5
 80014e2:	beab      	bkpt	0x00ab
 80014e4:	4604      	mov	r4, r0
 80014e6:	4620      	mov	r0, r4
 80014e8:	f7ff ffd4 	bl	8001494 <checkerror>
 80014ec:	b005      	add	sp, #20
 80014ee:	bd30      	pop	{r4, r5, pc}

080014f0 <_read>:
 80014f0:	b570      	push	{r4, r5, r6, lr}
 80014f2:	460e      	mov	r6, r1
 80014f4:	4615      	mov	r5, r2
 80014f6:	f7ff ffb3 	bl	8001460 <findslot>
 80014fa:	4604      	mov	r4, r0
 80014fc:	b930      	cbnz	r0, 800150c <_read+0x1c>
 80014fe:	f7fe ffb5 	bl	800046c <__errno>
 8001502:	2309      	movs	r3, #9
 8001504:	6003      	str	r3, [r0, #0]
 8001506:	f04f 30ff 	mov.w	r0, #4294967295
 800150a:	bd70      	pop	{r4, r5, r6, pc}
 800150c:	6800      	ldr	r0, [r0, #0]
 800150e:	462a      	mov	r2, r5
 8001510:	4631      	mov	r1, r6
 8001512:	f7ff ffdd 	bl	80014d0 <_swiread>
 8001516:	1c43      	adds	r3, r0, #1
 8001518:	bf1f      	itttt	ne
 800151a:	6863      	ldrne	r3, [r4, #4]
 800151c:	1a28      	subne	r0, r5, r0
 800151e:	181b      	addne	r3, r3, r0
 8001520:	6063      	strne	r3, [r4, #4]
 8001522:	e7f2      	b.n	800150a <_read+0x1a>

08001524 <_swilseek>:
 8001524:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001526:	460c      	mov	r4, r1
 8001528:	4616      	mov	r6, r2
 800152a:	f7ff ff99 	bl	8001460 <findslot>
 800152e:	4605      	mov	r5, r0
 8001530:	b940      	cbnz	r0, 8001544 <_swilseek+0x20>
 8001532:	f7fe ff9b 	bl	800046c <__errno>
 8001536:	2309      	movs	r3, #9
 8001538:	6003      	str	r3, [r0, #0]
 800153a:	f04f 34ff 	mov.w	r4, #4294967295
 800153e:	4620      	mov	r0, r4
 8001540:	b003      	add	sp, #12
 8001542:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001544:	2e02      	cmp	r6, #2
 8001546:	d903      	bls.n	8001550 <_swilseek+0x2c>
 8001548:	f7fe ff90 	bl	800046c <__errno>
 800154c:	2316      	movs	r3, #22
 800154e:	e7f3      	b.n	8001538 <_swilseek+0x14>
 8001550:	2e01      	cmp	r6, #1
 8001552:	d112      	bne.n	800157a <_swilseek+0x56>
 8001554:	6843      	ldr	r3, [r0, #4]
 8001556:	18e4      	adds	r4, r4, r3
 8001558:	d4f6      	bmi.n	8001548 <_swilseek+0x24>
 800155a:	682b      	ldr	r3, [r5, #0]
 800155c:	260a      	movs	r6, #10
 800155e:	e9cd 3400 	strd	r3, r4, [sp]
 8001562:	466f      	mov	r7, sp
 8001564:	4630      	mov	r0, r6
 8001566:	4639      	mov	r1, r7
 8001568:	beab      	bkpt	0x00ab
 800156a:	4606      	mov	r6, r0
 800156c:	4630      	mov	r0, r6
 800156e:	f7ff ff91 	bl	8001494 <checkerror>
 8001572:	2800      	cmp	r0, #0
 8001574:	dbe1      	blt.n	800153a <_swilseek+0x16>
 8001576:	606c      	str	r4, [r5, #4]
 8001578:	e7e1      	b.n	800153e <_swilseek+0x1a>
 800157a:	2e02      	cmp	r6, #2
 800157c:	d1ed      	bne.n	800155a <_swilseek+0x36>
 800157e:	6803      	ldr	r3, [r0, #0]
 8001580:	9300      	str	r3, [sp, #0]
 8001582:	260c      	movs	r6, #12
 8001584:	466f      	mov	r7, sp
 8001586:	4630      	mov	r0, r6
 8001588:	4639      	mov	r1, r7
 800158a:	beab      	bkpt	0x00ab
 800158c:	4606      	mov	r6, r0
 800158e:	4630      	mov	r0, r6
 8001590:	f7ff ff80 	bl	8001494 <checkerror>
 8001594:	1c43      	adds	r3, r0, #1
 8001596:	d0d0      	beq.n	800153a <_swilseek+0x16>
 8001598:	4404      	add	r4, r0
 800159a:	e7de      	b.n	800155a <_swilseek+0x36>

0800159c <_lseek>:
 800159c:	f7ff bfc2 	b.w	8001524 <_swilseek>

080015a0 <_swiwrite>:
 80015a0:	b530      	push	{r4, r5, lr}
 80015a2:	b085      	sub	sp, #20
 80015a4:	e9cd 0101 	strd	r0, r1, [sp, #4]
 80015a8:	9203      	str	r2, [sp, #12]
 80015aa:	2405      	movs	r4, #5
 80015ac:	ad01      	add	r5, sp, #4
 80015ae:	4620      	mov	r0, r4
 80015b0:	4629      	mov	r1, r5
 80015b2:	beab      	bkpt	0x00ab
 80015b4:	4604      	mov	r4, r0
 80015b6:	4620      	mov	r0, r4
 80015b8:	f7ff ff6c 	bl	8001494 <checkerror>
 80015bc:	b005      	add	sp, #20
 80015be:	bd30      	pop	{r4, r5, pc}

080015c0 <_write>:
 80015c0:	b570      	push	{r4, r5, r6, lr}
 80015c2:	460e      	mov	r6, r1
 80015c4:	4615      	mov	r5, r2
 80015c6:	f7ff ff4b 	bl	8001460 <findslot>
 80015ca:	4604      	mov	r4, r0
 80015cc:	b930      	cbnz	r0, 80015dc <_write+0x1c>
 80015ce:	f7fe ff4d 	bl	800046c <__errno>
 80015d2:	2309      	movs	r3, #9
 80015d4:	6003      	str	r3, [r0, #0]
 80015d6:	f04f 30ff 	mov.w	r0, #4294967295
 80015da:	bd70      	pop	{r4, r5, r6, pc}
 80015dc:	6800      	ldr	r0, [r0, #0]
 80015de:	462a      	mov	r2, r5
 80015e0:	4631      	mov	r1, r6
 80015e2:	f7ff ffdd 	bl	80015a0 <_swiwrite>
 80015e6:	1e03      	subs	r3, r0, #0
 80015e8:	dbf5      	blt.n	80015d6 <_write+0x16>
 80015ea:	6862      	ldr	r2, [r4, #4]
 80015ec:	1ae8      	subs	r0, r5, r3
 80015ee:	4402      	add	r2, r0
 80015f0:	42ab      	cmp	r3, r5
 80015f2:	6062      	str	r2, [r4, #4]
 80015f4:	d1f1      	bne.n	80015da <_write+0x1a>
 80015f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80015fa:	2000      	movs	r0, #0
 80015fc:	f7ff bf5a 	b.w	80014b4 <error>

08001600 <_swiclose>:
 8001600:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001602:	2402      	movs	r4, #2
 8001604:	9001      	str	r0, [sp, #4]
 8001606:	ad01      	add	r5, sp, #4
 8001608:	4620      	mov	r0, r4
 800160a:	4629      	mov	r1, r5
 800160c:	beab      	bkpt	0x00ab
 800160e:	4604      	mov	r4, r0
 8001610:	4620      	mov	r0, r4
 8001612:	f7ff ff3f 	bl	8001494 <checkerror>
 8001616:	b003      	add	sp, #12
 8001618:	bd30      	pop	{r4, r5, pc}
	...

0800161c <_close>:
 800161c:	b538      	push	{r3, r4, r5, lr}
 800161e:	4605      	mov	r5, r0
 8001620:	f7ff ff1e 	bl	8001460 <findslot>
 8001624:	4604      	mov	r4, r0
 8001626:	b930      	cbnz	r0, 8001636 <_close+0x1a>
 8001628:	f7fe ff20 	bl	800046c <__errno>
 800162c:	2309      	movs	r3, #9
 800162e:	6003      	str	r3, [r0, #0]
 8001630:	f04f 30ff 	mov.w	r0, #4294967295
 8001634:	bd38      	pop	{r3, r4, r5, pc}
 8001636:	3d01      	subs	r5, #1
 8001638:	2d01      	cmp	r5, #1
 800163a:	d809      	bhi.n	8001650 <_close+0x34>
 800163c:	4b09      	ldr	r3, [pc, #36]	; (8001664 <_close+0x48>)
 800163e:	689a      	ldr	r2, [r3, #8]
 8001640:	691b      	ldr	r3, [r3, #16]
 8001642:	429a      	cmp	r2, r3
 8001644:	d104      	bne.n	8001650 <_close+0x34>
 8001646:	f04f 33ff 	mov.w	r3, #4294967295
 800164a:	6003      	str	r3, [r0, #0]
 800164c:	2000      	movs	r0, #0
 800164e:	e7f1      	b.n	8001634 <_close+0x18>
 8001650:	6820      	ldr	r0, [r4, #0]
 8001652:	f7ff ffd5 	bl	8001600 <_swiclose>
 8001656:	2800      	cmp	r0, #0
 8001658:	d1ec      	bne.n	8001634 <_close+0x18>
 800165a:	f04f 33ff 	mov.w	r3, #4294967295
 800165e:	6023      	str	r3, [r4, #0]
 8001660:	e7e8      	b.n	8001634 <_close+0x18>
 8001662:	bf00      	nop
 8001664:	200000a0 	.word	0x200000a0

08001668 <_swistat>:
 8001668:	b570      	push	{r4, r5, r6, lr}
 800166a:	460c      	mov	r4, r1
 800166c:	f7ff fef8 	bl	8001460 <findslot>
 8001670:	4605      	mov	r5, r0
 8001672:	b930      	cbnz	r0, 8001682 <_swistat+0x1a>
 8001674:	f7fe fefa 	bl	800046c <__errno>
 8001678:	2309      	movs	r3, #9
 800167a:	6003      	str	r3, [r0, #0]
 800167c:	f04f 30ff 	mov.w	r0, #4294967295
 8001680:	bd70      	pop	{r4, r5, r6, pc}
 8001682:	6863      	ldr	r3, [r4, #4]
 8001684:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001688:	6063      	str	r3, [r4, #4]
 800168a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800168e:	64a3      	str	r3, [r4, #72]	; 0x48
 8001690:	260c      	movs	r6, #12
 8001692:	4630      	mov	r0, r6
 8001694:	4629      	mov	r1, r5
 8001696:	beab      	bkpt	0x00ab
 8001698:	4605      	mov	r5, r0
 800169a:	4628      	mov	r0, r5
 800169c:	f7ff fefa 	bl	8001494 <checkerror>
 80016a0:	1c43      	adds	r3, r0, #1
 80016a2:	bf1c      	itt	ne
 80016a4:	6120      	strne	r0, [r4, #16]
 80016a6:	2000      	movne	r0, #0
 80016a8:	e7ea      	b.n	8001680 <_swistat+0x18>

080016aa <_fstat>:
 80016aa:	460b      	mov	r3, r1
 80016ac:	b510      	push	{r4, lr}
 80016ae:	2100      	movs	r1, #0
 80016b0:	4604      	mov	r4, r0
 80016b2:	2258      	movs	r2, #88	; 0x58
 80016b4:	4618      	mov	r0, r3
 80016b6:	f7fe ff03 	bl	80004c0 <memset>
 80016ba:	4601      	mov	r1, r0
 80016bc:	4620      	mov	r0, r4
 80016be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80016c2:	f7ff bfd1 	b.w	8001668 <_swistat>

080016c6 <_stat>:
 80016c6:	b538      	push	{r3, r4, r5, lr}
 80016c8:	460d      	mov	r5, r1
 80016ca:	4604      	mov	r4, r0
 80016cc:	2258      	movs	r2, #88	; 0x58
 80016ce:	2100      	movs	r1, #0
 80016d0:	4628      	mov	r0, r5
 80016d2:	f7fe fef5 	bl	80004c0 <memset>
 80016d6:	4620      	mov	r0, r4
 80016d8:	2100      	movs	r1, #0
 80016da:	f000 f811 	bl	8001700 <_swiopen>
 80016de:	1c43      	adds	r3, r0, #1
 80016e0:	4604      	mov	r4, r0
 80016e2:	d00b      	beq.n	80016fc <_stat+0x36>
 80016e4:	686b      	ldr	r3, [r5, #4]
 80016e6:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 80016ea:	606b      	str	r3, [r5, #4]
 80016ec:	4629      	mov	r1, r5
 80016ee:	f7ff ffbb 	bl	8001668 <_swistat>
 80016f2:	4605      	mov	r5, r0
 80016f4:	4620      	mov	r0, r4
 80016f6:	f7ff ff91 	bl	800161c <_close>
 80016fa:	462c      	mov	r4, r5
 80016fc:	4620      	mov	r0, r4
 80016fe:	bd38      	pop	{r3, r4, r5, pc}

08001700 <_swiopen>:
 8001700:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001704:	4b2a      	ldr	r3, [pc, #168]	; (80017b0 <_swiopen+0xb0>)
 8001706:	b097      	sub	sp, #92	; 0x5c
 8001708:	4681      	mov	r9, r0
 800170a:	460f      	mov	r7, r1
 800170c:	2500      	movs	r5, #0
 800170e:	461e      	mov	r6, r3
 8001710:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 8001714:	1c61      	adds	r1, r4, #1
 8001716:	d037      	beq.n	8001788 <_swiopen+0x88>
 8001718:	3501      	adds	r5, #1
 800171a:	2d14      	cmp	r5, #20
 800171c:	d1f8      	bne.n	8001710 <_swiopen+0x10>
 800171e:	f7fe fea5 	bl	800046c <__errno>
 8001722:	2318      	movs	r3, #24
 8001724:	6003      	str	r3, [r0, #0]
 8001726:	f04f 34ff 	mov.w	r4, #4294967295
 800172a:	e03d      	b.n	80017a8 <_swiopen+0xa8>
 800172c:	f3c7 4400 	ubfx	r4, r7, #16, #1
 8001730:	f240 6301 	movw	r3, #1537	; 0x601
 8001734:	07ba      	lsls	r2, r7, #30
 8001736:	bf48      	it	mi
 8001738:	f044 0402 	orrmi.w	r4, r4, #2
 800173c:	421f      	tst	r7, r3
 800173e:	bf18      	it	ne
 8001740:	f044 0404 	orrne.w	r4, r4, #4
 8001744:	073b      	lsls	r3, r7, #28
 8001746:	bf48      	it	mi
 8001748:	f024 0404 	bicmi.w	r4, r4, #4
 800174c:	4648      	mov	r0, r9
 800174e:	bf48      	it	mi
 8001750:	f044 0408 	orrmi.w	r4, r4, #8
 8001754:	f8cd 9000 	str.w	r9, [sp]
 8001758:	f7fe fd9a 	bl	8000290 <strlen>
 800175c:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8001760:	2401      	movs	r4, #1
 8001762:	4620      	mov	r0, r4
 8001764:	4641      	mov	r1, r8
 8001766:	beab      	bkpt	0x00ab
 8001768:	4604      	mov	r4, r0
 800176a:	2c00      	cmp	r4, #0
 800176c:	db07      	blt.n	800177e <_swiopen+0x7e>
 800176e:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 8001772:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 8001776:	2300      	movs	r3, #0
 8001778:	6073      	str	r3, [r6, #4]
 800177a:	462c      	mov	r4, r5
 800177c:	e014      	b.n	80017a8 <_swiopen+0xa8>
 800177e:	4620      	mov	r0, r4
 8001780:	f7ff fe98 	bl	80014b4 <error>
 8001784:	4604      	mov	r4, r0
 8001786:	e00f      	b.n	80017a8 <_swiopen+0xa8>
 8001788:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 800178c:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8001790:	46e8      	mov	r8, sp
 8001792:	d1cb      	bne.n	800172c <_swiopen+0x2c>
 8001794:	4641      	mov	r1, r8
 8001796:	4648      	mov	r0, r9
 8001798:	f7ff ff95 	bl	80016c6 <_stat>
 800179c:	3001      	adds	r0, #1
 800179e:	d0c5      	beq.n	800172c <_swiopen+0x2c>
 80017a0:	f7fe fe64 	bl	800046c <__errno>
 80017a4:	2311      	movs	r3, #17
 80017a6:	6003      	str	r3, [r0, #0]
 80017a8:	4620      	mov	r0, r4
 80017aa:	b017      	add	sp, #92	; 0x5c
 80017ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80017b0:	200000a0 	.word	0x200000a0

080017b4 <_get_semihosting_exts>:
 80017b4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80017b8:	4606      	mov	r6, r0
 80017ba:	460f      	mov	r7, r1
 80017bc:	482a      	ldr	r0, [pc, #168]	; (8001868 <_get_semihosting_exts+0xb4>)
 80017be:	2100      	movs	r1, #0
 80017c0:	4615      	mov	r5, r2
 80017c2:	f7ff ff9d 	bl	8001700 <_swiopen>
 80017c6:	462a      	mov	r2, r5
 80017c8:	4604      	mov	r4, r0
 80017ca:	2100      	movs	r1, #0
 80017cc:	4630      	mov	r0, r6
 80017ce:	f7fe fe77 	bl	80004c0 <memset>
 80017d2:	1c63      	adds	r3, r4, #1
 80017d4:	d016      	beq.n	8001804 <_get_semihosting_exts+0x50>
 80017d6:	4620      	mov	r0, r4
 80017d8:	f7ff fe42 	bl	8001460 <findslot>
 80017dc:	f04f 080c 	mov.w	r8, #12
 80017e0:	4681      	mov	r9, r0
 80017e2:	4640      	mov	r0, r8
 80017e4:	4649      	mov	r1, r9
 80017e6:	beab      	bkpt	0x00ab
 80017e8:	4680      	mov	r8, r0
 80017ea:	4640      	mov	r0, r8
 80017ec:	f7ff fe52 	bl	8001494 <checkerror>
 80017f0:	2803      	cmp	r0, #3
 80017f2:	dd02      	ble.n	80017fa <_get_semihosting_exts+0x46>
 80017f4:	1ec3      	subs	r3, r0, #3
 80017f6:	42ab      	cmp	r3, r5
 80017f8:	dc08      	bgt.n	800180c <_get_semihosting_exts+0x58>
 80017fa:	4620      	mov	r0, r4
 80017fc:	f7ff ff0e 	bl	800161c <_close>
 8001800:	f04f 34ff 	mov.w	r4, #4294967295
 8001804:	4620      	mov	r0, r4
 8001806:	b003      	add	sp, #12
 8001808:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800180c:	2204      	movs	r2, #4
 800180e:	eb0d 0102 	add.w	r1, sp, r2
 8001812:	4620      	mov	r0, r4
 8001814:	f7ff fe6c 	bl	80014f0 <_read>
 8001818:	2803      	cmp	r0, #3
 800181a:	ddee      	ble.n	80017fa <_get_semihosting_exts+0x46>
 800181c:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001820:	2b53      	cmp	r3, #83	; 0x53
 8001822:	d1ea      	bne.n	80017fa <_get_semihosting_exts+0x46>
 8001824:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8001828:	2b48      	cmp	r3, #72	; 0x48
 800182a:	d1e6      	bne.n	80017fa <_get_semihosting_exts+0x46>
 800182c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8001830:	2b46      	cmp	r3, #70	; 0x46
 8001832:	d1e2      	bne.n	80017fa <_get_semihosting_exts+0x46>
 8001834:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8001838:	2b42      	cmp	r3, #66	; 0x42
 800183a:	d1de      	bne.n	80017fa <_get_semihosting_exts+0x46>
 800183c:	2201      	movs	r2, #1
 800183e:	4639      	mov	r1, r7
 8001840:	4620      	mov	r0, r4
 8001842:	f7ff fe6f 	bl	8001524 <_swilseek>
 8001846:	2800      	cmp	r0, #0
 8001848:	dbd7      	blt.n	80017fa <_get_semihosting_exts+0x46>
 800184a:	462a      	mov	r2, r5
 800184c:	4631      	mov	r1, r6
 800184e:	4620      	mov	r0, r4
 8001850:	f7ff fe4e 	bl	80014f0 <_read>
 8001854:	4605      	mov	r5, r0
 8001856:	4620      	mov	r0, r4
 8001858:	f7ff fee0 	bl	800161c <_close>
 800185c:	4628      	mov	r0, r5
 800185e:	f7ff fe19 	bl	8001494 <checkerror>
 8001862:	4604      	mov	r4, r0
 8001864:	e7ce      	b.n	8001804 <_get_semihosting_exts+0x50>
 8001866:	bf00      	nop
 8001868:	08001bdb 	.word	0x08001bdb

0800186c <initialise_semihosting_exts>:
 800186c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800186e:	4d0a      	ldr	r5, [pc, #40]	; (8001898 <initialise_semihosting_exts+0x2c>)
 8001870:	4c0a      	ldr	r4, [pc, #40]	; (800189c <initialise_semihosting_exts+0x30>)
 8001872:	2100      	movs	r1, #0
 8001874:	2201      	movs	r2, #1
 8001876:	a801      	add	r0, sp, #4
 8001878:	6029      	str	r1, [r5, #0]
 800187a:	6022      	str	r2, [r4, #0]
 800187c:	f7ff ff9a 	bl	80017b4 <_get_semihosting_exts>
 8001880:	2800      	cmp	r0, #0
 8001882:	dd07      	ble.n	8001894 <initialise_semihosting_exts+0x28>
 8001884:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001888:	f003 0201 	and.w	r2, r3, #1
 800188c:	f003 0302 	and.w	r3, r3, #2
 8001890:	602a      	str	r2, [r5, #0]
 8001892:	6023      	str	r3, [r4, #0]
 8001894:	b003      	add	sp, #12
 8001896:	bd30      	pop	{r4, r5, pc}
 8001898:	20000064 	.word	0x20000064
 800189c:	20000068 	.word	0x20000068

080018a0 <_has_ext_stdout_stderr>:
 80018a0:	b510      	push	{r4, lr}
 80018a2:	4c04      	ldr	r4, [pc, #16]	; (80018b4 <_has_ext_stdout_stderr+0x14>)
 80018a4:	6822      	ldr	r2, [r4, #0]
 80018a6:	2a00      	cmp	r2, #0
 80018a8:	da01      	bge.n	80018ae <_has_ext_stdout_stderr+0xe>
 80018aa:	f7ff ffdf 	bl	800186c <initialise_semihosting_exts>
 80018ae:	6820      	ldr	r0, [r4, #0]
 80018b0:	bd10      	pop	{r4, pc}
 80018b2:	bf00      	nop
 80018b4:	20000068 	.word	0x20000068

080018b8 <initialise_monitor_handles>:
 80018b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80018bc:	b085      	sub	sp, #20
 80018be:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8001970 <initialise_monitor_handles+0xb8>
 80018c2:	f8cd 9004 	str.w	r9, [sp, #4]
 80018c6:	2303      	movs	r3, #3
 80018c8:	2400      	movs	r4, #0
 80018ca:	9303      	str	r3, [sp, #12]
 80018cc:	f10d 0804 	add.w	r8, sp, #4
 80018d0:	9402      	str	r4, [sp, #8]
 80018d2:	2501      	movs	r5, #1
 80018d4:	4628      	mov	r0, r5
 80018d6:	4641      	mov	r1, r8
 80018d8:	beab      	bkpt	0x00ab
 80018da:	4605      	mov	r5, r0
 80018dc:	4e20      	ldr	r6, [pc, #128]	; (8001960 <initialise_monitor_handles+0xa8>)
 80018de:	4a21      	ldr	r2, [pc, #132]	; (8001964 <initialise_monitor_handles+0xac>)
 80018e0:	6035      	str	r5, [r6, #0]
 80018e2:	4623      	mov	r3, r4
 80018e4:	f04f 31ff 	mov.w	r1, #4294967295
 80018e8:	4614      	mov	r4, r2
 80018ea:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 80018ee:	3301      	adds	r3, #1
 80018f0:	2b14      	cmp	r3, #20
 80018f2:	d1fa      	bne.n	80018ea <initialise_monitor_handles+0x32>
 80018f4:	f7ff ffd4 	bl	80018a0 <_has_ext_stdout_stderr>
 80018f8:	4d1b      	ldr	r5, [pc, #108]	; (8001968 <initialise_monitor_handles+0xb0>)
 80018fa:	b1d0      	cbz	r0, 8001932 <initialise_monitor_handles+0x7a>
 80018fc:	f04f 0a03 	mov.w	sl, #3
 8001900:	2304      	movs	r3, #4
 8001902:	f8cd 9004 	str.w	r9, [sp, #4]
 8001906:	2701      	movs	r7, #1
 8001908:	f8cd a00c 	str.w	sl, [sp, #12]
 800190c:	9302      	str	r3, [sp, #8]
 800190e:	4638      	mov	r0, r7
 8001910:	4641      	mov	r1, r8
 8001912:	beab      	bkpt	0x00ab
 8001914:	4683      	mov	fp, r0
 8001916:	4b15      	ldr	r3, [pc, #84]	; (800196c <initialise_monitor_handles+0xb4>)
 8001918:	f8cd 9004 	str.w	r9, [sp, #4]
 800191c:	f8c3 b000 	str.w	fp, [r3]
 8001920:	2308      	movs	r3, #8
 8001922:	f8cd a00c 	str.w	sl, [sp, #12]
 8001926:	9302      	str	r3, [sp, #8]
 8001928:	4638      	mov	r0, r7
 800192a:	4641      	mov	r1, r8
 800192c:	beab      	bkpt	0x00ab
 800192e:	4607      	mov	r7, r0
 8001930:	602f      	str	r7, [r5, #0]
 8001932:	682b      	ldr	r3, [r5, #0]
 8001934:	3301      	adds	r3, #1
 8001936:	bf02      	ittt	eq
 8001938:	4b0c      	ldreq	r3, [pc, #48]	; (800196c <initialise_monitor_handles+0xb4>)
 800193a:	681b      	ldreq	r3, [r3, #0]
 800193c:	602b      	streq	r3, [r5, #0]
 800193e:	6833      	ldr	r3, [r6, #0]
 8001940:	6023      	str	r3, [r4, #0]
 8001942:	2600      	movs	r6, #0
 8001944:	6066      	str	r6, [r4, #4]
 8001946:	f7ff ffab 	bl	80018a0 <_has_ext_stdout_stderr>
 800194a:	b130      	cbz	r0, 800195a <initialise_monitor_handles+0xa2>
 800194c:	4b07      	ldr	r3, [pc, #28]	; (800196c <initialise_monitor_handles+0xb4>)
 800194e:	681b      	ldr	r3, [r3, #0]
 8001950:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8001954:	682b      	ldr	r3, [r5, #0]
 8001956:	e9c4 3604 	strd	r3, r6, [r4, #16]
 800195a:	b005      	add	sp, #20
 800195c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001960:	20000098 	.word	0x20000098
 8001964:	200000a0 	.word	0x200000a0
 8001968:	20000094 	.word	0x20000094
 800196c:	2000009c 	.word	0x2000009c
 8001970:	08001bf1 	.word	0x08001bf1

08001974 <_isatty>:
 8001974:	b570      	push	{r4, r5, r6, lr}
 8001976:	f7ff fd73 	bl	8001460 <findslot>
 800197a:	2509      	movs	r5, #9
 800197c:	4604      	mov	r4, r0
 800197e:	b920      	cbnz	r0, 800198a <_isatty+0x16>
 8001980:	f7fe fd74 	bl	800046c <__errno>
 8001984:	6005      	str	r5, [r0, #0]
 8001986:	4620      	mov	r0, r4
 8001988:	bd70      	pop	{r4, r5, r6, pc}
 800198a:	4628      	mov	r0, r5
 800198c:	4621      	mov	r1, r4
 800198e:	beab      	bkpt	0x00ab
 8001990:	4604      	mov	r4, r0
 8001992:	2c01      	cmp	r4, #1
 8001994:	d0f7      	beq.n	8001986 <_isatty+0x12>
 8001996:	f7fe fd69 	bl	800046c <__errno>
 800199a:	2400      	movs	r4, #0
 800199c:	4605      	mov	r5, r0
 800199e:	2613      	movs	r6, #19
 80019a0:	4630      	mov	r0, r6
 80019a2:	4621      	mov	r1, r4
 80019a4:	beab      	bkpt	0x00ab
 80019a6:	4606      	mov	r6, r0
 80019a8:	602e      	str	r6, [r5, #0]
 80019aa:	e7ec      	b.n	8001986 <_isatty+0x12>

080019ac <_init>:
 80019ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019ae:	bf00      	nop
 80019b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019b2:	bc08      	pop	{r3}
 80019b4:	469e      	mov	lr, r3
 80019b6:	4770      	bx	lr

080019b8 <_fini>:
 80019b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019ba:	bf00      	nop
 80019bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019be:	bc08      	pop	{r3}
 80019c0:	469e      	mov	lr, r3
 80019c2:	4770      	bx	lr
